Contract ElectricVehiclePurchase{
	PA Person
	CA Ca
	Token token{
		string model,
		string name,
		string color,
		string seat,
		uint Voltage,
		ufixed power,
		uint quantity,
		uint price,
		uint sum,
		string Remark
	}
	init {
		s Person Buyer = ('ChongQing Olympic Sports Center',
			a'0x5B38Da6a701c568545dCfcB03FcB875f56beddC4')
		s Person Seller = ('ShenZhen AoHu Electric Vehicle Co., Ltd.',
			a'0x5B38Da6a701c568545dCfcB03FcB875f56beddC4')
		s Ca Arbitration = ('arbitration institution',
			a'0x5B38Da6a701c568545dCfcB03FcB875f56beddC4')
		o token Service =('AH-Y14B','14ElectricVehicle','white','regular',72,7.5,1,49800,49800,'Shipping fee not included') 
	}
	ContractMessage{
	  string faultName='',
	  date signTime=2015/09/01,00:00,
	  string signPlace='ShenZhen',
	  ufixed shippingFee=0,
	  ufixed default=1000,
	  bool checkResult=false,
	  duration period=10 days,
	  duration warranty=365 days,
	  ufixed Proportion=0.5
	}
	
	Rule{
		//预付50%
		rule1:
		Buyer transfer(Seller,o Service.sum*Proportion);
		
		//10天内送货并报告送货费用
		rule2:
		setMessage(ufixed shippingFee)
		Con: isDone(rule1) and !isTime(signTime+period),
		Seller;
		
		//验收并支付费用,可重复检验
		repeat
		rule3:
		setMessage(bool checkResult)
		Con: isDone(rule2) and isTime(signTime+period),
		Buyer 
		sub{
			Con:isTrue(checkResult),
			transfer(Seller,o Service.sum*Proportion+shippingFee) and change(ContractState,finish)
		};
		
		//申请保修
		repeat
		rule4:
		Con: isDone(rule3) and !isTime(signTime+warranty),
		Buyer;
		
		//逾期付款
		rule5:
		setMessage(new uint daynum)
		Con: !isDone(rule3) and isTime(signTime+2*period),
		Seller transfer(Buyer,default*daynum) and change(ContractState,terminate);
		
		//逾期交货
		rule6:
		setMessage(new uint daynum)
		Con: !isDone(rule2) and isTime(signTime+2*period),
		Buyer transfer(Seller,default*daynum) and change(ContractState,terminate)
		
	}
	
	require:isDone,isTime,isTrue,transfer;
}