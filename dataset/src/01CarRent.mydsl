Contract CarRent{
	PA Person
	CA Ca
	Token token{
	  string name,	
	  uint number,
	  uint unit_price,
	  uint price
	}
	init {
		s Person Buyer = ('ShanXi Provincial Department of Housing and Urban-Rural Development Agency Supplier',
			a'0x5B38Da6a701c568545dCfcB03FcB875f56beddC4')
		s Person Seller = ('XiAn YingBin Auto Car Service',
			a'0x5B38Da6a701c568545dCfcB03FcB875f56beddC4')
		s Ca Arbitration = ('arbitration institution',
			a'0x5B38Da6a701c568545dCfcB03FcB875f56beddC4')
		o token Service =('vehicle rental service',3,11600,34800) 
	}
	ContractMessage{
	  ufixed default11=0.02,
	  ufixed default12=0.05,
	  ufixed default2=0.05,
	  uint dayNum=0,
	  string faultName='',
	  ufixed amount=0,
	  date signTime=2022/11/09,00:00,
	  string signPlaca='XiAn',
	  date startTime=2023/07/10,00:00,
	  date finishTime=2023/07/31,00:00
	}
	
	Conditions[
		time1:within 10 days after checkThing,
		time2:within 7 days after checkThing,
		trueCheck:isDone(checkThing) And isTrue(checkResult),
		totalCheck: trueCheck And time1,
		logic1:logic(price*dayNum*default11,price*default12,>)
	]
	
	Operations[
		end:change(ContractState,finish),
		end2: change(ContractState,terminate)
	]
	
	Rule{
		//送货
		delivery:
		Con:isTime(startTime) and before finishTime,
		Seller;
		
		//确认收货并检查
		checkThing:
		setMessage(new bool checkResult)
		Con: isDone(delivery),
		Buyer;
		
		//检查结果为好，10天内付钱，合约结束
		check_good:
		Con: totalCheck or isDone(postpone_Buyer),
		Buyer transfer(Seller,o Service.price) and end;
		
		//检查结果不好，7天内发起退货
		check_false:
		Con: isDone(checkThing)and !isTrue(checkResult) and time2,
		Buyer;
		
		//买家退货，卖家可重新发货
		return:
		Con: isDone(check_false) and within 3 days after check_false,
		Buyer change(delivery,false) and change(check_good,false);
		
		//卖家发货推迟
		postpone_Seller:
		setMessage(uint dayNum)
		Con: isTime(finishTime) and !isDone(delivery),
		Buyer change(delivery,true)
		sub{
			Con: logic1,  
			change(price,price-price*dayNum*default12)
		}
		sub{
			Con: !logic1,  
			change(price,price-price*dayNum*default11)
		};
		
		//买家付款推迟
		postpone_Buyer:
		setMessage(uint dayNum)
		Con: trueCheck and !time1 and !isDone(check_good),
		Seller
		sub{
			Con: logic1,  
			change(price,price+price*dayNum*default12)
		}
		sub{
			Con: !logic1,  
			change(price,price+price*dayNum*default11)
		};
		
		//卖家终止
		terminate_Seller:
		Seller transfer(Buyer,default2*price) and end2;
		
		//买家终止
		terminate_Buyer:
		Buyer transfer(Seller,default2*price) and end2
		
		//仲裁机构仲裁过错方，过错方交罚金
		Addition[
		arbitrationClause:
		setMessage(string faultName,ufixed amount)
		Arbitration;
		
		buyer_fault:
		Con: isDone(arbitrationClause) and logic(faultName,s Buyer.name,==),
		Buyer transfer(Seller,amount) and end;
		
		seller_fault:
		Con: isDone(arbitrationClause) and logic(faultName,s Seller.name,==),
		Seller transfer(Buyer,amount) and end
		]
	}
	
	require:isDone,isTime,isTrue,transfer;
}