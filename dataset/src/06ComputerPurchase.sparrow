Contract ComputerPurchase{
	PA Person
	CA Ca
	Token token{
	  string name,
	  string ID,	
	  uint number,
	  ufixed unit_price,
	  uint price
	}
	Init {
		Person Buyer = ('Boyue Kindergarten, Jianghan District, Wuhan City', a'0x5B38Da6a701c568545dCfcB03FcB875f56beddC4')
		Person Seller = ('Wuhan Dizhihou Trading Co., Ltd.', a'0x5B38Da6a701c568545dCfcB03FcB875f56beddC4')
		Ca Arbitration = ('arbitration institution', a'0x5B38Da6a701c568545dCfcB03FcB875f56beddC4'),
		token Service =('computer','M43Y',1,4950,4950) 
	}
	ContractMessage{
	  string place='',
	  date giveTime=2023/02/21,00:00,
	  string faultName='',
	  ufixed amount=0,
	  bool checkResult=false,
	  duration period=30 days,
	  uint dayNum=0,
	  ufixed Proportion=0.0001
	}
	
	Conditions[
		delivery1: isDone(rule2) and within 3 days after rule2 ,
		delivery2: isDone(rule2_2) and within 3 days after rule2_2
	]
	
	Operations[
		end:assign(ContractState,finish),
		end2: assign(ContractState,terminate)
	]
	
	Rules{
		// Buyer specifies delivery location
		rule1:SetMessage(string place) Buyer;
		
		// Seller delivers on scheduled date
		rule2: If: isDone(rule1) and logic(now,giveTime,==), Seller;
		
		// Seller delays delivery within 30 days
		rule2_2: SetMessage(uint dayNum) If: isTime(giveTime) and !isTime(giveTime+period) and !isDone(rule2), Seller transfer(Buyer,dayNum*Proportion*o Service.price)
		
		// Seller delays more than 30 days, contract terminated
		rule2_3:
		If: isTime(giveTime+period) and !isDone(rule2) and !isDone(rule2_2),
		Buyer assign(ContractState,terminate);
		
		// Buyer confirms delivery, rejects if quality fails
		rule3:
		SetMessage(bool checkResult)
		If: delivery1 or delivery2 ,
		Buyer transfer(Seller,o Service.price) and end
		SubRule{
			If:!isTrue(checkResult),
			assign(ContractState,terminate)
		};
		
		// Buyer unconditionally rejects goods
		rule4:
		If: delivery1 or delivery2 and !isDone(rule3),
		Buyer transfer(Seller,o Service.price*Proportion) and assign(ContractState,terminate)
		
		
		// Arbitration determines fault party, who pays penalty
		Additional[
		arbitrationClause:
		SetMessage(string faultName,ufixed amount)
		Arbitration;
		
		buyer_fault:
		If: isDone(arbitrationClause) and logic(faultName,s Buyer.name,==),
		Buyer transfer(Seller,amount) and end2;
		
		seller_fault:
		If: isDone(arbitrationClause) and logic(faultName,s Seller.name,==),
		Seller transfer(Buyer,amount) and end2
		]
		
	}
	
	Require:isDone,isTime,isTrue,transfer;
}