/*
 * generated by Xtext 2.29.0
 */
grammar InternalSparrow;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.SparrowGrammarAccess;

}

@parser::members {

 	private SparrowGrammarAccess grammarAccess;

    public InternalSparrowParser(TokenStream input, SparrowGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected SparrowGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='import'
			{
				newLeafNode(otherlv_0, grammarAccess.getModelAccess().getImportKeyword_0_0());
			}
			(
				(
					lv_packageName_1_0=RULE_ID
					{
						newLeafNode(lv_packageName_1_0, grammarAccess.getModelAccess().getPackageNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getModelRule());
						}
						addWithLastConsumed(
							$current,
							"packageName",
							lv_packageName_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)*
		otherlv_2='Contract'
		{
			newLeafNode(otherlv_2, grammarAccess.getModelAccess().getContractKeyword_1());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4='extends'
			{
				newLeafNode(otherlv_4, grammarAccess.getModelAccess().getExtendsKeyword_3_0());
			}
			(
				(
					lv_extendName_5_0=RULE_ID
					{
						newLeafNode(lv_extendName_5_0, grammarAccess.getModelAccess().getExtendNameIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getModelRule());
						}
						setWithLastConsumed(
							$current,
							"extendName",
							lv_extendName_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getSubjectsSubjectParserRuleCall_5_0());
				}
				lv_subjects_7_0=ruleSubject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"subjects",
						lv_subjects_7_0,
						"org.xtext.example.mydsl.Sparrow.Subject");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getObjectsObjectParserRuleCall_6_0());
				}
				lv_objects_8_0=ruleObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"objects",
						lv_objects_8_0,
						"org.xtext.example.mydsl.Sparrow.Object");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getGroupGroupParserRuleCall_7_0());
				}
				lv_group_9_0=ruleGroup
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"group",
						lv_group_9_0,
						"org.xtext.example.mydsl.Sparrow.Group");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getInitializeInitializeParserRuleCall_8_0());
				}
				lv_initialize_10_0=ruleInitialize
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"initialize",
						lv_initialize_10_0,
						"org.xtext.example.mydsl.Sparrow.Initialize");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getContractMessageContractMessageParserRuleCall_9_0());
				}
				lv_contractMessage_11_0=ruleContractMessage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"contractMessage",
						lv_contractMessage_11_0,
						"org.xtext.example.mydsl.Sparrow.ContractMessage");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getConditionsConditionParserRuleCall_10_0());
				}
				lv_Conditions_12_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"Conditions",
						lv_Conditions_12_0,
						"org.xtext.example.mydsl.Sparrow.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getOperationsOperationParserRuleCall_11_0());
				}
				lv_operations_13_0=ruleOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"operations",
						lv_operations_13_0,
						"org.xtext.example.mydsl.Sparrow.Operation");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getRuleStructuresRuleStructureParserRuleCall_12_0());
				}
				lv_ruleStructures_14_0=ruleRuleStructure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"ruleStructures",
						lv_ruleStructures_14_0,
						"org.xtext.example.mydsl.Sparrow.RuleStructure");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getRequireRequireParserRuleCall_13_0());
				}
				lv_require_15_0=ruleRequire
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"require",
						lv_require_15_0,
						"org.xtext.example.mydsl.Sparrow.Require");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_14());
		}
	)?
;

// Entry rule entryRuleRequire
entryRuleRequire returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequireRule()); }
	iv_ruleRequire=ruleRequire
	{ $current=$iv_ruleRequire.current; }
	EOF;

// Rule Require
ruleRequire returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Require'
		{
			newLeafNode(otherlv_0, grammarAccess.getRequireAccess().getRequireKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getRequireAccess().getColonKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRequireAccess().getValueConditiontypeParserRuleCall_2_0_0());
					}
					lv_value_2_1=ruleconditiontype
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequireRule());
						}
						add(
							$current,
							"value",
							lv_value_2_1,
							"org.xtext.example.mydsl.Sparrow.conditiontype");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getRequireAccess().getValueActiontypeParserRuleCall_2_0_1());
					}
					lv_value_2_2=ruleactiontype
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequireRule());
						}
						add(
							$current,
							"value",
							lv_value_2_2,
							"org.xtext.example.mydsl.Sparrow.actiontype");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getRequireAccess().getCommaKeyword_3_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getRequireAccess().getValueConditiontypeParserRuleCall_3_1_0_0());
						}
						lv_value_4_1=ruleconditiontype
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRequireRule());
							}
							add(
								$current,
								"value",
								lv_value_4_1,
								"org.xtext.example.mydsl.Sparrow.conditiontype");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getRequireAccess().getValueActiontypeParserRuleCall_3_1_0_1());
						}
						lv_value_4_2=ruleactiontype
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRequireRule());
							}
							add(
								$current,
								"value",
								lv_value_4_2,
								"org.xtext.example.mydsl.Sparrow.actiontype");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getRequireAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleconditiontype
entryRuleconditiontype returns [String current=null]:
	{ newCompositeNode(grammarAccess.getConditiontypeRule()); }
	iv_ruleconditiontype=ruleconditiontype
	{ $current=$iv_ruleconditiontype.current.getText(); }
	EOF;

// Rule conditiontype
ruleconditiontype returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='isTime'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditiontypeAccess().getIsTimeKeyword_0());
		}
		    |
		kw='isTrue'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditiontypeAccess().getIsTrueKeyword_1());
		}
		    |
		kw='logic'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditiontypeAccess().getLogicKeyword_2());
		}
		    |
		kw='check'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditiontypeAccess().getCheckKeyword_3());
		}
		    |
		kw='isCompleted'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditiontypeAccess().getIsCompletedKeyword_4());
		}
		    |
		kw='isDone'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditiontypeAccess().getIsDoneKeyword_5());
		}
		    |
		kw='isRequest'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditiontypeAccess().getIsRequestKeyword_6());
		}
		    |
		kw='compareString'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditiontypeAccess().getCompareStringKeyword_7());
		}
		    |
		kw='timeSub'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditiontypeAccess().getTimeSubKeyword_8());
		}
		    |
		kw='SetDate'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditiontypeAccess().getSetDateKeyword_9());
		}
	)
;

// Entry rule entryRuleactiontype
entryRuleactiontype returns [String current=null]:
	{ newCompositeNode(grammarAccess.getActiontypeRule()); }
	iv_ruleactiontype=ruleactiontype
	{ $current=$iv_ruleactiontype.current.getText(); }
	EOF;

// Rule actiontype
ruleactiontype returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='transfer'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActiontypeAccess().getTransferKeyword_0());
		}
		    |
		kw='changeState'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getActiontypeAccess().getChangeStateKeyword_1());
		}
	)
;

// Entry rule entryRuleInitialize
entryRuleInitialize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitializeRule()); }
	iv_ruleInitialize=ruleInitialize
	{ $current=$iv_ruleInitialize.current; }
	EOF;

// Rule Initialize
ruleInitialize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInitializeAccess().getInitializeAction_0(),
					$current);
			}
		)
		otherlv_1='Init'
		{
			newLeafNode(otherlv_1, grammarAccess.getInitializeAccess().getInitKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getInitializeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInitializeAccess().getInitsInitExpressionsParserRuleCall_3_0());
				}
				lv_inits_3_0=ruleinitExpressions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitializeRule());
					}
					add(
						$current,
						"inits",
						lv_inits_3_0,
						"org.xtext.example.mydsl.Sparrow.initExpressions");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getInitializeAccess().getCommaKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInitializeAccess().getInitoInitExpressionoParserRuleCall_5_0());
				}
				lv_inito_5_0=ruleinitExpressiono
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitializeRule());
					}
					add(
						$current,
						"inito",
						lv_inito_5_0,
						"org.xtext.example.mydsl.Sparrow.initExpressiono");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getInitializeAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleinitExpressions
entryRuleinitExpressions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitExpressionsRule()); }
	iv_ruleinitExpressions=ruleinitExpressions
	{ $current=$iv_ruleinitExpressions.current; }
	EOF;

// Rule initExpressions
ruleinitExpressions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInitExpressionsRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getInitExpressionsAccess().getSubtypeSubjectCrossReference_0_0());
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInitExpressionsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInitExpressionsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getInitExpressionsAccess().getEqualsSignKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getInitExpressionsAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInitExpressionsAccess().getValueValueParserRuleCall_4_0());
				}
				lv_value_4_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitExpressionsRule());
					}
					add(
						$current,
						"value",
						lv_value_4_0,
						"org.xtext.example.mydsl.Sparrow.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getInitExpressionsAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInitExpressionsAccess().getValueValueParserRuleCall_5_1_0());
					}
					lv_value_6_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInitExpressionsRule());
						}
						add(
							$current,
							"value",
							lv_value_6_0,
							"org.xtext.example.mydsl.Sparrow.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getInitExpressionsAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleinitExpressiono
entryRuleinitExpressiono returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitExpressionoRule()); }
	iv_ruleinitExpressiono=ruleinitExpressiono
	{ $current=$iv_ruleinitExpressiono.current; }
	EOF;

// Rule initExpressiono
ruleinitExpressiono returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInitExpressionoRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getInitExpressionoAccess().getObtypeObjectCrossReference_0_0());
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInitExpressionoAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInitExpressionoRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getInitExpressionoAccess().getEqualsSignKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getInitExpressionoAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInitExpressionoAccess().getValueValueParserRuleCall_4_0());
				}
				lv_value_4_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitExpressionoRule());
					}
					add(
						$current,
						"value",
						lv_value_4_0,
						"org.xtext.example.mydsl.Sparrow.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getInitExpressionoAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInitExpressionoAccess().getValueValueParserRuleCall_5_1_0());
					}
					lv_value_6_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInitExpressionoRule());
						}
						add(
							$current,
							"value",
							lv_value_6_0,
							"org.xtext.example.mydsl.Sparrow.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getInitExpressionoAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleGroup
entryRuleGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroupRule()); }
	iv_ruleGroup=ruleGroup
	{ $current=$iv_ruleGroup.current; }
	EOF;

// Rule Group
ruleGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Group'
		{
			newLeafNode(otherlv_0, grammarAccess.getGroupAccess().getGroupKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGroupRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getGroupAccess().getSubtypeSubjectCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getGroupAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGroupRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGroupRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getGroupAccess().getValueInitExpressionsCrossReference_4_0());
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getGroupAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGroupRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getGroupAccess().getValueInitExpressionsCrossReference_5_1_0());
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleSubject
entryRuleSubject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubjectRule()); }
	iv_ruleSubject=ruleSubject
	{ $current=$iv_ruleSubject.current; }
	EOF;

// Rule Subject
ruleSubject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_type_0_1='RA'
					{
						newLeafNode(lv_type_0_1, grammarAccess.getSubjectAccess().getTypeRAKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSubjectRule());
						}
						setWithLastConsumed($current, "type", lv_type_0_1, null);
					}
					    |
					lv_type_0_2='AA'
					{
						newLeafNode(lv_type_0_2, grammarAccess.getSubjectAccess().getTypeAAKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSubjectRule());
						}
						setWithLastConsumed($current, "type", lv_type_0_2, null);
					}
					    |
					lv_type_0_3='CA'
					{
						newLeafNode(lv_type_0_3, grammarAccess.getSubjectAccess().getTypeCAKeyword_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSubjectRule());
						}
						setWithLastConsumed($current, "type", lv_type_0_3, null);
					}
					    |
					lv_type_0_4='PA'
					{
						newLeafNode(lv_type_0_4, grammarAccess.getSubjectAccess().getTypePAKeyword_0_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSubjectRule());
						}
						setWithLastConsumed($current, "type", lv_type_0_4, null);
					}
				)
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSubjectAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubjectRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSubjectAccess().getSubjectExpressionSubjectExpressionParserRuleCall_2_0());
				}
				lv_subjectExpression_2_0=ruleSubjectExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubjectRule());
					}
					set(
						$current,
						"subjectExpression",
						lv_subjectExpression_2_0,
						"org.xtext.example.mydsl.Sparrow.SubjectExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSubjectExpression
entryRuleSubjectExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubjectExpressionRule()); }
	iv_ruleSubjectExpression=ruleSubjectExpression
	{ $current=$iv_ruleSubjectExpression.current; }
	EOF;

// Rule SubjectExpression
ruleSubjectExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getSubjectExpressionAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubjectExpressionAccess().getKeyValueKeyvalueParserRuleCall_1_0());
				}
				lv_keyValue_1_0=rulekeyvalue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubjectExpressionRule());
					}
					add(
						$current,
						"keyValue",
						lv_keyValue_1_0,
						"org.xtext.example.mydsl.Sparrow.keyvalue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getSubjectExpressionAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSubjectExpressionAccess().getKeyValueKeyvalueParserRuleCall_2_1_0());
					}
					lv_keyValue_3_0=rulekeyvalue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubjectExpressionRule());
						}
						add(
							$current,
							"keyValue",
							lv_keyValue_3_0,
							"org.xtext.example.mydsl.Sparrow.keyvalue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSubjectExpressionAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleContractMessage
entryRuleContractMessage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContractMessageRule()); }
	iv_ruleContractMessage=ruleContractMessage
	{ $current=$iv_ruleContractMessage.current; }
	EOF;

// Rule ContractMessage
ruleContractMessage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ContractMessage'
		{
			newLeafNode(otherlv_0, grammarAccess.getContractMessageAccess().getContractMessageKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getContractMessageAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContractMessageAccess().getMessageMessageParserRuleCall_2_0());
				}
				lv_message_2_0=ruleMessage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContractMessageRule());
					}
					add(
						$current,
						"message",
						lv_message_2_0,
						"org.xtext.example.mydsl.Sparrow.Message");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getContractMessageAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getContractMessageAccess().getMessageMessageParserRuleCall_3_1_0());
					}
					lv_message_4_0=ruleMessage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContractMessageRule());
						}
						add(
							$current,
							"message",
							lv_message_4_0,
							"org.xtext.example.mydsl.Sparrow.Message");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getContractMessageAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleMessage
entryRuleMessage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMessageRule()); }
	iv_ruleMessage=ruleMessage
	{ $current=$iv_ruleMessage.current; }
	EOF;

// Rule Message
ruleMessage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMessageAccess().getTypeKeyvalueParserRuleCall_0_0());
				}
				lv_type_0_0=rulekeyvalue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMessageRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.xtext.example.mydsl.Sparrow.keyvalue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getMessageAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMessageAccess().getValueValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMessageRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.Sparrow.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulekeyvalue
entryRulekeyvalue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyvalueRule()); }
	iv_rulekeyvalue=rulekeyvalue
	{ $current=$iv_rulekeyvalue.current; }
	EOF;

// Rule keyvalue
rulekeyvalue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyvalueAccess().getTypeTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruletype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyvalueRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.xtext.example.mydsl.Sparrow.type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getKeyvalueAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getKeyvalueRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuletype
entryRuletype returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruletype=ruletype
	{ $current=$iv_ruletype.current.getText(); }
	EOF;

// Rule type
ruletype returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='string'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getStringKeyword_0());
		}
		    |
		kw='uint'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getUintKeyword_1());
		}
		    |
		kw='address'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getAddressKeyword_2());
		}
		    |
		kw='int'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getIntKeyword_3());
		}
		    |
		kw='bytes'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getBytesKeyword_4());
		}
		    |
		kw='bytes32'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getBytes32Keyword_5());
		}
		    |
		kw='bool'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getBoolKeyword_6());
		}
		    |
		kw='fixed'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getFixedKeyword_7());
		}
		    |
		kw='ufixed'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getUfixedKeyword_8());
		}
		    |
		kw='date'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getDateKeyword_9());
		}
		    |
		kw='duration'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getDurationKeyword_10());
		}
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current; }
	EOF;

// Rule Value
ruleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getValueAccess().getAllNumberParserRuleCall_0());
		}
		this_AllNumber_0=ruleAllNumber
		{
			$current = $this_AllNumber_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getRightParserRuleCall_1());
		}
		this_Right_1=ruleRight
		{
			$current = $this_Right_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getThisDateParserRuleCall_2());
		}
		this_ThisDate_2=ruleThisDate
		{
			$current = $this_ThisDate_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getThisBooleanParserRuleCall_3());
		}
		this_ThisBoolean_3=ruleThisBoolean
		{
			$current = $this_ThisBoolean_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getUrlParserRuleCall_4());
		}
		this_url_4=ruleurl
		{
			$current = $this_url_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getThisDecimalParserRuleCall_5());
		}
		this_ThisDecimal_5=ruleThisDecimal
		{
			$current = $this_ThisDecimal_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getAddressParserRuleCall_6());
		}
		this_Address_6=ruleAddress
		{
			$current = $this_Address_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getThisStringParserRuleCall_7());
		}
		this_ThisString_7=ruleThisString
		{
			$current = $this_ThisString_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getDurationParserRuleCall_8());
		}
		this_Duration_8=ruleDuration
		{
			$current = $this_Duration_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getNowParserRuleCall_9());
		}
		this_Now_9=ruleNow
		{
			$current = $this_Now_9.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDuration
entryRuleDuration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDurationRule()); }
	iv_ruleDuration=ruleDuration
	{ $current=$iv_ruleDuration.current; }
	EOF;

// Rule Duration
ruleDuration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0=RULE_INT
				{
					newLeafNode(lv_value_0_0, grammarAccess.getDurationAccess().getValueINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDurationRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				(
					lv_symbol_1_1='years'
					{
						newLeafNode(lv_symbol_1_1, grammarAccess.getDurationAccess().getSymbolYearsKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDurationRule());
						}
						setWithLastConsumed($current, "symbol", lv_symbol_1_1, null);
					}
					    |
					lv_symbol_1_2='months'
					{
						newLeafNode(lv_symbol_1_2, grammarAccess.getDurationAccess().getSymbolMonthsKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDurationRule());
						}
						setWithLastConsumed($current, "symbol", lv_symbol_1_2, null);
					}
					    |
					lv_symbol_1_3='days'
					{
						newLeafNode(lv_symbol_1_3, grammarAccess.getDurationAccess().getSymbolDaysKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDurationRule());
						}
						setWithLastConsumed($current, "symbol", lv_symbol_1_3, null);
					}
					    |
					lv_symbol_1_4='hours'
					{
						newLeafNode(lv_symbol_1_4, grammarAccess.getDurationAccess().getSymbolHoursKeyword_1_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDurationRule());
						}
						setWithLastConsumed($current, "symbol", lv_symbol_1_4, null);
					}
					    |
					lv_symbol_1_5='mins'
					{
						newLeafNode(lv_symbol_1_5, grammarAccess.getDurationAccess().getSymbolMinsKeyword_1_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDurationRule());
						}
						setWithLastConsumed($current, "symbol", lv_symbol_1_5, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleNow
entryRuleNow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNowRule()); }
	iv_ruleNow=ruleNow
	{ $current=$iv_ruleNow.current; }
	EOF;

// Rule Now
ruleNow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0='now'
			{
				newLeafNode(lv_value_0_0, grammarAccess.getNowAccess().getValueNowKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNowRule());
				}
				setWithLastConsumed($current, "value", lv_value_0_0, "now");
			}
		)
	)
;

// Entry rule entryRuleThisString
entryRuleThisString returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThisStringRule()); }
	iv_ruleThisString=ruleThisString
	{ $current=$iv_ruleThisString.current; }
	EOF;

// Rule ThisString
ruleThisString returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getThisStringAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getThisStringRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleAddress
entryRuleAddress returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddressRule()); }
	iv_ruleAddress=ruleAddress
	{ $current=$iv_ruleAddress.current; }
	EOF;

// Rule Address
ruleAddress returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='a'
		{
			newLeafNode(otherlv_0, grammarAccess.getAddressAccess().getAKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_STRING
				{
					newLeafNode(lv_value_1_0, grammarAccess.getAddressAccess().getValueSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddressRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleAllNumber
entryRuleAllNumber returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAllNumberRule()); }
	iv_ruleAllNumber=ruleAllNumber
	{ $current=$iv_ruleAllNumber.current; }
	EOF;

// Rule AllNumber
ruleAllNumber returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_number_0_0=RULE_INT
			{
				newLeafNode(lv_number_0_0, grammarAccess.getAllNumberAccess().getNumberINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAllNumberRule());
				}
				setWithLastConsumed(
					$current,
					"number",
					lv_number_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleThisDecimal
entryRuleThisDecimal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThisDecimalRule()); }
	iv_ruleThisDecimal=ruleThisDecimal
	{ $current=$iv_ruleThisDecimal.current; }
	EOF;

// Rule ThisDecimal
ruleThisDecimal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_DECIMAL
			{
				newLeafNode(lv_value_0_0, grammarAccess.getThisDecimalAccess().getValueDECIMALTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getThisDecimalRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.xtext.example.mydsl.Sparrow.DECIMAL");
			}
		)
	)
;

// Entry rule entryRuleurl
entryRuleurl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUrlRule()); }
	iv_ruleurl=ruleurl
	{ $current=$iv_ruleurl.current; }
	EOF;

// Rule url
ruleurl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_URL_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getUrlAccess().getValueURL_STRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getUrlRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.xtext.example.mydsl.Sparrow.URL_STRING");
			}
		)
	)
;

// Entry rule entryRuleThisBoolean
entryRuleThisBoolean returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThisBooleanRule()); }
	iv_ruleThisBoolean=ruleThisBoolean
	{ $current=$iv_ruleThisBoolean.current; }
	EOF;

// Rule ThisBoolean
ruleThisBoolean returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getThisBooleanAccess().getValueBOOLEANParserRuleCall_0());
			}
			lv_value_0_0=ruleBOOLEAN
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getThisBooleanRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"org.xtext.example.mydsl.Sparrow.BOOLEAN");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleThisDate
entryRuleThisDate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThisDateRule()); }
	iv_ruleThisDate=ruleThisDate
	{ $current=$iv_ruleThisDate.current; }
	EOF;

// Rule ThisDate
ruleThisDate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getThisDateAccess().getValueDATEParserRuleCall_0());
			}
			lv_value_0_0=ruleDATE
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getThisDateRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"org.xtext.example.mydsl.Sparrow.DATE");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleRight
entryRuleRight returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRightRule()); }
	iv_ruleRight=ruleRight
	{ $current=$iv_ruleRight.current; }
	EOF;

// Rule Right
ruleRight returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRightRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getRightAccess().getRightInitExpressionsCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleDATE
entryRuleDATE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDATERule()); }
	iv_ruleDATE=ruleDATE
	{ $current=$iv_ruleDATE.current; }
	EOF;

// Rule DATE
ruleDATE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_year_0_0=RULE_INT
				{
					newLeafNode(lv_year_0_0, grammarAccess.getDATEAccess().getYearINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDATERule());
					}
					setWithLastConsumed(
						$current,
						"year",
						lv_year_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_1='/'
		{
			newLeafNode(otherlv_1, grammarAccess.getDATEAccess().getSolidusKeyword_1());
		}
		(
			(
				lv_month_2_0=RULE_INT
				{
					newLeafNode(lv_month_2_0, grammarAccess.getDATEAccess().getMonthINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDATERule());
					}
					setWithLastConsumed(
						$current,
						"month",
						lv_month_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='/'
		{
			newLeafNode(otherlv_3, grammarAccess.getDATEAccess().getSolidusKeyword_3());
		}
		(
			(
				lv_day_4_0=RULE_INT
				{
					newLeafNode(lv_day_4_0, grammarAccess.getDATEAccess().getDayINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDATERule());
					}
					setWithLastConsumed(
						$current,
						"day",
						lv_day_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getDATEAccess().getCommaKeyword_5());
		}
		(
			(
				lv_hour_6_0=RULE_INT
				{
					newLeafNode(lv_hour_6_0, grammarAccess.getDATEAccess().getHourINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDATERule());
					}
					setWithLastConsumed(
						$current,
						"hour",
						lv_hour_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_7=':'
		{
			newLeafNode(otherlv_7, grammarAccess.getDATEAccess().getColonKeyword_7());
		}
		(
			(
				lv_min_8_0=RULE_INT
				{
					newLeafNode(lv_min_8_0, grammarAccess.getDATEAccess().getMinINTTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDATERule());
					}
					setWithLastConsumed(
						$current,
						"min",
						lv_min_8_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleObject
entryRuleObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectRule()); }
	iv_ruleObject=ruleObject
	{ $current=$iv_ruleObject.current; }
	EOF;

// Rule Object
ruleObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Token'
		{
			newLeafNode(otherlv_0, grammarAccess.getObjectAccess().getTokenKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getObjectAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjectRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectAccess().getObjectExpressionObjectExpressionParserRuleCall_2_0());
				}
				lv_objectExpression_2_0=ruleObjectExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectRule());
					}
					set(
						$current,
						"objectExpression",
						lv_objectExpression_2_0,
						"org.xtext.example.mydsl.Sparrow.ObjectExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleObjectExpression
entryRuleObjectExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectExpressionRule()); }
	iv_ruleObjectExpression=ruleObjectExpression
	{ $current=$iv_ruleObjectExpression.current; }
	EOF;

// Rule ObjectExpression
ruleObjectExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getObjectExpressionAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectExpressionAccess().getKeyValueKeyvalueParserRuleCall_1_0());
				}
				lv_keyValue_1_0=rulekeyvalue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectExpressionRule());
					}
					add(
						$current,
						"keyValue",
						lv_keyValue_1_0,
						"org.xtext.example.mydsl.Sparrow.keyvalue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getObjectExpressionAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getObjectExpressionAccess().getKeyValueKeyvalueParserRuleCall_2_1_0());
					}
					lv_keyValue_3_0=rulekeyvalue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getObjectExpressionRule());
						}
						add(
							$current,
							"keyValue",
							lv_keyValue_3_0,
							"org.xtext.example.mydsl.Sparrow.keyvalue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getObjectExpressionAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Conditions'
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionAccess().getConditionsKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getConditionAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionAccess().getConditionsConditionLinkParserRuleCall_2_0());
				}
				lv_conditions_2_0=ruleConditionLink
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionRule());
					}
					add(
						$current,
						"conditions",
						lv_conditions_2_0,
						"org.xtext.example.mydsl.Sparrow.ConditionLink");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getConditionAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionAccess().getConditionsConditionLinkParserRuleCall_3_1_0());
					}
					lv_conditions_4_0=ruleConditionLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionRule());
						}
						add(
							$current,
							"conditions",
							lv_conditions_4_0,
							"org.xtext.example.mydsl.Sparrow.ConditionLink");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getConditionAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleConditionLink
entryRuleConditionLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionLinkRule()); }
	iv_ruleConditionLink=ruleConditionLink
	{ $current=$iv_ruleConditionLink.current; }
	EOF;

// Rule ConditionLink
ruleConditionLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getConditionLinkAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionLinkRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getConditionLinkAccess().getColonKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionLinkAccess().getConditionExpressionSingleConditionParserRuleCall_2_0_0());
					}
					lv_conditionExpression_2_0=ruleSingleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionLinkRule());
						}
						set(
							$current,
							"conditionExpression",
							lv_conditionExpression_2_0,
							"org.xtext.example.mydsl.Sparrow.SingleCondition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionLinkAccess().getLinkConditionSingleLinkConditionParserRuleCall_2_1_0());
					}
					lv_linkCondition_3_0=ruleSingleLinkCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionLinkRule());
						}
						set(
							$current,
							"linkCondition",
							lv_linkCondition_3_0,
							"org.xtext.example.mydsl.Sparrow.SingleLinkCondition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionLinkAccess().getAndOrLinkAndOrConditionParserRuleCall_3_0());
				}
				lv_andOrLink_4_0=ruleAndOrCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionLinkRule());
					}
					add(
						$current,
						"andOrLink",
						lv_andOrLink_4_0,
						"org.xtext.example.mydsl.Sparrow.AndOrCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleAndOrCondition
entryRuleAndOrCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndOrConditionRule()); }
	iv_ruleAndOrCondition=ruleAndOrCondition
	{ $current=$iv_ruleAndOrCondition.current; }
	EOF;

// Rule AndOrCondition
ruleAndOrCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_link_0_1='and'
					{
						newLeafNode(lv_link_0_1, grammarAccess.getAndOrConditionAccess().getLinkAndKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAndOrConditionRule());
						}
						setWithLastConsumed($current, "link", lv_link_0_1, null);
					}
					    |
					lv_link_0_2='or'
					{
						newLeafNode(lv_link_0_2, grammarAccess.getAndOrConditionAccess().getLinkOrKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAndOrConditionRule());
						}
						setWithLastConsumed($current, "link", lv_link_0_2, null);
					}
				)
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAndOrConditionAccess().getConditionSingleConditionParserRuleCall_1_0_0());
					}
					lv_condition_1_0=ruleSingleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndOrConditionRule());
						}
						set(
							$current,
							"condition",
							lv_condition_1_0,
							"org.xtext.example.mydsl.Sparrow.SingleCondition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getAndOrConditionAccess().getLinkConditionSingleLinkConditionParserRuleCall_1_1_0());
					}
					lv_linkCondition_2_0=ruleSingleLinkCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndOrConditionRule());
						}
						set(
							$current,
							"linkCondition",
							lv_linkCondition_2_0,
							"org.xtext.example.mydsl.Sparrow.SingleLinkCondition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Operations'
		{
			newLeafNode(otherlv_0, grammarAccess.getOperationAccess().getOperationsKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getOperatesOperateLinkParserRuleCall_2_0());
				}
				lv_operates_2_0=ruleOperateLink
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					add(
						$current,
						"operates",
						lv_operates_2_0,
						"org.xtext.example.mydsl.Sparrow.OperateLink");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getOperationAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationAccess().getOperatesOperateLinkParserRuleCall_3_1_0());
					}
					lv_operates_4_0=ruleOperateLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationRule());
						}
						add(
							$current,
							"operates",
							lv_operates_4_0,
							"org.xtext.example.mydsl.Sparrow.OperateLink");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getOperationAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleOperateLink
entryRuleOperateLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperateLinkRule()); }
	iv_ruleOperateLink=ruleOperateLink
	{ $current=$iv_ruleOperateLink.current; }
	EOF;

// Rule OperateLink
ruleOperateLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getOperateLinkAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperateLinkRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getOperateLinkAccess().getColonKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOperateLinkAccess().getFirstOperationTrueOperationParserRuleCall_2_0_0());
					}
					lv_firstOperation_2_0=ruletrueOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperateLinkRule());
						}
						set(
							$current,
							"firstOperation",
							lv_firstOperation_2_0,
							"org.xtext.example.mydsl.Sparrow.trueOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperateLinkRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getOperateLinkAccess().getLinkOperationOperateLinkCrossReference_2_1_0());
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOperateLinkAccess().getAndOrLinkAndOrOperationLinkParserRuleCall_3_0());
				}
				lv_andOrLink_4_0=ruleAndOrOperationLink
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperateLinkRule());
					}
					add(
						$current,
						"andOrLink",
						lv_andOrLink_4_0,
						"org.xtext.example.mydsl.Sparrow.AndOrOperationLink");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleRuleStructure
entryRuleRuleStructure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleStructureRule()); }
	iv_ruleRuleStructure=ruleRuleStructure
	{ $current=$iv_ruleRuleStructure.current; }
	EOF;

// Rule RuleStructure
ruleRuleStructure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Rules'
		{
			newLeafNode(otherlv_0, grammarAccess.getRuleStructureAccess().getRulesKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRuleStructureAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleStructureAccess().getManyRuleExpressionManyRuleExpressionParserRuleCall_2_0());
				}
				lv_manyRuleExpression_2_0=ruleManyRuleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleStructureRule());
					}
					add(
						$current,
						"manyRuleExpression",
						lv_manyRuleExpression_2_0,
						"org.xtext.example.mydsl.Sparrow.ManyRuleExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getRuleStructureAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleManyRuleExpression
entryRuleManyRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getManyRuleExpressionRule()); }
	iv_ruleManyRuleExpression=ruleManyRuleExpression
	{ $current=$iv_ruleManyRuleExpression.current; }
	EOF;

// Rule ManyRuleExpression
ruleManyRuleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getManyRuleExpressionAccess().getExclusiveExpressionParserRuleCall_0());
		}
		this_ExclusiveExpression_0=ruleExclusiveExpression
		{
			$current = $this_ExclusiveExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getManyRuleExpressionAccess().getParallelExpressionParserRuleCall_1());
		}
		this_ParallelExpression_1=ruleParallelExpression
		{
			$current = $this_ParallelExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getManyRuleExpressionAccess().getRegularRuleExpressionParserRuleCall_2());
		}
		this_RegularRuleExpression_2=ruleRegularRuleExpression
		{
			$current = $this_RegularRuleExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getManyRuleExpressionAccess().getAdditionExpressionParserRuleCall_3());
		}
		this_AdditionExpression_3=ruleAdditionExpression
		{
			$current = $this_AdditionExpression_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleParallelExpression
entryRuleParallelExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParallelExpressionRule()); }
	iv_ruleParallelExpression=ruleParallelExpression
	{ $current=$iv_ruleParallelExpression.current; }
	EOF;

// Rule ParallelExpression
ruleParallelExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Exclusive'
		{
			newLeafNode(otherlv_0, grammarAccess.getParallelExpressionAccess().getExclusiveKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getParallelExpressionAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParallelExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_2_0());
				}
				lv_ruleExpression_2_0=ruleRuleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParallelExpressionRule());
					}
					add(
						$current,
						"ruleExpression",
						lv_ruleExpression_2_0,
						"org.xtext.example.mydsl.Sparrow.RuleExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getParallelExpressionAccess().getSemicolonKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParallelExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_3_1_0());
					}
					lv_ruleExpression_4_0=ruleRuleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParallelExpressionRule());
						}
						add(
							$current,
							"ruleExpression",
							lv_ruleExpression_4_0,
							"org.xtext.example.mydsl.Sparrow.RuleExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getParallelExpressionAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleExclusiveExpression
entryRuleExclusiveExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExclusiveExpressionRule()); }
	iv_ruleExclusiveExpression=ruleExclusiveExpression
	{ $current=$iv_ruleExclusiveExpression.current; }
	EOF;

// Rule ExclusiveExpression
ruleExclusiveExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Parallel'
		{
			newLeafNode(otherlv_0, grammarAccess.getExclusiveExpressionAccess().getParallelKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getExclusiveExpressionAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExclusiveExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_2_0());
				}
				lv_ruleExpression_2_0=ruleRuleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExclusiveExpressionRule());
					}
					add(
						$current,
						"ruleExpression",
						lv_ruleExpression_2_0,
						"org.xtext.example.mydsl.Sparrow.RuleExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getExclusiveExpressionAccess().getSemicolonKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExclusiveExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_3_1_0());
					}
					lv_ruleExpression_4_0=ruleRuleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExclusiveExpressionRule());
						}
						add(
							$current,
							"ruleExpression",
							lv_ruleExpression_4_0,
							"org.xtext.example.mydsl.Sparrow.RuleExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getExclusiveExpressionAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleRegularRuleExpression
entryRuleRegularRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegularRuleExpressionRule()); }
	iv_ruleRegularRuleExpression=ruleRegularRuleExpression
	{ $current=$iv_ruleRegularRuleExpression.current; }
	EOF;

// Rule RegularRuleExpression
ruleRegularRuleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRegularRuleExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_0_0());
				}
				lv_ruleExpression_0_0=ruleRuleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegularRuleExpressionRule());
					}
					add(
						$current,
						"ruleExpression",
						lv_ruleExpression_0_0,
						"org.xtext.example.mydsl.Sparrow.RuleExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getRegularRuleExpressionAccess().getSemicolonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRegularRuleExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_1_1_0());
					}
					lv_ruleExpression_2_0=ruleRuleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRegularRuleExpressionRule());
						}
						add(
							$current,
							"ruleExpression",
							lv_ruleExpression_2_0,
							"org.xtext.example.mydsl.Sparrow.RuleExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAdditionExpression
entryRuleAdditionExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditionExpressionRule()); }
	iv_ruleAdditionExpression=ruleAdditionExpression
	{ $current=$iv_ruleAdditionExpression.current; }
	EOF;

// Rule AdditionExpression
ruleAdditionExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Additional'
		{
			newLeafNode(otherlv_0, grammarAccess.getAdditionExpressionAccess().getAdditionalKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getAdditionExpressionAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAdditionExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_2_0());
				}
				lv_ruleExpression_2_0=ruleRuleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAdditionExpressionRule());
					}
					add(
						$current,
						"ruleExpression",
						lv_ruleExpression_2_0,
						"org.xtext.example.mydsl.Sparrow.RuleExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getAdditionExpressionAccess().getSemicolonKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditionExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_3_1_0());
					}
					lv_ruleExpression_4_0=ruleRuleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditionExpressionRule());
						}
						add(
							$current,
							"ruleExpression",
							lv_ruleExpression_4_0,
							"org.xtext.example.mydsl.Sparrow.RuleExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getAdditionExpressionAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleTotalCondition
entryRuleTotalCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTotalConditionRule()); }
	iv_ruleTotalCondition=ruleTotalCondition
	{ $current=$iv_ruleTotalCondition.current; }
	EOF;

// Rule TotalCondition
ruleTotalCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='If:'
		{
			newLeafNode(otherlv_0, grammarAccess.getTotalConditionAccess().getIfKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTotalConditionAccess().getConditionSingleConditionParserRuleCall_1_0_0());
					}
					lv_condition_1_0=ruleSingleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTotalConditionRule());
						}
						set(
							$current,
							"condition",
							lv_condition_1_0,
							"org.xtext.example.mydsl.Sparrow.SingleCondition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getTotalConditionAccess().getLinkConditionSingleLinkConditionParserRuleCall_1_1_0());
					}
					lv_linkCondition_2_0=ruleSingleLinkCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTotalConditionRule());
						}
						set(
							$current,
							"linkCondition",
							lv_linkCondition_2_0,
							"org.xtext.example.mydsl.Sparrow.SingleLinkCondition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTotalConditionAccess().getAndorconditionAndOrConditionParserRuleCall_2_0());
				}
				lv_andorcondition_3_0=ruleAndOrCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTotalConditionRule());
					}
					add(
						$current,
						"andorcondition",
						lv_andorcondition_3_0,
						"org.xtext.example.mydsl.Sparrow.AndOrCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getTotalConditionAccess().getCommaKeyword_3());
		}
	)
;

// Entry rule entryRuleSingleLinkCondition
entryRuleSingleLinkCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleLinkConditionRule()); }
	iv_ruleSingleLinkCondition=ruleSingleLinkCondition
	{ $current=$iv_ruleSingleLinkCondition.current; }
	EOF;

// Rule SingleLinkCondition
ruleSingleLinkCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_no_0_0='!'
				{
					newLeafNode(lv_no_0_0, grammarAccess.getSingleLinkConditionAccess().getNoExclamationMarkKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleLinkConditionRule());
					}
					setWithLastConsumed($current, "no", lv_no_0_0, "!");
				}
			)
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleLinkConditionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getSingleLinkConditionAccess().getLinkConditionConditionLinkCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleTotalOperation
entryRuleTotalOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTotalOperationRule()); }
	iv_ruleTotalOperation=ruleTotalOperation
	{ $current=$iv_ruleTotalOperation.current; }
	EOF;

// Rule TotalOperation
ruleTotalOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTotalOperationAccess().getTotalOperationAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTotalOperationRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getTotalOperationAccess().getPersonInitExpressionsCrossReference_1_0());
				}
			)
		)?
		(
			otherlv_2='G'
			{
				newLeafNode(otherlv_2, grammarAccess.getTotalOperationAccess().getGKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTotalOperationRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getTotalOperationAccess().getPerson2GroupCrossReference_2_1_0());
					}
				)
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTotalOperationAccess().getFirstOperationTrueOperationParserRuleCall_3_0_0());
					}
					lv_firstOperation_4_0=ruletrueOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTotalOperationRule());
						}
						set(
							$current,
							"firstOperation",
							lv_firstOperation_4_0,
							"org.xtext.example.mydsl.Sparrow.trueOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTotalOperationRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getTotalOperationAccess().getLinkOperationOperateLinkCrossReference_3_1_0());
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTotalOperationAccess().getAndorAndOrOperationLinkParserRuleCall_4_0());
				}
				lv_andor_6_0=ruleAndOrOperationLink
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTotalOperationRule());
					}
					add(
						$current,
						"andor",
						lv_andor_6_0,
						"org.xtext.example.mydsl.Sparrow.AndOrOperationLink");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTotalOperationAccess().getTimePointTimepointParserRuleCall_5_0());
				}
				lv_timePoint_7_0=ruleTimepoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTotalOperationRule());
					}
					set(
						$current,
						"timePoint",
						lv_timePoint_7_0,
						"org.xtext.example.mydsl.Sparrow.Timepoint");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTotalOperationAccess().getFailresultFailResultParserRuleCall_6_0());
				}
				lv_failresult_8_0=ruleFailResult
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTotalOperationRule());
					}
					set(
						$current,
						"failresult",
						lv_failresult_8_0,
						"org.xtext.example.mydsl.Sparrow.FailResult");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTotalOperationAccess().getThenoperationThenOperationParserRuleCall_7_0());
				}
				lv_thenoperation_9_0=ruleThenOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTotalOperationRule());
					}
					add(
						$current,
						"thenoperation",
						lv_thenoperation_9_0,
						"org.xtext.example.mydsl.Sparrow.ThenOperation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleAndOrOperationLink
entryRuleAndOrOperationLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndOrOperationLinkRule()); }
	iv_ruleAndOrOperationLink=ruleAndOrOperationLink
	{ $current=$iv_ruleAndOrOperationLink.current; }
	EOF;

// Rule AndOrOperationLink
ruleAndOrOperationLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_link_0_0='and'
				{
					newLeafNode(lv_link_0_0, grammarAccess.getAndOrOperationLinkAccess().getLinkAndKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAndOrOperationLinkRule());
					}
					setWithLastConsumed($current, "link", lv_link_0_0, "and");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAndOrOperationLinkAccess().getFirstOperationTrueOperationParserRuleCall_1_0_0());
					}
					lv_firstOperation_1_0=ruletrueOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndOrOperationLinkRule());
						}
						set(
							$current,
							"firstOperation",
							lv_firstOperation_1_0,
							"org.xtext.example.mydsl.Sparrow.trueOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAndOrOperationLinkRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getAndOrOperationLinkAccess().getLinkOperationOperateLinkCrossReference_1_1_0());
					}
				)
			)
		)
	)
;

// Entry rule entryRuleThenOperation
entryRuleThenOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThenOperationRule()); }
	iv_ruleThenOperation=ruleThenOperation
	{ $current=$iv_ruleThenOperation.current; }
	EOF;

// Rule ThenOperation
ruleThenOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Then'
		{
			newLeafNode(otherlv_0, grammarAccess.getThenOperationAccess().getThenKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getThenOperationAccess().getFollowingOperationTrueOperationParserRuleCall_1_0_0());
					}
					lv_followingOperation_1_0=ruletrueOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getThenOperationRule());
						}
						set(
							$current,
							"followingOperation",
							lv_followingOperation_1_0,
							"org.xtext.example.mydsl.Sparrow.trueOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getThenOperationRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getThenOperationAccess().getLinkOperationOperateLinkCrossReference_1_1_0());
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getThenOperationAccess().getAndorAndOrOperationLinkParserRuleCall_2_0());
				}
				lv_andor_3_0=ruleAndOrOperationLink
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getThenOperationRule());
					}
					add(
						$current,
						"andor",
						lv_andor_3_0,
						"org.xtext.example.mydsl.Sparrow.AndOrOperationLink");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getThenOperationAccess().getTimePointTimepointParserRuleCall_3_0());
				}
				lv_timePoint_4_0=ruleTimepoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getThenOperationRule());
					}
					set(
						$current,
						"timePoint",
						lv_timePoint_4_0,
						"org.xtext.example.mydsl.Sparrow.Timepoint");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getThenOperationAccess().getFailresultFailResultParserRuleCall_4_0());
				}
				lv_failresult_5_0=ruleFailResult
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getThenOperationRule());
					}
					set(
						$current,
						"failresult",
						lv_failresult_5_0,
						"org.xtext.example.mydsl.Sparrow.FailResult");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleTotalExpression
entryRuleTotalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTotalExpressionRule()); }
	iv_ruleTotalExpression=ruleTotalExpression
	{ $current=$iv_ruleTotalExpression.current; }
	EOF;

// Rule TotalExpression
ruleTotalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTotalExpressionAccess().getSetMessageExpressionParserRuleCall_0_0());
				}
				lv_set_0_0=rulemessageExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTotalExpressionRule());
					}
					set(
						$current,
						"set",
						lv_set_0_0,
						"org.xtext.example.mydsl.Sparrow.messageExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTotalExpressionAccess().getTotalConditionTotalConditionParserRuleCall_1_0());
				}
				lv_totalCondition_1_0=ruleTotalCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTotalExpressionRule());
					}
					set(
						$current,
						"totalCondition",
						lv_totalCondition_1_0,
						"org.xtext.example.mydsl.Sparrow.TotalCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTotalExpressionAccess().getTotalOperationTotalOperationParserRuleCall_2_0());
				}
				lv_totalOperation_2_0=ruleTotalOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTotalExpressionRule());
					}
					set(
						$current,
						"totalOperation",
						lv_totalOperation_2_0,
						"org.xtext.example.mydsl.Sparrow.TotalOperation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTotalExpressionAccess().getElseExpressionElseExpressionParserRuleCall_3_0());
				}
				lv_elseExpression_3_0=ruleElseExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTotalExpressionRule());
					}
					set(
						$current,
						"elseExpression",
						lv_elseExpression_3_0,
						"org.xtext.example.mydsl.Sparrow.ElseExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleElseExpression
entryRuleElseExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElseExpressionRule()); }
	iv_ruleElseExpression=ruleElseExpression
	{ $current=$iv_ruleElseExpression.current; }
	EOF;

// Rule ElseExpression
ruleElseExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Else'
		{
			newLeafNode(otherlv_0, grammarAccess.getElseExpressionAccess().getElseKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getElseExpressionAccess().getSetMessageExpressionParserRuleCall_1_0());
				}
				lv_set_1_0=rulemessageExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseExpressionRule());
					}
					set(
						$current,
						"set",
						lv_set_1_0,
						"org.xtext.example.mydsl.Sparrow.messageExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getElseExpressionAccess().getTotalConditionTotalConditionParserRuleCall_2_0());
				}
				lv_totalCondition_2_0=ruleTotalCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseExpressionRule());
					}
					set(
						$current,
						"totalCondition",
						lv_totalCondition_2_0,
						"org.xtext.example.mydsl.Sparrow.TotalCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getElseExpressionAccess().getTotalOperationTotalOperationParserRuleCall_3_0());
				}
				lv_totalOperation_3_0=ruleTotalOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseExpressionRule());
					}
					set(
						$current,
						"totalOperation",
						lv_totalOperation_3_0,
						"org.xtext.example.mydsl.Sparrow.TotalOperation");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRuleExpression
entryRuleRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleExpressionRule()); }
	iv_ruleRuleExpression=ruleRuleExpression
	{ $current=$iv_ruleRuleExpression.current; }
	EOF;

// Rule RuleExpression
ruleRuleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_repeat_0_0='Repeat'
				{
					newLeafNode(lv_repeat_0_0, grammarAccess.getRuleExpressionAccess().getRepeatRepeatKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRuleExpressionRule());
					}
					setWithLastConsumed($current, "repeat", lv_repeat_0_0, "Repeat");
				}
			)
		)?
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRuleExpressionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRuleExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getRuleExpressionAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleExpressionAccess().getSetMessageExpressionParserRuleCall_3_0());
				}
				lv_set_3_0=rulemessageExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleExpressionRule());
					}
					set(
						$current,
						"set",
						lv_set_3_0,
						"org.xtext.example.mydsl.Sparrow.messageExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleExpressionAccess().getSetdateSetDateExpressionParserRuleCall_4_0());
				}
				lv_setdate_4_0=rulesetDateExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleExpressionRule());
					}
					set(
						$current,
						"setdate",
						lv_setdate_4_0,
						"org.xtext.example.mydsl.Sparrow.setDateExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleExpressionAccess().getTotalConditionTotalConditionParserRuleCall_5_0());
				}
				lv_totalCondition_5_0=ruleTotalCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleExpressionRule());
					}
					set(
						$current,
						"totalCondition",
						lv_totalCondition_5_0,
						"org.xtext.example.mydsl.Sparrow.TotalCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleExpressionAccess().getTotalOperationTotalOperationParserRuleCall_6_0());
				}
				lv_totalOperation_6_0=ruleTotalOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleExpressionRule());
					}
					set(
						$current,
						"totalOperation",
						lv_totalOperation_6_0,
						"org.xtext.example.mydsl.Sparrow.TotalOperation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleExpressionAccess().getSubExpressionSubExpressionParserRuleCall_7_0());
				}
				lv_subExpression_7_0=ruleSubExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleExpressionRule());
					}
					add(
						$current,
						"subExpression",
						lv_subExpression_7_0,
						"org.xtext.example.mydsl.Sparrow.SubExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleExpressionAccess().getElseExpressionElseExpressionParserRuleCall_8_0());
				}
				lv_elseExpression_8_0=ruleElseExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleExpressionRule());
					}
					set(
						$current,
						"elseExpression",
						lv_elseExpression_8_0,
						"org.xtext.example.mydsl.Sparrow.ElseExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRulesetDateExpression
entryRulesetDateExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetDateExpressionRule()); }
	iv_rulesetDateExpression=rulesetDateExpression
	{ $current=$iv_rulesetDateExpression.current; }
	EOF;

// Rule setDateExpression
rulesetDateExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SetDate('
		{
			newLeafNode(otherlv_0, grammarAccess.getSetDateExpressionAccess().getSetDateKeyword_0());
		}
		(
			(
				lv_message_1_0=RULE_ID
				{
					newLeafNode(lv_message_1_0, grammarAccess.getSetDateExpressionAccess().getMessageIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSetDateExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"message",
						lv_message_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getSetDateExpressionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleSubExpression
entryRuleSubExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubExpressionRule()); }
	iv_ruleSubExpression=ruleSubExpression
	{ $current=$iv_ruleSubExpression.current; }
	EOF;

// Rule SubExpression
ruleSubExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SubRule'
		{
			newLeafNode(otherlv_0, grammarAccess.getSubExpressionAccess().getSubRuleKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSubExpressionAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubExpressionAccess().getTotalExpressionTotalExpressionParserRuleCall_2_0());
				}
				lv_totalExpression_2_0=ruleTotalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubExpressionRule());
					}
					set(
						$current,
						"totalExpression",
						lv_totalExpression_2_0,
						"org.xtext.example.mydsl.Sparrow.TotalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getSubExpressionAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleFailResult
entryRuleFailResult returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFailResultRule()); }
	iv_ruleFailResult=ruleFailResult
	{ $current=$iv_ruleFailResult.current; }
	EOF;

// Rule FailResult
ruleFailResult returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FailResult:'
		{
			newLeafNode(otherlv_0, grammarAccess.getFailResultAccess().getFailResultKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFailResultAccess().getFollowingOperationTrueOperationParserRuleCall_1_0_0());
					}
					lv_followingOperation_1_0=ruletrueOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFailResultRule());
						}
						set(
							$current,
							"followingOperation",
							lv_followingOperation_1_0,
							"org.xtext.example.mydsl.Sparrow.trueOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFailResultRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getFailResultAccess().getLinkOperationOperateLinkCrossReference_1_1_0());
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFailResultAccess().getAndorAndOrOperationLinkParserRuleCall_2_0());
				}
				lv_andor_3_0=ruleAndOrOperationLink
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFailResultRule());
					}
					add(
						$current,
						"andor",
						lv_andor_3_0,
						"org.xtext.example.mydsl.Sparrow.AndOrOperationLink");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getFailResultAccess().getTimePointTimepointParserRuleCall_3_0());
				}
				lv_timePoint_4_0=ruleTimepoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFailResultRule());
					}
					set(
						$current,
						"timePoint",
						lv_timePoint_4_0,
						"org.xtext.example.mydsl.Sparrow.Timepoint");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getFailResultAccess().getThenoperationThenOperationParserRuleCall_4_0());
				}
				lv_thenoperation_5_0=ruleThenOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFailResultRule());
					}
					add(
						$current,
						"thenoperation",
						lv_thenoperation_5_0,
						"org.xtext.example.mydsl.Sparrow.ThenOperation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleTimepoint
entryRuleTimepoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimepointRule()); }
	iv_ruleTimepoint=ruleTimepoint
	{ $current=$iv_ruleTimepoint.current; }
	EOF;

// Rule Timepoint
ruleTimepoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTimepointAccess().getWithinPointParserRuleCall_0());
		}
		this_WithinPoint_0=ruleWithinPoint
		{
			$current = $this_WithinPoint_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTimepointAccess().getBeforePointParserRuleCall_1());
		}
		this_BeforePoint_1=ruleBeforePoint
		{
			$current = $this_BeforePoint_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleWithinPoint
entryRuleWithinPoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWithinPointRule()); }
	iv_ruleWithinPoint=ruleWithinPoint
	{ $current=$iv_ruleWithinPoint.current; }
	EOF;

// Rule WithinPoint
ruleWithinPoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='within'
		{
			newLeafNode(otherlv_0, grammarAccess.getWithinPointAccess().getWithinKeyword_0());
		}
		(
			(
				lv_number_1_0=RULE_INT
				{
					newLeafNode(lv_number_1_0, grammarAccess.getWithinPointAccess().getNumberINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWithinPointRule());
					}
					setWithLastConsumed(
						$current,
						"number",
						lv_number_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getWithinPointAccess().getTimeEachTimeParserRuleCall_2_0());
				}
				lv_time_2_0=ruleEachTime
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWithinPointRule());
					}
					set(
						$current,
						"time",
						lv_time_2_0,
						"org.xtext.example.mydsl.Sparrow.EachTime");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='after'
		{
			newLeafNode(otherlv_3, grammarAccess.getWithinPointAccess().getAfterKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWithinPointRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getWithinPointAccess().getThingRuleExpressionCrossReference_4_0());
				}
			)
		)
	)
;

// Entry rule entryRuleBeforePoint
entryRuleBeforePoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBeforePointRule()); }
	iv_ruleBeforePoint=ruleBeforePoint
	{ $current=$iv_ruleBeforePoint.current; }
	EOF;

// Rule BeforePoint
ruleBeforePoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='before'
		{
			newLeafNode(otherlv_0, grammarAccess.getBeforePointAccess().getBeforeKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBeforePointAccess().getLineTimeThisDateParserRuleCall_1_0_0());
					}
					lv_lineTime_1_0=ruleThisDate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBeforePointRule());
						}
						set(
							$current,
							"lineTime",
							lv_lineTime_1_0,
							"org.xtext.example.mydsl.Sparrow.ThisDate");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBeforePointRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getBeforePointAccess().getValueKeyvalueCrossReference_1_1_0());
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSingleCondition
entryRuleSingleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleConditionRule()); }
	iv_ruleSingleCondition=ruleSingleCondition
	{ $current=$iv_ruleSingleCondition.current; }
	EOF;

// Rule SingleCondition
ruleSingleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_no_0_0='!'
				{
					newLeafNode(lv_no_0_0, grammarAccess.getSingleConditionAccess().getNoExclamationMarkKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleConditionRule());
					}
					setWithLastConsumed($current, "no", lv_no_0_0, "!");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleConditionAccess().getConditionTrueConditionParserRuleCall_1_0());
				}
				lv_condition_1_0=ruleTrueCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleConditionRule());
					}
					set(
						$current,
						"condition",
						lv_condition_1_0,
						"org.xtext.example.mydsl.Sparrow.TrueCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTrueCondition
entryRuleTrueCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrueConditionRule()); }
	iv_ruleTrueCondition=ruleTrueCondition
	{ $current=$iv_ruleTrueCondition.current; }
	EOF;

// Rule TrueCondition
ruleTrueCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTrueConditionAccess().getIsTimeParserRuleCall_0());
		}
		this_isTime_0=ruleisTime
		{
			$current = $this_isTime_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTrueConditionAccess().getLogicParserRuleCall_1());
		}
		this_logic_1=rulelogic
		{
			$current = $this_logic_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTrueConditionAccess().getIsTrueParserRuleCall_2());
		}
		this_isTrue_2=ruleisTrue
		{
			$current = $this_isTrue_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTrueConditionAccess().getIsDoneParserRuleCall_3());
		}
		this_isDone_3=ruleisDone
		{
			$current = $this_isDone_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTrueConditionAccess().getCheckExpressionParserRuleCall_4());
		}
		this_checkExpression_4=rulecheckExpression
		{
			$current = $this_checkExpression_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTrueConditionAccess().getTimepointParserRuleCall_5());
		}
		this_Timepoint_5=ruleTimepoint
		{
			$current = $this_Timepoint_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTrueConditionAccess().getCompareStringParserRuleCall_6());
		}
		this_CompareString_6=ruleCompareString
		{
			$current = $this_CompareString_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTrueConditionAccess().getTimeSubParserRuleCall_7());
		}
		this_TimeSub_7=ruleTimeSub
		{
			$current = $this_TimeSub_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCompareString
entryRuleCompareString returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompareStringRule()); }
	iv_ruleCompareString=ruleCompareString
	{ $current=$iv_ruleCompareString.current; }
	EOF;

// Rule CompareString
ruleCompareString returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='compareString('
		{
			newLeafNode(otherlv_0, grammarAccess.getCompareStringAccess().getCompareStringKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompareStringAccess().getValueAMixExpressionParserRuleCall_1_0());
				}
				lv_valueA_1_0=ruleMixExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompareStringRule());
					}
					set(
						$current,
						"valueA",
						lv_valueA_1_0,
						"org.xtext.example.mydsl.Sparrow.MixExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getCompareStringAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompareStringAccess().getValueBMixExpressionParserRuleCall_3_0());
				}
				lv_valueB_3_0=ruleMixExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompareStringRule());
					}
					set(
						$current,
						"valueB",
						lv_valueB_3_0,
						"org.xtext.example.mydsl.Sparrow.MixExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getCompareStringAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleTimeSub
entryRuleTimeSub returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeSubRule()); }
	iv_ruleTimeSub=ruleTimeSub
	{ $current=$iv_ruleTimeSub.current; }
	EOF;

// Rule TimeSub
ruleTimeSub returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='timeSub('
		{
			newLeafNode(otherlv_0, grammarAccess.getTimeSubAccess().getTimeSubKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeSubAccess().getValueAMixExpressionParserRuleCall_1_0());
				}
				lv_valueA_1_0=ruleMixExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeSubRule());
					}
					set(
						$current,
						"valueA",
						lv_valueA_1_0,
						"org.xtext.example.mydsl.Sparrow.MixExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getTimeSubAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeSubAccess().getValueBMixExpressionParserRuleCall_3_0());
				}
				lv_valueB_3_0=ruleMixExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeSubRule());
					}
					set(
						$current,
						"valueB",
						lv_valueB_3_0,
						"org.xtext.example.mydsl.Sparrow.MixExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_4='r'
			{
				newLeafNode(otherlv_4, grammarAccess.getTimeSubAccess().getRKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTimeSubRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getTimeSubAccess().getValueCRuleExpressionCrossReference_4_1_0());
					}
				)
			)
		)?
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getTimeSubAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeSubAccess().getDurationDurationParserRuleCall_6_0());
				}
				lv_duration_7_0=ruleDuration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeSubRule());
					}
					set(
						$current,
						"duration",
						lv_duration_7_0,
						"org.xtext.example.mydsl.Sparrow.Duration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=','
		{
			newLeafNode(otherlv_8, grammarAccess.getTimeSubAccess().getCommaKeyword_7());
		}
		(
			(
				lv_compare_9_0=RULE_MATH_SYMBOL
				{
					newLeafNode(lv_compare_9_0, grammarAccess.getTimeSubAccess().getCompareMATH_SYMBOLTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeSubRule());
					}
					setWithLastConsumed(
						$current,
						"compare",
						lv_compare_9_0,
						"org.xtext.example.mydsl.Sparrow.MATH_SYMBOL");
				}
			)
		)
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getTimeSubAccess().getRightParenthesisKeyword_9());
		}
	)
;

// Entry rule entryRuleEachTime
entryRuleEachTime returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEachTimeRule()); }
	iv_ruleEachTime=ruleEachTime
	{ $current=$iv_ruleEachTime.current.getText(); }
	EOF;

// Rule EachTime
ruleEachTime returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='years'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEachTimeAccess().getYearsKeyword_0());
		}
		    |
		kw='months'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEachTimeAccess().getMonthsKeyword_1());
		}
		    |
		kw='days'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEachTimeAccess().getDaysKeyword_2());
		}
		    |
		kw='hours'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEachTimeAccess().getHoursKeyword_3());
		}
		    |
		kw='mins'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEachTimeAccess().getMinsKeyword_4());
		}
	)
;

// Entry rule entryRuleisTime
entryRuleisTime returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIsTimeRule()); }
	iv_ruleisTime=ruleisTime
	{ $current=$iv_ruleisTime.current; }
	EOF;

// Rule isTime
ruleisTime returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIsTimeAccess().getIsTimeAction_0(),
					$current);
			}
		)
		otherlv_1='isTime('
		{
			newLeafNode(otherlv_1, grammarAccess.getIsTimeAccess().getIsTimeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIsTimeAccess().getExpressionMixExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleMixExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIsTimeRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.example.mydsl.Sparrow.MixExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_3='r'
			{
				newLeafNode(otherlv_3, grammarAccess.getIsTimeAccess().getRKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIsTimeRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getIsTimeAccess().getValueRuleExpressionCrossReference_3_1_0());
					}
				)
			)
		)?
		(
			(
				(
					lv_symbol_5_0=RULE_ARITHMETIC_OPERATOR
					{
						newLeafNode(lv_symbol_5_0, grammarAccess.getIsTimeAccess().getSymbolARITHMETIC_OPERATORTerminalRuleCall_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIsTimeRule());
						}
						setWithLastConsumed(
							$current,
							"symbol",
							lv_symbol_5_0,
							"org.xtext.example.mydsl.Sparrow.ARITHMETIC_OPERATOR");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIsTimeAccess().getDurationDurationParserRuleCall_4_1_0());
					}
					lv_duration_6_0=ruleDuration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIsTimeRule());
						}
						set(
							$current,
							"duration",
							lv_duration_6_0,
							"org.xtext.example.mydsl.Sparrow.Duration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getIsTimeAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRulelogic
entryRulelogic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicRule()); }
	iv_rulelogic=rulelogic
	{ $current=$iv_rulelogic.current; }
	EOF;

// Rule logic
rulelogic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='logic('
		{
			newLeafNode(otherlv_0, grammarAccess.getLogicAccess().getLogicKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLogicAccess().getValueAMixExpressionParserRuleCall_1_0());
				}
				lv_valueA_1_0=ruleMixExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogicRule());
					}
					set(
						$current,
						"valueA",
						lv_valueA_1_0,
						"org.xtext.example.mydsl.Sparrow.MixExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getLogicAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLogicAccess().getValueBMixExpressionParserRuleCall_3_0());
				}
				lv_valueB_3_0=ruleMixExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogicRule());
					}
					set(
						$current,
						"valueB",
						lv_valueB_3_0,
						"org.xtext.example.mydsl.Sparrow.MixExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getLogicAccess().getCommaKeyword_4());
		}
		(
			(
				lv_mathSymbol_5_0=RULE_MATH_SYMBOL
				{
					newLeafNode(lv_mathSymbol_5_0, grammarAccess.getLogicAccess().getMathSymbolMATH_SYMBOLTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLogicRule());
					}
					setWithLastConsumed(
						$current,
						"mathSymbol",
						lv_mathSymbol_5_0,
						"org.xtext.example.mydsl.Sparrow.MATH_SYMBOL");
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getLogicAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleisTrue
entryRuleisTrue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIsTrueRule()); }
	iv_ruleisTrue=ruleisTrue
	{ $current=$iv_ruleisTrue.current; }
	EOF;

// Rule isTrue
ruleisTrue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='isTrue('
		{
			newLeafNode(otherlv_0, grammarAccess.getIsTrueAccess().getIsTrueKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIsTrueAccess().getCompareSingleExpressionParserRuleCall_1_0());
				}
				lv_compare_1_0=ruleSingleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIsTrueRule());
					}
					set(
						$current,
						"compare",
						lv_compare_1_0,
						"org.xtext.example.mydsl.Sparrow.SingleExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getIsTrueAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleisDone
entryRuleisDone returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIsDoneRule()); }
	iv_ruleisDone=ruleisDone
	{ $current=$iv_ruleisDone.current; }
	EOF;

// Rule isDone
ruleisDone returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='isDone('
		{
			newLeafNode(otherlv_0, grammarAccess.getIsDoneAccess().getIsDoneKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIsDoneRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getIsDoneAccess().getNameRuleExpressionCrossReference_1_0());
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getIsDoneAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRulecheckExpression
entryRulecheckExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCheckExpressionRule()); }
	iv_rulecheckExpression=rulecheckExpression
	{ $current=$iv_rulecheckExpression.current; }
	EOF;

// Rule checkExpression
rulecheckExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='check('
		{
			newLeafNode(otherlv_0, grammarAccess.getCheckExpressionAccess().getCheckKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCheckExpressionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getCheckExpressionAccess().getNameModelCrossReference_1_0());
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getCheckExpressionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleMixExpression
entryRuleMixExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMixExpressionRule()); }
	iv_ruleMixExpression=ruleMixExpression
	{ $current=$iv_ruleMixExpression.current; }
	EOF;

// Rule MixExpression
ruleMixExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMixExpressionAccess().getExpressionSingleExpressionParserRuleCall_0_0());
				}
				lv_expression_0_0=ruleSingleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMixExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_0_0,
						"org.xtext.example.mydsl.Sparrow.SingleExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMixExpressionAccess().getOtherMixExpressionOtherMixExpressionParserRuleCall_1_0());
				}
				lv_otherMixExpression_1_0=ruleOtherMixExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMixExpressionRule());
					}
					add(
						$current,
						"otherMixExpression",
						lv_otherMixExpression_1_0,
						"org.xtext.example.mydsl.Sparrow.OtherMixExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleOtherMixExpression
entryRuleOtherMixExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOtherMixExpressionRule()); }
	iv_ruleOtherMixExpression=ruleOtherMixExpression
	{ $current=$iv_ruleOtherMixExpression.current; }
	EOF;

// Rule OtherMixExpression
ruleOtherMixExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_link_0_0=RULE_ARITHMETIC_OPERATOR
				{
					newLeafNode(lv_link_0_0, grammarAccess.getOtherMixExpressionAccess().getLinkARITHMETIC_OPERATORTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOtherMixExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"link",
						lv_link_0_0,
						"org.xtext.example.mydsl.Sparrow.ARITHMETIC_OPERATOR");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOtherMixExpressionAccess().getExpressionSingleExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleSingleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOtherMixExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"org.xtext.example.mydsl.Sparrow.SingleExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSingleExpression
entryRuleSingleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleExpressionRule()); }
	iv_ruleSingleExpression=ruleSingleExpression
	{ $current=$iv_ruleSingleExpression.current; }
	EOF;

// Rule SingleExpression
ruleSingleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSingleExpressionAccess().getRegularExpressionParserRuleCall_0());
		}
		this_RegularExpression_0=ruleRegularExpression
		{
			$current = $this_RegularExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSingleExpressionAccess().getThingExpressionParserRuleCall_1());
		}
		this_ThingExpression_1=ruleThingExpression
		{
			$current = $this_ThingExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSingleExpressionAccess().getOtherExpressionParserRuleCall_2());
		}
		this_OtherExpression_2=ruleOtherExpression
		{
			$current = $this_OtherExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSingleExpressionAccess().getPersonExpressionParserRuleCall_3());
		}
		this_PersonExpression_3=rulePersonExpression
		{
			$current = $this_PersonExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSingleExpressionAccess().getRuleTimeExpressionParserRuleCall_4());
		}
		this_RuleTimeExpression_4=ruleRuleTimeExpression
		{
			$current = $this_RuleTimeExpression_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSingleExpressionAccess().getFloatExpressionParserRuleCall_5());
		}
		this_FloatExpression_5=ruleFloatExpression
		{
			$current = $this_FloatExpression_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSingleExpressionAccess().getStringExpressionParserRuleCall_6());
		}
		this_StringExpression_6=ruleStringExpression
		{
			$current = $this_StringExpression_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSingleExpressionAccess().getPeriodExpressionParserRuleCall_7());
		}
		this_PeriodExpression_7=rulePeriodExpression
		{
			$current = $this_PeriodExpression_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSingleExpressionAccess().getGetPeriodExpressionParserRuleCall_8());
		}
		this_GetPeriodExpression_8=ruleGetPeriodExpression
		{
			$current = $this_GetPeriodExpression_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePeriodExpression
entryRulePeriodExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPeriodExpressionRule()); }
	iv_rulePeriodExpression=rulePeriodExpression
	{ $current=$iv_rulePeriodExpression.current; }
	EOF;

// Rule PeriodExpression
rulePeriodExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0=RULE_INT
				{
					newLeafNode(lv_value_0_0, grammarAccess.getPeriodExpressionAccess().getValueINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPeriodExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPeriodExpressionAccess().getTypeEachTimeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleEachTime
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPeriodExpressionRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.mydsl.Sparrow.EachTime");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleGetPeriodExpression
entryRuleGetPeriodExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGetPeriodExpressionRule()); }
	iv_ruleGetPeriodExpression=ruleGetPeriodExpression
	{ $current=$iv_ruleGetPeriodExpression.current; }
	EOF;

// Rule GetPeriodExpression
ruleGetPeriodExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0=RULE_ID
				{
					newLeafNode(lv_value_0_0, grammarAccess.getGetPeriodExpressionAccess().getValueIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGetPeriodExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGetPeriodExpressionAccess().getTypeEachTimeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleEachTime
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGetPeriodExpressionRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.mydsl.Sparrow.EachTime");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRuleTimeExpression
entryRuleRuleTimeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleTimeExpressionRule()); }
	iv_ruleRuleTimeExpression=ruleRuleTimeExpression
	{ $current=$iv_ruleRuleTimeExpression.current; }
	EOF;

// Rule RuleTimeExpression
ruleRuleTimeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='getRuleTime('
		{
			newLeafNode(otherlv_0, grammarAccess.getRuleTimeExpressionAccess().getGetRuleTimeKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRuleTimeExpressionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getRuleTimeExpressionAccess().getValueRuleExpressionCrossReference_1_0());
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getRuleTimeExpressionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleOtherExpression
entryRuleOtherExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOtherExpressionRule()); }
	iv_ruleOtherExpression=ruleOtherExpression
	{ $current=$iv_ruleOtherExpression.current; }
	EOF;

// Rule OtherExpression
ruleOtherExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_ID
			{
				newLeafNode(lv_value_0_0, grammarAccess.getOtherExpressionAccess().getValueIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getOtherExpressionRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleStringExpression
entryRuleStringExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringExpressionRule()); }
	iv_ruleStringExpression=ruleStringExpression
	{ $current=$iv_ruleStringExpression.current; }
	EOF;

// Rule StringExpression
ruleStringExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='"'
		{
			newLeafNode(otherlv_0, grammarAccess.getStringExpressionAccess().getQuotationMarkKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_ID
				{
					newLeafNode(lv_value_1_0, grammarAccess.getStringExpressionAccess().getValueIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='"'
		{
			newLeafNode(otherlv_2, grammarAccess.getStringExpressionAccess().getQuotationMarkKeyword_2());
		}
	)
;

// Entry rule entryRuleFloatExpression
entryRuleFloatExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFloatExpressionRule()); }
	iv_ruleFloatExpression=ruleFloatExpression
	{ $current=$iv_ruleFloatExpression.current; }
	EOF;

// Rule FloatExpression
ruleFloatExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='f'
		{
			newLeafNode(otherlv_0, grammarAccess.getFloatExpressionAccess().getFKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_ID
				{
					newLeafNode(lv_value_1_0, grammarAccess.getFloatExpressionAccess().getValueIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFloatExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePersonExpression
entryRulePersonExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPersonExpressionRule()); }
	iv_rulePersonExpression=rulePersonExpression
	{ $current=$iv_rulePersonExpression.current; }
	EOF;

// Rule PersonExpression
rulePersonExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='p'
		{
			newLeafNode(otherlv_0, grammarAccess.getPersonExpressionAccess().getPKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPersonExpressionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getPersonExpressionAccess().getValueInitExpressionsCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleRegularExpression
entryRuleRegularExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegularExpressionRule()); }
	iv_ruleRegularExpression=ruleRegularExpression
	{ $current=$iv_ruleRegularExpression.current; }
	EOF;

// Rule RegularExpression
ruleRegularExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRegularExpressionAccess().getAllNumberParserRuleCall_0());
		}
		this_AllNumber_0=ruleAllNumber
		{
			$current = $this_AllNumber_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRegularExpressionAccess().getThisDecimalParserRuleCall_1());
		}
		this_ThisDecimal_1=ruleThisDecimal
		{
			$current = $this_ThisDecimal_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRegularExpressionAccess().getThisBooleanParserRuleCall_2());
		}
		this_ThisBoolean_2=ruleThisBoolean
		{
			$current = $this_ThisBoolean_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRegularExpressionAccess().getNowParserRuleCall_3());
		}
		this_Now_3=ruleNow
		{
			$current = $this_Now_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRegularExpressionAccess().getThisDateParserRuleCall_4());
		}
		this_ThisDate_4=ruleThisDate
		{
			$current = $this_ThisDate_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleThingExpression
entryRuleThingExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThingExpressionRule()); }
	iv_ruleThingExpression=ruleThingExpression
	{ $current=$iv_ruleThingExpression.current; }
	EOF;

// Rule ThingExpression
ruleThingExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getThingExpressionAccess().getObjectExpressParserRuleCall_0());
		}
		this_ObjectExpress_0=ruleObjectExpress
		{
			$current = $this_ObjectExpress_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getThingExpressionAccess().getSubjectExpressParserRuleCall_1());
		}
		this_SubjectExpress_1=ruleSubjectExpress
		{
			$current = $this_SubjectExpress_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSubjectExpress
entryRuleSubjectExpress returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubjectExpressRule()); }
	iv_ruleSubjectExpress=ruleSubjectExpress
	{ $current=$iv_ruleSubjectExpress.current; }
	EOF;

// Rule SubjectExpress
ruleSubjectExpress returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='s'
		{
			newLeafNode(otherlv_0, grammarAccess.getSubjectExpressAccess().getSKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubjectExpressRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getSubjectExpressAccess().getSubjectInitExpressionsCrossReference_1_0());
				}
			)
		)
		otherlv_2='.'
		{
			newLeafNode(otherlv_2, grammarAccess.getSubjectExpressAccess().getFullStopKeyword_2());
		}
		(
			(
				lv_attribute_3_0=RULE_ID
				{
					newLeafNode(lv_attribute_3_0, grammarAccess.getSubjectExpressAccess().getAttributeIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubjectExpressRule());
					}
					setWithLastConsumed(
						$current,
						"attribute",
						lv_attribute_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleObjectExpress
entryRuleObjectExpress returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectExpressRule()); }
	iv_ruleObjectExpress=ruleObjectExpress
	{ $current=$iv_ruleObjectExpress.current; }
	EOF;

// Rule ObjectExpress
ruleObjectExpress returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='o'
		{
			newLeafNode(otherlv_0, grammarAccess.getObjectExpressAccess().getOKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjectExpressRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getObjectExpressAccess().getObjectInitExpressionoCrossReference_1_0());
				}
			)
		)
		otherlv_2='.'
		{
			newLeafNode(otherlv_2, grammarAccess.getObjectExpressAccess().getFullStopKeyword_2());
		}
		(
			(
				lv_attribute_3_0=RULE_ID
				{
					newLeafNode(lv_attribute_3_0, grammarAccess.getObjectExpressAccess().getAttributeIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjectExpressRule());
					}
					setWithLastConsumed(
						$current,
						"attribute",
						lv_attribute_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuletrueOperation
entryRuletrueOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrueOperationRule()); }
	iv_ruletrueOperation=ruletrueOperation
	{ $current=$iv_ruletrueOperation.current; }
	EOF;

// Rule trueOperation
ruletrueOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTrueOperationAccess().getTransferExpressionParserRuleCall_0());
		}
		this_transferExpression_0=ruletransferExpression
		{
			$current = $this_transferExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTrueOperationAccess().getChangeExpressionParserRuleCall_1());
		}
		this_changeExpression_1=rulechangeExpression
		{
			$current = $this_changeExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulemessageExpression
entryRulemessageExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMessageExpressionRule()); }
	iv_rulemessageExpression=rulemessageExpression
	{ $current=$iv_rulemessageExpression.current; }
	EOF;

// Rule messageExpression
rulemessageExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SetMessage('
		{
			newLeafNode(otherlv_0, grammarAccess.getMessageExpressionAccess().getSetMessageKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMessageExpressionAccess().getEverymassageEveryMessageParserRuleCall_1_0());
				}
				lv_everymassage_1_0=ruleeveryMessage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMessageExpressionRule());
					}
					add(
						$current,
						"everymassage",
						lv_everymassage_1_0,
						"org.xtext.example.mydsl.Sparrow.everyMessage");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getMessageExpressionAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMessageExpressionAccess().getEverymassageEveryMessageParserRuleCall_2_1_0());
					}
					lv_everymassage_3_0=ruleeveryMessage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMessageExpressionRule());
						}
						add(
							$current,
							"everymassage",
							lv_everymassage_3_0,
							"org.xtext.example.mydsl.Sparrow.everyMessage");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getMessageExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleeveryMessage
entryRuleeveryMessage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEveryMessageRule()); }
	iv_ruleeveryMessage=ruleeveryMessage
	{ $current=$iv_ruleeveryMessage.current; }
	EOF;

// Rule everyMessage
ruleeveryMessage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_symbol_0_0='new'
				{
					newLeafNode(lv_symbol_0_0, grammarAccess.getEveryMessageAccess().getSymbolNewKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEveryMessageRule());
					}
					setWithLastConsumed($current, "symbol", lv_symbol_0_0, "new");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getEveryMessageAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruletype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEveryMessageRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.mydsl.Sparrow.type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_message_2_0=RULE_ID
				{
					newLeafNode(lv_message_2_0, grammarAccess.getEveryMessageAccess().getMessageIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEveryMessageRule());
					}
					setWithLastConsumed(
						$current,
						"message",
						lv_message_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuletransferExpression
entryRuletransferExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransferExpressionRule()); }
	iv_ruletransferExpression=ruletransferExpression
	{ $current=$iv_ruletransferExpression.current; }
	EOF;

// Rule transferExpression
ruletransferExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='transfer('
		{
			newLeafNode(otherlv_0, grammarAccess.getTransferExpressionAccess().getTransferKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransferExpressionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getTransferExpressionAccess().getPersonInitExpressionsCrossReference_1_0());
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getTransferExpressionAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransferExpressionAccess().getValueMixExpressionParserRuleCall_3_0());
				}
				lv_value_3_0=ruleMixExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransferExpressionRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.xtext.example.mydsl.Sparrow.MixExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getTransferExpressionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRulechangeExpression
entryRulechangeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChangeExpressionRule()); }
	iv_rulechangeExpression=rulechangeExpression
	{ $current=$iv_rulechangeExpression.current; }
	EOF;

// Rule changeExpression
rulechangeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getChangeExpressionAccess().getChangeContractParserRuleCall_0());
		}
		this_changeContract_0=rulechangeContract
		{
			$current = $this_changeContract_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getChangeExpressionAccess().getChangeRuleParserRuleCall_1());
		}
		this_changeRule_1=rulechangeRule
		{
			$current = $this_changeRule_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getChangeExpressionAccess().getOtherchangeParserRuleCall_2());
		}
		this_otherchange_2=ruleotherchange
		{
			$current = $this_otherchange_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getChangeExpressionAccess().getChangeStringParserRuleCall_3());
		}
		this_changeString_3=rulechangeString
		{
			$current = $this_changeString_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getChangeExpressionAccess().getChangeOtherParserRuleCall_4());
		}
		this_changeOther_4=rulechangeOther
		{
			$current = $this_changeOther_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getChangeExpressionAccess().getChangeAddressParserRuleCall_5());
		}
		this_changeAddress_5=rulechangeAddress
		{
			$current = $this_changeAddress_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulechangeString
entryRulechangeString returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChangeStringRule()); }
	iv_rulechangeString=rulechangeString
	{ $current=$iv_rulechangeString.current; }
	EOF;

// Rule changeString
rulechangeString returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='assignString('
		{
			newLeafNode(otherlv_0, grammarAccess.getChangeStringAccess().getAssignStringKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChangeStringAccess().getChangeThingMixExpressionParserRuleCall_1_0());
				}
				lv_changeThing_1_0=ruleMixExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChangeStringRule());
					}
					set(
						$current,
						"changeThing",
						lv_changeThing_1_0,
						"org.xtext.example.mydsl.Sparrow.MixExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getChangeStringAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChangeStringAccess().getChangeResultMixExpressionParserRuleCall_3_0());
				}
				lv_changeResult_3_0=ruleMixExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChangeStringRule());
					}
					set(
						$current,
						"changeResult",
						lv_changeResult_3_0,
						"org.xtext.example.mydsl.Sparrow.MixExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getChangeStringAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleotherchange
entryRuleotherchange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOtherchangeRule()); }
	iv_ruleotherchange=ruleotherchange
	{ $current=$iv_ruleotherchange.current; }
	EOF;

// Rule otherchange
ruleotherchange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='assign('
		{
			newLeafNode(otherlv_0, grammarAccess.getOtherchangeAccess().getAssignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOtherchangeAccess().getChangeThingMixExpressionParserRuleCall_1_0());
				}
				lv_changeThing_1_0=ruleMixExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOtherchangeRule());
					}
					set(
						$current,
						"changeThing",
						lv_changeThing_1_0,
						"org.xtext.example.mydsl.Sparrow.MixExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getOtherchangeAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOtherchangeAccess().getChangeResultMixExpressionParserRuleCall_3_0());
				}
				lv_changeResult_3_0=ruleMixExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOtherchangeRule());
					}
					set(
						$current,
						"changeResult",
						lv_changeResult_3_0,
						"org.xtext.example.mydsl.Sparrow.MixExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getOtherchangeAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRulechangeContract
entryRulechangeContract returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChangeContractRule()); }
	iv_rulechangeContract=rulechangeContract
	{ $current=$iv_rulechangeContract.current; }
	EOF;

// Rule changeContract
rulechangeContract returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='assign('
		{
			newLeafNode(otherlv_0, grammarAccess.getChangeContractAccess().getAssignKeyword_0());
		}
		otherlv_1='ContractState'
		{
			newLeafNode(otherlv_1, grammarAccess.getChangeContractAccess().getContractStateKeyword_1());
		}
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getChangeContractAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChangeContractAccess().getChangeResultContractStateParserRuleCall_3_0());
				}
				lv_changeResult_3_0=ruleContractState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChangeContractRule());
					}
					set(
						$current,
						"changeResult",
						lv_changeResult_3_0,
						"org.xtext.example.mydsl.Sparrow.ContractState");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getChangeContractAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleContractState
entryRuleContractState returns [String current=null]:
	{ newCompositeNode(grammarAccess.getContractStateRule()); }
	iv_ruleContractState=ruleContractState
	{ $current=$iv_ruleContractState.current.getText(); }
	EOF;

// Rule ContractState
ruleContractState returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='start'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContractStateAccess().getStartKeyword_0());
		}
		    |
		kw='pause'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContractStateAccess().getPauseKeyword_1());
		}
		    |
		kw='restart'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContractStateAccess().getRestartKeyword_2());
		}
		    |
		kw='terminate'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContractStateAccess().getTerminateKeyword_3());
		}
		    |
		kw='finish'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContractStateAccess().getFinishKeyword_4());
		}
	)
;

// Entry rule entryRulechangeRule
entryRulechangeRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChangeRuleRule()); }
	iv_rulechangeRule=rulechangeRule
	{ $current=$iv_rulechangeRule.current; }
	EOF;

// Rule changeRule
rulechangeRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='assign('
		{
			newLeafNode(otherlv_0, grammarAccess.getChangeRuleAccess().getAssignKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChangeRuleRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getChangeRuleAccess().getChangeThingRuleExpressionCrossReference_1_0());
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getChangeRuleAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChangeRuleAccess().getChangeResultBOOLEANParserRuleCall_3_0());
				}
				lv_changeResult_3_0=ruleBOOLEAN
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChangeRuleRule());
					}
					set(
						$current,
						"changeResult",
						lv_changeResult_3_0,
						"org.xtext.example.mydsl.Sparrow.BOOLEAN");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getChangeRuleAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRulechangeOther
entryRulechangeOther returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChangeOtherRule()); }
	iv_rulechangeOther=rulechangeOther
	{ $current=$iv_rulechangeOther.current; }
	EOF;

// Rule changeOther
rulechangeOther returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='change('
		{
			newLeafNode(otherlv_0, grammarAccess.getChangeOtherAccess().getChangeKeyword_0());
		}
		otherlv_1='CM'
		{
			newLeafNode(otherlv_1, grammarAccess.getChangeOtherAccess().getCMKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChangeOtherAccess().getChangeThingSingleExpressionParserRuleCall_2_0());
				}
				lv_changeThing_2_0=ruleSingleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChangeOtherRule());
					}
					set(
						$current,
						"changeThing",
						lv_changeThing_2_0,
						"org.xtext.example.mydsl.Sparrow.SingleExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getChangeOtherAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChangeOtherAccess().getChangeResultBOOLEANParserRuleCall_4_0());
				}
				lv_changeResult_4_0=ruleBOOLEAN
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChangeOtherRule());
					}
					set(
						$current,
						"changeResult",
						lv_changeResult_4_0,
						"org.xtext.example.mydsl.Sparrow.BOOLEAN");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getChangeOtherAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRulechangeAddress
entryRulechangeAddress returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChangeAddressRule()); }
	iv_rulechangeAddress=rulechangeAddress
	{ $current=$iv_rulechangeAddress.current; }
	EOF;

// Rule changeAddress
rulechangeAddress returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='assign('
		{
			newLeafNode(otherlv_0, grammarAccess.getChangeAddressAccess().getAssignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChangeAddressAccess().getChangeThingMixExpressionParserRuleCall_1_0());
				}
				lv_changeThing_1_0=ruleMixExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChangeAddressRule());
					}
					set(
						$current,
						"changeThing",
						lv_changeThing_1_0,
						"org.xtext.example.mydsl.Sparrow.MixExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getChangeAddressAccess().getCommaKeyword_2());
		}
		otherlv_3='a'
		{
			newLeafNode(otherlv_3, grammarAccess.getChangeAddressAccess().getAKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChangeAddressAccess().getChangeResultMixExpressionParserRuleCall_4_0());
				}
				lv_changeResult_4_0=ruleMixExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChangeAddressRule());
					}
					set(
						$current,
						"changeResult",
						lv_changeResult_4_0,
						"org.xtext.example.mydsl.Sparrow.MixExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getChangeAddressAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleBOOLEAN
entryRuleBOOLEAN returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBOOLEANRule()); }
	iv_ruleBOOLEAN=ruleBOOLEAN
	{ $current=$iv_ruleBOOLEAN.current.getText(); }
	EOF;

// Rule BOOLEAN
ruleBOOLEAN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBOOLEANAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBOOLEANAccess().getFalseKeyword_1());
		}
	)
;

RULE_MATH_SYMBOL : ('>'|'<'|'>='|'<='|'=='|'!=');

RULE_ARITHMETIC_OPERATOR : ('+'|'-'|'*'|'/');

RULE_URL_STRING : 'https://' ('a'..'z'|'A'..'Z'|'0'..'9'|'.'|'-'|'/')+;

RULE_DECIMAL : (RULE_INT '.' RULE_INT|'.' RULE_INT);

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
