/**
 * generated by Xtext 2.29.0
 */
package org.xtext.example.mydsl.sparrow.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.sparrow.SparrowPackage;
import org.xtext.example.mydsl.sparrow.changeContract;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>change Contract</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.sparrow.impl.changeContractImpl#getChangeResult <em>Change Result</em>}</li>
 * </ul>
 *
 * @generated
 */
public class changeContractImpl extends changeExpressionImpl implements changeContract
{
  /**
   * The default value of the '{@link #getChangeResult() <em>Change Result</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChangeResult()
   * @generated
   * @ordered
   */
  protected static final String CHANGE_RESULT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getChangeResult() <em>Change Result</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChangeResult()
   * @generated
   * @ordered
   */
  protected String changeResult = CHANGE_RESULT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected changeContractImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SparrowPackage.Literals.CHANGE_CONTRACT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getChangeResult()
  {
    return changeResult;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setChangeResult(String newChangeResult)
  {
    String oldChangeResult = changeResult;
    changeResult = newChangeResult;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SparrowPackage.CHANGE_CONTRACT__CHANGE_RESULT, oldChangeResult, changeResult));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SparrowPackage.CHANGE_CONTRACT__CHANGE_RESULT:
        return getChangeResult();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SparrowPackage.CHANGE_CONTRACT__CHANGE_RESULT:
        setChangeResult((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SparrowPackage.CHANGE_CONTRACT__CHANGE_RESULT:
        setChangeResult(CHANGE_RESULT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SparrowPackage.CHANGE_CONTRACT__CHANGE_RESULT:
        return CHANGE_RESULT_EDEFAULT == null ? changeResult != null : !CHANGE_RESULT_EDEFAULT.equals(changeResult);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (changeResult: ");
    result.append(changeResult);
    result.append(')');
    return result.toString();
  }

} //changeContractImpl
