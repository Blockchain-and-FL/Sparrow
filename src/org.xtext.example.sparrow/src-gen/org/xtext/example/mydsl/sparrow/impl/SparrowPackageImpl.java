/**
 * generated by Xtext 2.29.0
 */
package org.xtext.example.mydsl.sparrow.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.xtext.example.mydsl.sparrow.AdditionExpression;
import org.xtext.example.mydsl.sparrow.Address;
import org.xtext.example.mydsl.sparrow.AllNumber;
import org.xtext.example.mydsl.sparrow.AndOrCondition;
import org.xtext.example.mydsl.sparrow.AndOrOperationLink;
import org.xtext.example.mydsl.sparrow.BeforePoint;
import org.xtext.example.mydsl.sparrow.CompareString;
import org.xtext.example.mydsl.sparrow.Condition;
import org.xtext.example.mydsl.sparrow.ConditionLink;
import org.xtext.example.mydsl.sparrow.ContractMessage;
import org.xtext.example.mydsl.sparrow.Duration;
import org.xtext.example.mydsl.sparrow.ElseExpression;
import org.xtext.example.mydsl.sparrow.ExclusiveExpression;
import org.xtext.example.mydsl.sparrow.FailResult;
import org.xtext.example.mydsl.sparrow.FloatExpression;
import org.xtext.example.mydsl.sparrow.GetPeriodExpression;
import org.xtext.example.mydsl.sparrow.Group;
import org.xtext.example.mydsl.sparrow.Initialize;
import org.xtext.example.mydsl.sparrow.ManyRuleExpression;
import org.xtext.example.mydsl.sparrow.Message;
import org.xtext.example.mydsl.sparrow.MixExpression;
import org.xtext.example.mydsl.sparrow.Model;
import org.xtext.example.mydsl.sparrow.Now;
import org.xtext.example.mydsl.sparrow.ObjectExpress;
import org.xtext.example.mydsl.sparrow.ObjectExpression;
import org.xtext.example.mydsl.sparrow.OperateLink;
import org.xtext.example.mydsl.sparrow.Operation;
import org.xtext.example.mydsl.sparrow.OtherExpression;
import org.xtext.example.mydsl.sparrow.OtherMixExpression;
import org.xtext.example.mydsl.sparrow.ParallelExpression;
import org.xtext.example.mydsl.sparrow.PeriodExpression;
import org.xtext.example.mydsl.sparrow.PersonExpression;
import org.xtext.example.mydsl.sparrow.RegularExpression;
import org.xtext.example.mydsl.sparrow.RegularRuleExpression;
import org.xtext.example.mydsl.sparrow.Require;
import org.xtext.example.mydsl.sparrow.Right;
import org.xtext.example.mydsl.sparrow.RuleExpression;
import org.xtext.example.mydsl.sparrow.RuleStructure;
import org.xtext.example.mydsl.sparrow.RuleTimeExpression;
import org.xtext.example.mydsl.sparrow.SingleCondition;
import org.xtext.example.mydsl.sparrow.SingleExpression;
import org.xtext.example.mydsl.sparrow.SingleLinkCondition;
import org.xtext.example.mydsl.sparrow.SparrowFactory;
import org.xtext.example.mydsl.sparrow.SparrowPackage;
import org.xtext.example.mydsl.sparrow.StringExpression;
import org.xtext.example.mydsl.sparrow.SubExpression;
import org.xtext.example.mydsl.sparrow.Subject;
import org.xtext.example.mydsl.sparrow.SubjectExpress;
import org.xtext.example.mydsl.sparrow.SubjectExpression;
import org.xtext.example.mydsl.sparrow.ThenOperation;
import org.xtext.example.mydsl.sparrow.ThingExpression;
import org.xtext.example.mydsl.sparrow.ThisBoolean;
import org.xtext.example.mydsl.sparrow.ThisDate;
import org.xtext.example.mydsl.sparrow.ThisDecimal;
import org.xtext.example.mydsl.sparrow.ThisString;
import org.xtext.example.mydsl.sparrow.TimeSub;
import org.xtext.example.mydsl.sparrow.Timepoint;
import org.xtext.example.mydsl.sparrow.TotalCondition;
import org.xtext.example.mydsl.sparrow.TotalExpression;
import org.xtext.example.mydsl.sparrow.TotalOperation;
import org.xtext.example.mydsl.sparrow.TrueCondition;
import org.xtext.example.mydsl.sparrow.Value;
import org.xtext.example.mydsl.sparrow.WithinPoint;
import org.xtext.example.mydsl.sparrow.changeAddress;
import org.xtext.example.mydsl.sparrow.changeContract;
import org.xtext.example.mydsl.sparrow.changeExpression;
import org.xtext.example.mydsl.sparrow.changeOther;
import org.xtext.example.mydsl.sparrow.changeRule;
import org.xtext.example.mydsl.sparrow.changeString;
import org.xtext.example.mydsl.sparrow.checkExpression;
import org.xtext.example.mydsl.sparrow.everyMessage;
import org.xtext.example.mydsl.sparrow.initExpressiono;
import org.xtext.example.mydsl.sparrow.initExpressions;
import org.xtext.example.mydsl.sparrow.isDone;
import org.xtext.example.mydsl.sparrow.isTime;
import org.xtext.example.mydsl.sparrow.isTrue;
import org.xtext.example.mydsl.sparrow.keyvalue;
import org.xtext.example.mydsl.sparrow.logic;
import org.xtext.example.mydsl.sparrow.messageExpression;
import org.xtext.example.mydsl.sparrow.otherchange;
import org.xtext.example.mydsl.sparrow.setDateExpression;
import org.xtext.example.mydsl.sparrow.transferExpression;
import org.xtext.example.mydsl.sparrow.trueOperation;
import org.xtext.example.mydsl.sparrow.url;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class SparrowPackageImpl extends EPackageImpl implements SparrowPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass requireEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass initializeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass initExpressionsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass initExpressionoEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass groupEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass subjectEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass subjectExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass contractMessageEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass messageEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass keyvalueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass valueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass durationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass nowEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thisStringEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass addressEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass allNumberEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thisDecimalEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass urlEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thisBooleanEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thisDateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rightEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass objectEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass objectExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conditionLinkEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass andOrConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operateLinkEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ruleStructureEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass manyRuleExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parallelExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exclusiveExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass regularRuleExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass additionExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass totalConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass singleLinkConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass totalOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass andOrOperationLinkEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thenOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass totalExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elseExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ruleExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass setDateExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass subExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass failResultEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass timepointEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass withinPointEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass beforePointEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass singleConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass trueConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass compareStringEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass timeSubEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass isTimeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logicEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass isTrueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass isDoneEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass checkExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mixExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass otherMixExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass singleExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass periodExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass getPeriodExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ruleTimeExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass otherExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stringExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass floatExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass personExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass regularExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thingExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass subjectExpressEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass objectExpressEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass trueOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass messageExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass everyMessageEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass transferExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass changeExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass changeStringEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass otherchangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass changeContractEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass changeRuleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass changeOtherEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass changeAddressEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.xtext.example.mydsl.sparrow.SparrowPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private SparrowPackageImpl()
  {
    super(eNS_URI, SparrowFactory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link SparrowPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static SparrowPackage init()
  {
    if (isInited) return (SparrowPackage)EPackage.Registry.INSTANCE.getEPackage(SparrowPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredSparrowPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    SparrowPackageImpl theSparrowPackage = registeredSparrowPackage instanceof SparrowPackageImpl ? (SparrowPackageImpl)registeredSparrowPackage : new SparrowPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theSparrowPackage.createPackageContents();

    // Initialize created meta-data
    theSparrowPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theSparrowPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(SparrowPackage.eNS_URI, theSparrowPackage);
    return theSparrowPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getModel_PackageName()
  {
    return (EAttribute)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getModel_Name()
  {
    return (EAttribute)modelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getModel_ExtendName()
  {
    return (EAttribute)modelEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Subjects()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Objects()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Group()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Initialize()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_ContractMessage()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Conditions()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Operations()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(9);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_RuleStructures()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(10);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Require()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(11);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRequire()
  {
    return requireEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRequire_Value()
  {
    return (EAttribute)requireEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInitialize()
  {
    return initializeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInitialize_Inits()
  {
    return (EReference)initializeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInitialize_Inito()
  {
    return (EReference)initializeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getinitExpressions()
  {
    return initExpressionsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getinitExpressions_Subtype()
  {
    return (EReference)initExpressionsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getinitExpressions_Name()
  {
    return (EAttribute)initExpressionsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getinitExpressions_Value()
  {
    return (EReference)initExpressionsEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getinitExpressiono()
  {
    return initExpressionoEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getinitExpressiono_Obtype()
  {
    return (EReference)initExpressionoEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getinitExpressiono_Name()
  {
    return (EAttribute)initExpressionoEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getinitExpressiono_Value()
  {
    return (EReference)initExpressionoEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGroup()
  {
    return groupEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getGroup_Subtype()
  {
    return (EReference)groupEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGroup_Name()
  {
    return (EAttribute)groupEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getGroup_Value()
  {
    return (EReference)groupEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSubject()
  {
    return subjectEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSubject_Type()
  {
    return (EAttribute)subjectEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSubject_Name()
  {
    return (EAttribute)subjectEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSubject_SubjectExpression()
  {
    return (EReference)subjectEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSubjectExpression()
  {
    return subjectExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSubjectExpression_KeyValue()
  {
    return (EReference)subjectExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getContractMessage()
  {
    return contractMessageEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getContractMessage_Message()
  {
    return (EReference)contractMessageEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMessage()
  {
    return messageEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMessage_Type()
  {
    return (EReference)messageEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMessage_Value()
  {
    return (EReference)messageEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getkeyvalue()
  {
    return keyvalueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getkeyvalue_Type()
  {
    return (EAttribute)keyvalueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getkeyvalue_Name()
  {
    return (EAttribute)keyvalueEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getValue()
  {
    return valueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDuration()
  {
    return durationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDuration_Value()
  {
    return (EAttribute)durationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDuration_Symbol()
  {
    return (EAttribute)durationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNow()
  {
    return nowEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNow_Value()
  {
    return (EAttribute)nowEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getThisString()
  {
    return thisStringEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getThisString_Value()
  {
    return (EAttribute)thisStringEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAddress()
  {
    return addressEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAddress_Value()
  {
    return (EAttribute)addressEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAllNumber()
  {
    return allNumberEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAllNumber_Number()
  {
    return (EAttribute)allNumberEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getThisDecimal()
  {
    return thisDecimalEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getThisDecimal_Value()
  {
    return (EAttribute)thisDecimalEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass geturl()
  {
    return urlEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute geturl_Value()
  {
    return (EAttribute)urlEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getThisBoolean()
  {
    return thisBooleanEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getThisBoolean_Value()
  {
    return (EAttribute)thisBooleanEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getThisDate()
  {
    return thisDateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getThisDate_Value()
  {
    return (EReference)thisDateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRight()
  {
    return rightEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRight_Right()
  {
    return (EReference)rightEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDATE()
  {
    return dateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDATE_Year()
  {
    return (EAttribute)dateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDATE_Month()
  {
    return (EAttribute)dateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDATE_Day()
  {
    return (EAttribute)dateEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDATE_Hour()
  {
    return (EAttribute)dateEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDATE_Min()
  {
    return (EAttribute)dateEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getObject()
  {
    return objectEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getObject_Name()
  {
    return (EAttribute)objectEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getObject_ObjectExpression()
  {
    return (EReference)objectEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getObjectExpression()
  {
    return objectExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getObjectExpression_KeyValue()
  {
    return (EReference)objectExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCondition()
  {
    return conditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCondition_Conditions()
  {
    return (EReference)conditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConditionLink()
  {
    return conditionLinkEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConditionLink_Name()
  {
    return (EAttribute)conditionLinkEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConditionLink_ConditionExpression()
  {
    return (EReference)conditionLinkEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConditionLink_LinkCondition()
  {
    return (EReference)conditionLinkEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConditionLink_AndOrLink()
  {
    return (EReference)conditionLinkEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAndOrCondition()
  {
    return andOrConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAndOrCondition_Link()
  {
    return (EAttribute)andOrConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAndOrCondition_Condition()
  {
    return (EReference)andOrConditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAndOrCondition_LinkCondition()
  {
    return (EReference)andOrConditionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOperation()
  {
    return operationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOperation_Operates()
  {
    return (EReference)operationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOperateLink()
  {
    return operateLinkEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getOperateLink_Name()
  {
    return (EAttribute)operateLinkEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOperateLink_FirstOperation()
  {
    return (EReference)operateLinkEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOperateLink_LinkOperation()
  {
    return (EReference)operateLinkEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOperateLink_AndOrLink()
  {
    return (EReference)operateLinkEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRuleStructure()
  {
    return ruleStructureEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRuleStructure_ManyRuleExpression()
  {
    return (EReference)ruleStructureEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getManyRuleExpression()
  {
    return manyRuleExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getManyRuleExpression_RuleExpression()
  {
    return (EReference)manyRuleExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getParallelExpression()
  {
    return parallelExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExclusiveExpression()
  {
    return exclusiveExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRegularRuleExpression()
  {
    return regularRuleExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAdditionExpression()
  {
    return additionExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTotalCondition()
  {
    return totalConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTotalCondition_Condition()
  {
    return (EReference)totalConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTotalCondition_LinkCondition()
  {
    return (EReference)totalConditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTotalCondition_Andorcondition()
  {
    return (EReference)totalConditionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSingleLinkCondition()
  {
    return singleLinkConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSingleLinkCondition_No()
  {
    return (EAttribute)singleLinkConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSingleLinkCondition_LinkCondition()
  {
    return (EReference)singleLinkConditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTotalOperation()
  {
    return totalOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTotalOperation_Person()
  {
    return (EReference)totalOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTotalOperation_Person2()
  {
    return (EReference)totalOperationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTotalOperation_FirstOperation()
  {
    return (EReference)totalOperationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTotalOperation_LinkOperation()
  {
    return (EReference)totalOperationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTotalOperation_Andor()
  {
    return (EReference)totalOperationEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTotalOperation_TimePoint()
  {
    return (EReference)totalOperationEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTotalOperation_Failresult()
  {
    return (EReference)totalOperationEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTotalOperation_Thenoperation()
  {
    return (EReference)totalOperationEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAndOrOperationLink()
  {
    return andOrOperationLinkEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAndOrOperationLink_Link()
  {
    return (EAttribute)andOrOperationLinkEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAndOrOperationLink_FirstOperation()
  {
    return (EReference)andOrOperationLinkEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAndOrOperationLink_LinkOperation()
  {
    return (EReference)andOrOperationLinkEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getThenOperation()
  {
    return thenOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getThenOperation_FollowingOperation()
  {
    return (EReference)thenOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getThenOperation_LinkOperation()
  {
    return (EReference)thenOperationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getThenOperation_Andor()
  {
    return (EReference)thenOperationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getThenOperation_TimePoint()
  {
    return (EReference)thenOperationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getThenOperation_Failresult()
  {
    return (EReference)thenOperationEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTotalExpression()
  {
    return totalExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTotalExpression_Set()
  {
    return (EReference)totalExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTotalExpression_TotalCondition()
  {
    return (EReference)totalExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTotalExpression_TotalOperation()
  {
    return (EReference)totalExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTotalExpression_ElseExpression()
  {
    return (EReference)totalExpressionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElseExpression()
  {
    return elseExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getElseExpression_Set()
  {
    return (EReference)elseExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getElseExpression_TotalCondition()
  {
    return (EReference)elseExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getElseExpression_TotalOperation()
  {
    return (EReference)elseExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRuleExpression()
  {
    return ruleExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRuleExpression_Repeat()
  {
    return (EAttribute)ruleExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRuleExpression_Name()
  {
    return (EAttribute)ruleExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRuleExpression_Set()
  {
    return (EReference)ruleExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRuleExpression_Setdate()
  {
    return (EReference)ruleExpressionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRuleExpression_TotalCondition()
  {
    return (EReference)ruleExpressionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRuleExpression_TotalOperation()
  {
    return (EReference)ruleExpressionEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRuleExpression_SubExpression()
  {
    return (EReference)ruleExpressionEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRuleExpression_ElseExpression()
  {
    return (EReference)ruleExpressionEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getsetDateExpression()
  {
    return setDateExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getsetDateExpression_Message()
  {
    return (EAttribute)setDateExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSubExpression()
  {
    return subExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSubExpression_TotalExpression()
  {
    return (EReference)subExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFailResult()
  {
    return failResultEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFailResult_FollowingOperation()
  {
    return (EReference)failResultEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFailResult_LinkOperation()
  {
    return (EReference)failResultEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFailResult_Andor()
  {
    return (EReference)failResultEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFailResult_TimePoint()
  {
    return (EReference)failResultEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFailResult_Thenoperation()
  {
    return (EReference)failResultEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTimepoint()
  {
    return timepointEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWithinPoint()
  {
    return withinPointEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWithinPoint_Number()
  {
    return (EAttribute)withinPointEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWithinPoint_Time()
  {
    return (EAttribute)withinPointEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWithinPoint_Thing()
  {
    return (EReference)withinPointEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBeforePoint()
  {
    return beforePointEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBeforePoint_LineTime()
  {
    return (EReference)beforePointEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBeforePoint_Value()
  {
    return (EReference)beforePointEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSingleCondition()
  {
    return singleConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSingleCondition_No()
  {
    return (EAttribute)singleConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSingleCondition_Condition()
  {
    return (EReference)singleConditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTrueCondition()
  {
    return trueConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCompareString()
  {
    return compareStringEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCompareString_ValueA()
  {
    return (EReference)compareStringEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCompareString_ValueB()
  {
    return (EReference)compareStringEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTimeSub()
  {
    return timeSubEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTimeSub_ValueA()
  {
    return (EReference)timeSubEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTimeSub_ValueB()
  {
    return (EReference)timeSubEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTimeSub_ValueC()
  {
    return (EReference)timeSubEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTimeSub_Duration()
  {
    return (EReference)timeSubEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTimeSub_Compare()
  {
    return (EAttribute)timeSubEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getisTime()
  {
    return isTimeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getisTime_Expression()
  {
    return (EReference)isTimeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getisTime_Value()
  {
    return (EReference)isTimeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getisTime_Symbol()
  {
    return (EAttribute)isTimeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getisTime_Duration()
  {
    return (EReference)isTimeEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getlogic()
  {
    return logicEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getlogic_ValueA()
  {
    return (EReference)logicEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getlogic_ValueB()
  {
    return (EReference)logicEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getlogic_MathSymbol()
  {
    return (EAttribute)logicEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getisTrue()
  {
    return isTrueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getisTrue_Compare()
  {
    return (EReference)isTrueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getisDone()
  {
    return isDoneEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getisDone_Name()
  {
    return (EReference)isDoneEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getcheckExpression()
  {
    return checkExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getcheckExpression_Name()
  {
    return (EReference)checkExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMixExpression()
  {
    return mixExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMixExpression_Expression()
  {
    return (EReference)mixExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMixExpression_OtherMixExpression()
  {
    return (EReference)mixExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOtherMixExpression()
  {
    return otherMixExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getOtherMixExpression_Link()
  {
    return (EAttribute)otherMixExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOtherMixExpression_Expression()
  {
    return (EReference)otherMixExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSingleExpression()
  {
    return singleExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPeriodExpression()
  {
    return periodExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPeriodExpression_Value()
  {
    return (EAttribute)periodExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPeriodExpression_Type()
  {
    return (EAttribute)periodExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGetPeriodExpression()
  {
    return getPeriodExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGetPeriodExpression_Value()
  {
    return (EAttribute)getPeriodExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGetPeriodExpression_Type()
  {
    return (EAttribute)getPeriodExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRuleTimeExpression()
  {
    return ruleTimeExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRuleTimeExpression_Value()
  {
    return (EReference)ruleTimeExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOtherExpression()
  {
    return otherExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getOtherExpression_Value()
  {
    return (EAttribute)otherExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStringExpression()
  {
    return stringExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStringExpression_Value()
  {
    return (EAttribute)stringExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFloatExpression()
  {
    return floatExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFloatExpression_Value()
  {
    return (EAttribute)floatExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPersonExpression()
  {
    return personExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPersonExpression_Value()
  {
    return (EReference)personExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRegularExpression()
  {
    return regularExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getThingExpression()
  {
    return thingExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getThingExpression_Attribute()
  {
    return (EAttribute)thingExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSubjectExpress()
  {
    return subjectExpressEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSubjectExpress_Subject()
  {
    return (EReference)subjectExpressEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getObjectExpress()
  {
    return objectExpressEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getObjectExpress_Object()
  {
    return (EReference)objectExpressEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass gettrueOperation()
  {
    return trueOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getmessageExpression()
  {
    return messageExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getmessageExpression_Everymassage()
  {
    return (EReference)messageExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass geteveryMessage()
  {
    return everyMessageEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute geteveryMessage_Symbol()
  {
    return (EAttribute)everyMessageEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute geteveryMessage_Type()
  {
    return (EAttribute)everyMessageEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute geteveryMessage_Message()
  {
    return (EAttribute)everyMessageEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass gettransferExpression()
  {
    return transferExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference gettransferExpression_Person()
  {
    return (EReference)transferExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference gettransferExpression_Value()
  {
    return (EReference)transferExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getchangeExpression()
  {
    return changeExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getchangeString()
  {
    return changeStringEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getchangeString_ChangeThing()
  {
    return (EReference)changeStringEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getchangeString_ChangeResult()
  {
    return (EReference)changeStringEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getotherchange()
  {
    return otherchangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getotherchange_ChangeThing()
  {
    return (EReference)otherchangeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getotherchange_ChangeResult()
  {
    return (EReference)otherchangeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getchangeContract()
  {
    return changeContractEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getchangeContract_ChangeResult()
  {
    return (EAttribute)changeContractEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getchangeRule()
  {
    return changeRuleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getchangeRule_ChangeThing()
  {
    return (EReference)changeRuleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getchangeRule_ChangeResult()
  {
    return (EAttribute)changeRuleEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getchangeOther()
  {
    return changeOtherEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getchangeOther_ChangeThing()
  {
    return (EReference)changeOtherEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getchangeOther_ChangeResult()
  {
    return (EAttribute)changeOtherEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getchangeAddress()
  {
    return changeAddressEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getchangeAddress_ChangeThing()
  {
    return (EReference)changeAddressEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getchangeAddress_ChangeResult()
  {
    return (EReference)changeAddressEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SparrowFactory getSparrowFactory()
  {
    return (SparrowFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEAttribute(modelEClass, MODEL__PACKAGE_NAME);
    createEAttribute(modelEClass, MODEL__NAME);
    createEAttribute(modelEClass, MODEL__EXTEND_NAME);
    createEReference(modelEClass, MODEL__SUBJECTS);
    createEReference(modelEClass, MODEL__OBJECTS);
    createEReference(modelEClass, MODEL__GROUP);
    createEReference(modelEClass, MODEL__INITIALIZE);
    createEReference(modelEClass, MODEL__CONTRACT_MESSAGE);
    createEReference(modelEClass, MODEL__CONDITIONS);
    createEReference(modelEClass, MODEL__OPERATIONS);
    createEReference(modelEClass, MODEL__RULE_STRUCTURES);
    createEReference(modelEClass, MODEL__REQUIRE);

    requireEClass = createEClass(REQUIRE);
    createEAttribute(requireEClass, REQUIRE__VALUE);

    initializeEClass = createEClass(INITIALIZE);
    createEReference(initializeEClass, INITIALIZE__INITS);
    createEReference(initializeEClass, INITIALIZE__INITO);

    initExpressionsEClass = createEClass(INIT_EXPRESSIONS);
    createEReference(initExpressionsEClass, INIT_EXPRESSIONS__SUBTYPE);
    createEAttribute(initExpressionsEClass, INIT_EXPRESSIONS__NAME);
    createEReference(initExpressionsEClass, INIT_EXPRESSIONS__VALUE);

    initExpressionoEClass = createEClass(INIT_EXPRESSIONO);
    createEReference(initExpressionoEClass, INIT_EXPRESSIONO__OBTYPE);
    createEAttribute(initExpressionoEClass, INIT_EXPRESSIONO__NAME);
    createEReference(initExpressionoEClass, INIT_EXPRESSIONO__VALUE);

    groupEClass = createEClass(GROUP);
    createEReference(groupEClass, GROUP__SUBTYPE);
    createEAttribute(groupEClass, GROUP__NAME);
    createEReference(groupEClass, GROUP__VALUE);

    subjectEClass = createEClass(SUBJECT);
    createEAttribute(subjectEClass, SUBJECT__TYPE);
    createEAttribute(subjectEClass, SUBJECT__NAME);
    createEReference(subjectEClass, SUBJECT__SUBJECT_EXPRESSION);

    subjectExpressionEClass = createEClass(SUBJECT_EXPRESSION);
    createEReference(subjectExpressionEClass, SUBJECT_EXPRESSION__KEY_VALUE);

    contractMessageEClass = createEClass(CONTRACT_MESSAGE);
    createEReference(contractMessageEClass, CONTRACT_MESSAGE__MESSAGE);

    messageEClass = createEClass(MESSAGE);
    createEReference(messageEClass, MESSAGE__TYPE);
    createEReference(messageEClass, MESSAGE__VALUE);

    keyvalueEClass = createEClass(KEYVALUE);
    createEAttribute(keyvalueEClass, KEYVALUE__TYPE);
    createEAttribute(keyvalueEClass, KEYVALUE__NAME);

    valueEClass = createEClass(VALUE);

    durationEClass = createEClass(DURATION);
    createEAttribute(durationEClass, DURATION__VALUE);
    createEAttribute(durationEClass, DURATION__SYMBOL);

    nowEClass = createEClass(NOW);
    createEAttribute(nowEClass, NOW__VALUE);

    thisStringEClass = createEClass(THIS_STRING);
    createEAttribute(thisStringEClass, THIS_STRING__VALUE);

    addressEClass = createEClass(ADDRESS);
    createEAttribute(addressEClass, ADDRESS__VALUE);

    allNumberEClass = createEClass(ALL_NUMBER);
    createEAttribute(allNumberEClass, ALL_NUMBER__NUMBER);

    thisDecimalEClass = createEClass(THIS_DECIMAL);
    createEAttribute(thisDecimalEClass, THIS_DECIMAL__VALUE);

    urlEClass = createEClass(URL);
    createEAttribute(urlEClass, URL__VALUE);

    thisBooleanEClass = createEClass(THIS_BOOLEAN);
    createEAttribute(thisBooleanEClass, THIS_BOOLEAN__VALUE);

    thisDateEClass = createEClass(THIS_DATE);
    createEReference(thisDateEClass, THIS_DATE__VALUE);

    rightEClass = createEClass(RIGHT);
    createEReference(rightEClass, RIGHT__RIGHT);

    dateEClass = createEClass(DATE);
    createEAttribute(dateEClass, DATE__YEAR);
    createEAttribute(dateEClass, DATE__MONTH);
    createEAttribute(dateEClass, DATE__DAY);
    createEAttribute(dateEClass, DATE__HOUR);
    createEAttribute(dateEClass, DATE__MIN);

    objectEClass = createEClass(OBJECT);
    createEAttribute(objectEClass, OBJECT__NAME);
    createEReference(objectEClass, OBJECT__OBJECT_EXPRESSION);

    objectExpressionEClass = createEClass(OBJECT_EXPRESSION);
    createEReference(objectExpressionEClass, OBJECT_EXPRESSION__KEY_VALUE);

    conditionEClass = createEClass(CONDITION);
    createEReference(conditionEClass, CONDITION__CONDITIONS);

    conditionLinkEClass = createEClass(CONDITION_LINK);
    createEAttribute(conditionLinkEClass, CONDITION_LINK__NAME);
    createEReference(conditionLinkEClass, CONDITION_LINK__CONDITION_EXPRESSION);
    createEReference(conditionLinkEClass, CONDITION_LINK__LINK_CONDITION);
    createEReference(conditionLinkEClass, CONDITION_LINK__AND_OR_LINK);

    andOrConditionEClass = createEClass(AND_OR_CONDITION);
    createEAttribute(andOrConditionEClass, AND_OR_CONDITION__LINK);
    createEReference(andOrConditionEClass, AND_OR_CONDITION__CONDITION);
    createEReference(andOrConditionEClass, AND_OR_CONDITION__LINK_CONDITION);

    operationEClass = createEClass(OPERATION);
    createEReference(operationEClass, OPERATION__OPERATES);

    operateLinkEClass = createEClass(OPERATE_LINK);
    createEAttribute(operateLinkEClass, OPERATE_LINK__NAME);
    createEReference(operateLinkEClass, OPERATE_LINK__FIRST_OPERATION);
    createEReference(operateLinkEClass, OPERATE_LINK__LINK_OPERATION);
    createEReference(operateLinkEClass, OPERATE_LINK__AND_OR_LINK);

    ruleStructureEClass = createEClass(RULE_STRUCTURE);
    createEReference(ruleStructureEClass, RULE_STRUCTURE__MANY_RULE_EXPRESSION);

    manyRuleExpressionEClass = createEClass(MANY_RULE_EXPRESSION);
    createEReference(manyRuleExpressionEClass, MANY_RULE_EXPRESSION__RULE_EXPRESSION);

    parallelExpressionEClass = createEClass(PARALLEL_EXPRESSION);

    exclusiveExpressionEClass = createEClass(EXCLUSIVE_EXPRESSION);

    regularRuleExpressionEClass = createEClass(REGULAR_RULE_EXPRESSION);

    additionExpressionEClass = createEClass(ADDITION_EXPRESSION);

    totalConditionEClass = createEClass(TOTAL_CONDITION);
    createEReference(totalConditionEClass, TOTAL_CONDITION__CONDITION);
    createEReference(totalConditionEClass, TOTAL_CONDITION__LINK_CONDITION);
    createEReference(totalConditionEClass, TOTAL_CONDITION__ANDORCONDITION);

    singleLinkConditionEClass = createEClass(SINGLE_LINK_CONDITION);
    createEAttribute(singleLinkConditionEClass, SINGLE_LINK_CONDITION__NO);
    createEReference(singleLinkConditionEClass, SINGLE_LINK_CONDITION__LINK_CONDITION);

    totalOperationEClass = createEClass(TOTAL_OPERATION);
    createEReference(totalOperationEClass, TOTAL_OPERATION__PERSON);
    createEReference(totalOperationEClass, TOTAL_OPERATION__PERSON2);
    createEReference(totalOperationEClass, TOTAL_OPERATION__FIRST_OPERATION);
    createEReference(totalOperationEClass, TOTAL_OPERATION__LINK_OPERATION);
    createEReference(totalOperationEClass, TOTAL_OPERATION__ANDOR);
    createEReference(totalOperationEClass, TOTAL_OPERATION__TIME_POINT);
    createEReference(totalOperationEClass, TOTAL_OPERATION__FAILRESULT);
    createEReference(totalOperationEClass, TOTAL_OPERATION__THENOPERATION);

    andOrOperationLinkEClass = createEClass(AND_OR_OPERATION_LINK);
    createEAttribute(andOrOperationLinkEClass, AND_OR_OPERATION_LINK__LINK);
    createEReference(andOrOperationLinkEClass, AND_OR_OPERATION_LINK__FIRST_OPERATION);
    createEReference(andOrOperationLinkEClass, AND_OR_OPERATION_LINK__LINK_OPERATION);

    thenOperationEClass = createEClass(THEN_OPERATION);
    createEReference(thenOperationEClass, THEN_OPERATION__FOLLOWING_OPERATION);
    createEReference(thenOperationEClass, THEN_OPERATION__LINK_OPERATION);
    createEReference(thenOperationEClass, THEN_OPERATION__ANDOR);
    createEReference(thenOperationEClass, THEN_OPERATION__TIME_POINT);
    createEReference(thenOperationEClass, THEN_OPERATION__FAILRESULT);

    totalExpressionEClass = createEClass(TOTAL_EXPRESSION);
    createEReference(totalExpressionEClass, TOTAL_EXPRESSION__SET);
    createEReference(totalExpressionEClass, TOTAL_EXPRESSION__TOTAL_CONDITION);
    createEReference(totalExpressionEClass, TOTAL_EXPRESSION__TOTAL_OPERATION);
    createEReference(totalExpressionEClass, TOTAL_EXPRESSION__ELSE_EXPRESSION);

    elseExpressionEClass = createEClass(ELSE_EXPRESSION);
    createEReference(elseExpressionEClass, ELSE_EXPRESSION__SET);
    createEReference(elseExpressionEClass, ELSE_EXPRESSION__TOTAL_CONDITION);
    createEReference(elseExpressionEClass, ELSE_EXPRESSION__TOTAL_OPERATION);

    ruleExpressionEClass = createEClass(RULE_EXPRESSION);
    createEAttribute(ruleExpressionEClass, RULE_EXPRESSION__REPEAT);
    createEAttribute(ruleExpressionEClass, RULE_EXPRESSION__NAME);
    createEReference(ruleExpressionEClass, RULE_EXPRESSION__SET);
    createEReference(ruleExpressionEClass, RULE_EXPRESSION__SETDATE);
    createEReference(ruleExpressionEClass, RULE_EXPRESSION__TOTAL_CONDITION);
    createEReference(ruleExpressionEClass, RULE_EXPRESSION__TOTAL_OPERATION);
    createEReference(ruleExpressionEClass, RULE_EXPRESSION__SUB_EXPRESSION);
    createEReference(ruleExpressionEClass, RULE_EXPRESSION__ELSE_EXPRESSION);

    setDateExpressionEClass = createEClass(SET_DATE_EXPRESSION);
    createEAttribute(setDateExpressionEClass, SET_DATE_EXPRESSION__MESSAGE);

    subExpressionEClass = createEClass(SUB_EXPRESSION);
    createEReference(subExpressionEClass, SUB_EXPRESSION__TOTAL_EXPRESSION);

    failResultEClass = createEClass(FAIL_RESULT);
    createEReference(failResultEClass, FAIL_RESULT__FOLLOWING_OPERATION);
    createEReference(failResultEClass, FAIL_RESULT__LINK_OPERATION);
    createEReference(failResultEClass, FAIL_RESULT__ANDOR);
    createEReference(failResultEClass, FAIL_RESULT__TIME_POINT);
    createEReference(failResultEClass, FAIL_RESULT__THENOPERATION);

    timepointEClass = createEClass(TIMEPOINT);

    withinPointEClass = createEClass(WITHIN_POINT);
    createEAttribute(withinPointEClass, WITHIN_POINT__NUMBER);
    createEAttribute(withinPointEClass, WITHIN_POINT__TIME);
    createEReference(withinPointEClass, WITHIN_POINT__THING);

    beforePointEClass = createEClass(BEFORE_POINT);
    createEReference(beforePointEClass, BEFORE_POINT__LINE_TIME);
    createEReference(beforePointEClass, BEFORE_POINT__VALUE);

    singleConditionEClass = createEClass(SINGLE_CONDITION);
    createEAttribute(singleConditionEClass, SINGLE_CONDITION__NO);
    createEReference(singleConditionEClass, SINGLE_CONDITION__CONDITION);

    trueConditionEClass = createEClass(TRUE_CONDITION);

    compareStringEClass = createEClass(COMPARE_STRING);
    createEReference(compareStringEClass, COMPARE_STRING__VALUE_A);
    createEReference(compareStringEClass, COMPARE_STRING__VALUE_B);

    timeSubEClass = createEClass(TIME_SUB);
    createEReference(timeSubEClass, TIME_SUB__VALUE_A);
    createEReference(timeSubEClass, TIME_SUB__VALUE_B);
    createEReference(timeSubEClass, TIME_SUB__VALUE_C);
    createEReference(timeSubEClass, TIME_SUB__DURATION);
    createEAttribute(timeSubEClass, TIME_SUB__COMPARE);

    isTimeEClass = createEClass(IS_TIME);
    createEReference(isTimeEClass, IS_TIME__EXPRESSION);
    createEReference(isTimeEClass, IS_TIME__VALUE);
    createEAttribute(isTimeEClass, IS_TIME__SYMBOL);
    createEReference(isTimeEClass, IS_TIME__DURATION);

    logicEClass = createEClass(LOGIC);
    createEReference(logicEClass, LOGIC__VALUE_A);
    createEReference(logicEClass, LOGIC__VALUE_B);
    createEAttribute(logicEClass, LOGIC__MATH_SYMBOL);

    isTrueEClass = createEClass(IS_TRUE);
    createEReference(isTrueEClass, IS_TRUE__COMPARE);

    isDoneEClass = createEClass(IS_DONE);
    createEReference(isDoneEClass, IS_DONE__NAME);

    checkExpressionEClass = createEClass(CHECK_EXPRESSION);
    createEReference(checkExpressionEClass, CHECK_EXPRESSION__NAME);

    mixExpressionEClass = createEClass(MIX_EXPRESSION);
    createEReference(mixExpressionEClass, MIX_EXPRESSION__EXPRESSION);
    createEReference(mixExpressionEClass, MIX_EXPRESSION__OTHER_MIX_EXPRESSION);

    otherMixExpressionEClass = createEClass(OTHER_MIX_EXPRESSION);
    createEAttribute(otherMixExpressionEClass, OTHER_MIX_EXPRESSION__LINK);
    createEReference(otherMixExpressionEClass, OTHER_MIX_EXPRESSION__EXPRESSION);

    singleExpressionEClass = createEClass(SINGLE_EXPRESSION);

    periodExpressionEClass = createEClass(PERIOD_EXPRESSION);
    createEAttribute(periodExpressionEClass, PERIOD_EXPRESSION__VALUE);
    createEAttribute(periodExpressionEClass, PERIOD_EXPRESSION__TYPE);

    getPeriodExpressionEClass = createEClass(GET_PERIOD_EXPRESSION);
    createEAttribute(getPeriodExpressionEClass, GET_PERIOD_EXPRESSION__VALUE);
    createEAttribute(getPeriodExpressionEClass, GET_PERIOD_EXPRESSION__TYPE);

    ruleTimeExpressionEClass = createEClass(RULE_TIME_EXPRESSION);
    createEReference(ruleTimeExpressionEClass, RULE_TIME_EXPRESSION__VALUE);

    otherExpressionEClass = createEClass(OTHER_EXPRESSION);
    createEAttribute(otherExpressionEClass, OTHER_EXPRESSION__VALUE);

    stringExpressionEClass = createEClass(STRING_EXPRESSION);
    createEAttribute(stringExpressionEClass, STRING_EXPRESSION__VALUE);

    floatExpressionEClass = createEClass(FLOAT_EXPRESSION);
    createEAttribute(floatExpressionEClass, FLOAT_EXPRESSION__VALUE);

    personExpressionEClass = createEClass(PERSON_EXPRESSION);
    createEReference(personExpressionEClass, PERSON_EXPRESSION__VALUE);

    regularExpressionEClass = createEClass(REGULAR_EXPRESSION);

    thingExpressionEClass = createEClass(THING_EXPRESSION);
    createEAttribute(thingExpressionEClass, THING_EXPRESSION__ATTRIBUTE);

    subjectExpressEClass = createEClass(SUBJECT_EXPRESS);
    createEReference(subjectExpressEClass, SUBJECT_EXPRESS__SUBJECT);

    objectExpressEClass = createEClass(OBJECT_EXPRESS);
    createEReference(objectExpressEClass, OBJECT_EXPRESS__OBJECT);

    trueOperationEClass = createEClass(TRUE_OPERATION);

    messageExpressionEClass = createEClass(MESSAGE_EXPRESSION);
    createEReference(messageExpressionEClass, MESSAGE_EXPRESSION__EVERYMASSAGE);

    everyMessageEClass = createEClass(EVERY_MESSAGE);
    createEAttribute(everyMessageEClass, EVERY_MESSAGE__SYMBOL);
    createEAttribute(everyMessageEClass, EVERY_MESSAGE__TYPE);
    createEAttribute(everyMessageEClass, EVERY_MESSAGE__MESSAGE);

    transferExpressionEClass = createEClass(TRANSFER_EXPRESSION);
    createEReference(transferExpressionEClass, TRANSFER_EXPRESSION__PERSON);
    createEReference(transferExpressionEClass, TRANSFER_EXPRESSION__VALUE);

    changeExpressionEClass = createEClass(CHANGE_EXPRESSION);

    changeStringEClass = createEClass(CHANGE_STRING);
    createEReference(changeStringEClass, CHANGE_STRING__CHANGE_THING);
    createEReference(changeStringEClass, CHANGE_STRING__CHANGE_RESULT);

    otherchangeEClass = createEClass(OTHERCHANGE);
    createEReference(otherchangeEClass, OTHERCHANGE__CHANGE_THING);
    createEReference(otherchangeEClass, OTHERCHANGE__CHANGE_RESULT);

    changeContractEClass = createEClass(CHANGE_CONTRACT);
    createEAttribute(changeContractEClass, CHANGE_CONTRACT__CHANGE_RESULT);

    changeRuleEClass = createEClass(CHANGE_RULE);
    createEReference(changeRuleEClass, CHANGE_RULE__CHANGE_THING);
    createEAttribute(changeRuleEClass, CHANGE_RULE__CHANGE_RESULT);

    changeOtherEClass = createEClass(CHANGE_OTHER);
    createEReference(changeOtherEClass, CHANGE_OTHER__CHANGE_THING);
    createEAttribute(changeOtherEClass, CHANGE_OTHER__CHANGE_RESULT);

    changeAddressEClass = createEClass(CHANGE_ADDRESS);
    createEReference(changeAddressEClass, CHANGE_ADDRESS__CHANGE_THING);
    createEReference(changeAddressEClass, CHANGE_ADDRESS__CHANGE_RESULT);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    durationEClass.getESuperTypes().add(this.getValue());
    nowEClass.getESuperTypes().add(this.getValue());
    nowEClass.getESuperTypes().add(this.getRegularExpression());
    thisStringEClass.getESuperTypes().add(this.getValue());
    addressEClass.getESuperTypes().add(this.getValue());
    allNumberEClass.getESuperTypes().add(this.getValue());
    allNumberEClass.getESuperTypes().add(this.getRegularExpression());
    thisDecimalEClass.getESuperTypes().add(this.getValue());
    thisDecimalEClass.getESuperTypes().add(this.getRegularExpression());
    urlEClass.getESuperTypes().add(this.getValue());
    thisBooleanEClass.getESuperTypes().add(this.getValue());
    thisBooleanEClass.getESuperTypes().add(this.getRegularExpression());
    thisDateEClass.getESuperTypes().add(this.getValue());
    thisDateEClass.getESuperTypes().add(this.getRegularExpression());
    rightEClass.getESuperTypes().add(this.getValue());
    parallelExpressionEClass.getESuperTypes().add(this.getManyRuleExpression());
    exclusiveExpressionEClass.getESuperTypes().add(this.getManyRuleExpression());
    regularRuleExpressionEClass.getESuperTypes().add(this.getManyRuleExpression());
    additionExpressionEClass.getESuperTypes().add(this.getManyRuleExpression());
    timepointEClass.getESuperTypes().add(this.getTrueCondition());
    withinPointEClass.getESuperTypes().add(this.getTimepoint());
    beforePointEClass.getESuperTypes().add(this.getTimepoint());
    compareStringEClass.getESuperTypes().add(this.getTrueCondition());
    timeSubEClass.getESuperTypes().add(this.getTrueCondition());
    isTimeEClass.getESuperTypes().add(this.getTrueCondition());
    logicEClass.getESuperTypes().add(this.getTrueCondition());
    isTrueEClass.getESuperTypes().add(this.getTrueCondition());
    isDoneEClass.getESuperTypes().add(this.getTrueCondition());
    checkExpressionEClass.getESuperTypes().add(this.getTrueCondition());
    periodExpressionEClass.getESuperTypes().add(this.getSingleExpression());
    getPeriodExpressionEClass.getESuperTypes().add(this.getSingleExpression());
    ruleTimeExpressionEClass.getESuperTypes().add(this.getSingleExpression());
    otherExpressionEClass.getESuperTypes().add(this.getSingleExpression());
    stringExpressionEClass.getESuperTypes().add(this.getSingleExpression());
    floatExpressionEClass.getESuperTypes().add(this.getSingleExpression());
    personExpressionEClass.getESuperTypes().add(this.getSingleExpression());
    regularExpressionEClass.getESuperTypes().add(this.getSingleExpression());
    thingExpressionEClass.getESuperTypes().add(this.getSingleExpression());
    subjectExpressEClass.getESuperTypes().add(this.getThingExpression());
    objectExpressEClass.getESuperTypes().add(this.getThingExpression());
    transferExpressionEClass.getESuperTypes().add(this.gettrueOperation());
    changeExpressionEClass.getESuperTypes().add(this.gettrueOperation());
    changeStringEClass.getESuperTypes().add(this.getchangeExpression());
    otherchangeEClass.getESuperTypes().add(this.getchangeExpression());
    changeContractEClass.getESuperTypes().add(this.getchangeExpression());
    changeRuleEClass.getESuperTypes().add(this.getchangeExpression());
    changeOtherEClass.getESuperTypes().add(this.getchangeExpression());
    changeAddressEClass.getESuperTypes().add(this.getchangeExpression());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getModel_PackageName(), ecorePackage.getEString(), "packageName", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getModel_Name(), ecorePackage.getEString(), "name", null, 0, 1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getModel_ExtendName(), ecorePackage.getEString(), "extendName", null, 0, 1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Subjects(), this.getSubject(), null, "subjects", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Objects(), this.getObject(), null, "objects", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Group(), this.getGroup(), null, "group", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Initialize(), this.getInitialize(), null, "initialize", null, 0, 1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_ContractMessage(), this.getContractMessage(), null, "contractMessage", null, 0, 1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Conditions(), this.getCondition(), null, "Conditions", null, 0, 1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Operations(), this.getOperation(), null, "operations", null, 0, 1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_RuleStructures(), this.getRuleStructure(), null, "ruleStructures", null, 0, 1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Require(), this.getRequire(), null, "require", null, 0, 1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(requireEClass, Require.class, "Require", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRequire_Value(), ecorePackage.getEString(), "value", null, 0, -1, Require.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(initializeEClass, Initialize.class, "Initialize", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getInitialize_Inits(), this.getinitExpressions(), null, "inits", null, 0, -1, Initialize.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getInitialize_Inito(), this.getinitExpressiono(), null, "inito", null, 0, -1, Initialize.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(initExpressionsEClass, initExpressions.class, "initExpressions", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getinitExpressions_Subtype(), this.getSubject(), null, "subtype", null, 0, 1, initExpressions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getinitExpressions_Name(), ecorePackage.getEString(), "name", null, 0, 1, initExpressions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getinitExpressions_Value(), this.getValue(), null, "value", null, 0, -1, initExpressions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(initExpressionoEClass, initExpressiono.class, "initExpressiono", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getinitExpressiono_Obtype(), this.getObject(), null, "obtype", null, 0, 1, initExpressiono.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getinitExpressiono_Name(), ecorePackage.getEString(), "name", null, 0, 1, initExpressiono.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getinitExpressiono_Value(), this.getValue(), null, "value", null, 0, -1, initExpressiono.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(groupEClass, Group.class, "Group", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getGroup_Subtype(), this.getSubject(), null, "subtype", null, 0, 1, Group.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGroup_Name(), ecorePackage.getEString(), "name", null, 0, 1, Group.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGroup_Value(), this.getinitExpressions(), null, "value", null, 0, -1, Group.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(subjectEClass, Subject.class, "Subject", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSubject_Type(), ecorePackage.getEString(), "type", null, 0, 1, Subject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSubject_Name(), ecorePackage.getEString(), "name", null, 0, 1, Subject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSubject_SubjectExpression(), this.getSubjectExpression(), null, "subjectExpression", null, 0, 1, Subject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(subjectExpressionEClass, SubjectExpression.class, "SubjectExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSubjectExpression_KeyValue(), this.getkeyvalue(), null, "keyValue", null, 0, -1, SubjectExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(contractMessageEClass, ContractMessage.class, "ContractMessage", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getContractMessage_Message(), this.getMessage(), null, "message", null, 0, -1, ContractMessage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(messageEClass, Message.class, "Message", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMessage_Type(), this.getkeyvalue(), null, "type", null, 0, 1, Message.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMessage_Value(), this.getValue(), null, "value", null, 0, 1, Message.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(keyvalueEClass, keyvalue.class, "keyvalue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getkeyvalue_Type(), ecorePackage.getEString(), "type", null, 0, 1, keyvalue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getkeyvalue_Name(), ecorePackage.getEString(), "name", null, 0, 1, keyvalue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(valueEClass, Value.class, "Value", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(durationEClass, Duration.class, "Duration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDuration_Value(), ecorePackage.getEInt(), "value", null, 0, 1, Duration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDuration_Symbol(), ecorePackage.getEString(), "symbol", null, 0, 1, Duration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(nowEClass, Now.class, "Now", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNow_Value(), ecorePackage.getEString(), "value", null, 0, 1, Now.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thisStringEClass, ThisString.class, "ThisString", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getThisString_Value(), ecorePackage.getEString(), "value", null, 0, 1, ThisString.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(addressEClass, Address.class, "Address", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAddress_Value(), ecorePackage.getEString(), "value", null, 0, 1, Address.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(allNumberEClass, AllNumber.class, "AllNumber", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAllNumber_Number(), ecorePackage.getEInt(), "number", null, 0, 1, AllNumber.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thisDecimalEClass, ThisDecimal.class, "ThisDecimal", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getThisDecimal_Value(), ecorePackage.getEString(), "value", null, 0, 1, ThisDecimal.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(urlEClass, url.class, "url", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(geturl_Value(), ecorePackage.getEString(), "value", null, 0, 1, url.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thisBooleanEClass, ThisBoolean.class, "ThisBoolean", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getThisBoolean_Value(), ecorePackage.getEString(), "value", null, 0, 1, ThisBoolean.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thisDateEClass, ThisDate.class, "ThisDate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getThisDate_Value(), this.getDATE(), null, "value", null, 0, 1, ThisDate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(rightEClass, Right.class, "Right", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRight_Right(), this.getinitExpressions(), null, "right", null, 0, 1, Right.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dateEClass, org.xtext.example.mydsl.sparrow.DATE.class, "DATE", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDATE_Year(), ecorePackage.getEInt(), "year", null, 0, 1, org.xtext.example.mydsl.sparrow.DATE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDATE_Month(), ecorePackage.getEInt(), "month", null, 0, 1, org.xtext.example.mydsl.sparrow.DATE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDATE_Day(), ecorePackage.getEInt(), "day", null, 0, 1, org.xtext.example.mydsl.sparrow.DATE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDATE_Hour(), ecorePackage.getEInt(), "hour", null, 0, 1, org.xtext.example.mydsl.sparrow.DATE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDATE_Min(), ecorePackage.getEInt(), "min", null, 0, 1, org.xtext.example.mydsl.sparrow.DATE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(objectEClass, org.xtext.example.mydsl.sparrow.Object.class, "Object", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getObject_Name(), ecorePackage.getEString(), "name", null, 0, 1, org.xtext.example.mydsl.sparrow.Object.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getObject_ObjectExpression(), this.getObjectExpression(), null, "objectExpression", null, 0, 1, org.xtext.example.mydsl.sparrow.Object.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(objectExpressionEClass, ObjectExpression.class, "ObjectExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getObjectExpression_KeyValue(), this.getkeyvalue(), null, "keyValue", null, 0, -1, ObjectExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conditionEClass, Condition.class, "Condition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCondition_Conditions(), this.getConditionLink(), null, "conditions", null, 0, -1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conditionLinkEClass, ConditionLink.class, "ConditionLink", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getConditionLink_Name(), ecorePackage.getEString(), "name", null, 0, 1, ConditionLink.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConditionLink_ConditionExpression(), this.getSingleCondition(), null, "conditionExpression", null, 0, 1, ConditionLink.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConditionLink_LinkCondition(), this.getSingleLinkCondition(), null, "linkCondition", null, 0, 1, ConditionLink.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConditionLink_AndOrLink(), this.getAndOrCondition(), null, "andOrLink", null, 0, -1, ConditionLink.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(andOrConditionEClass, AndOrCondition.class, "AndOrCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAndOrCondition_Link(), ecorePackage.getEString(), "link", null, 0, 1, AndOrCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAndOrCondition_Condition(), this.getSingleCondition(), null, "condition", null, 0, 1, AndOrCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAndOrCondition_LinkCondition(), this.getSingleLinkCondition(), null, "linkCondition", null, 0, 1, AndOrCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operationEClass, Operation.class, "Operation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getOperation_Operates(), this.getOperateLink(), null, "operates", null, 0, -1, Operation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operateLinkEClass, OperateLink.class, "OperateLink", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getOperateLink_Name(), ecorePackage.getEString(), "name", null, 0, 1, OperateLink.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOperateLink_FirstOperation(), this.gettrueOperation(), null, "firstOperation", null, 0, 1, OperateLink.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOperateLink_LinkOperation(), this.getOperateLink(), null, "linkOperation", null, 0, 1, OperateLink.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOperateLink_AndOrLink(), this.getAndOrOperationLink(), null, "andOrLink", null, 0, -1, OperateLink.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ruleStructureEClass, RuleStructure.class, "RuleStructure", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRuleStructure_ManyRuleExpression(), this.getManyRuleExpression(), null, "manyRuleExpression", null, 0, -1, RuleStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(manyRuleExpressionEClass, ManyRuleExpression.class, "ManyRuleExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getManyRuleExpression_RuleExpression(), this.getRuleExpression(), null, "ruleExpression", null, 0, -1, ManyRuleExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parallelExpressionEClass, ParallelExpression.class, "ParallelExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(exclusiveExpressionEClass, ExclusiveExpression.class, "ExclusiveExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(regularRuleExpressionEClass, RegularRuleExpression.class, "RegularRuleExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(additionExpressionEClass, AdditionExpression.class, "AdditionExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(totalConditionEClass, TotalCondition.class, "TotalCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTotalCondition_Condition(), this.getSingleCondition(), null, "condition", null, 0, 1, TotalCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTotalCondition_LinkCondition(), this.getSingleLinkCondition(), null, "linkCondition", null, 0, 1, TotalCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTotalCondition_Andorcondition(), this.getAndOrCondition(), null, "andorcondition", null, 0, -1, TotalCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(singleLinkConditionEClass, SingleLinkCondition.class, "SingleLinkCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSingleLinkCondition_No(), ecorePackage.getEString(), "no", null, 0, 1, SingleLinkCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSingleLinkCondition_LinkCondition(), this.getConditionLink(), null, "linkCondition", null, 0, 1, SingleLinkCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(totalOperationEClass, TotalOperation.class, "TotalOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTotalOperation_Person(), this.getinitExpressions(), null, "person", null, 0, 1, TotalOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTotalOperation_Person2(), this.getGroup(), null, "person2", null, 0, 1, TotalOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTotalOperation_FirstOperation(), this.gettrueOperation(), null, "firstOperation", null, 0, 1, TotalOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTotalOperation_LinkOperation(), this.getOperateLink(), null, "linkOperation", null, 0, 1, TotalOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTotalOperation_Andor(), this.getAndOrOperationLink(), null, "andor", null, 0, -1, TotalOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTotalOperation_TimePoint(), this.getTimepoint(), null, "timePoint", null, 0, 1, TotalOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTotalOperation_Failresult(), this.getFailResult(), null, "failresult", null, 0, 1, TotalOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTotalOperation_Thenoperation(), this.getThenOperation(), null, "thenoperation", null, 0, -1, TotalOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(andOrOperationLinkEClass, AndOrOperationLink.class, "AndOrOperationLink", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAndOrOperationLink_Link(), ecorePackage.getEString(), "link", null, 0, 1, AndOrOperationLink.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAndOrOperationLink_FirstOperation(), this.gettrueOperation(), null, "firstOperation", null, 0, 1, AndOrOperationLink.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAndOrOperationLink_LinkOperation(), this.getOperateLink(), null, "linkOperation", null, 0, 1, AndOrOperationLink.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thenOperationEClass, ThenOperation.class, "ThenOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getThenOperation_FollowingOperation(), this.gettrueOperation(), null, "followingOperation", null, 0, 1, ThenOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getThenOperation_LinkOperation(), this.getOperateLink(), null, "linkOperation", null, 0, 1, ThenOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getThenOperation_Andor(), this.getAndOrOperationLink(), null, "andor", null, 0, -1, ThenOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getThenOperation_TimePoint(), this.getTimepoint(), null, "timePoint", null, 0, 1, ThenOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getThenOperation_Failresult(), this.getFailResult(), null, "failresult", null, 0, 1, ThenOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(totalExpressionEClass, TotalExpression.class, "TotalExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTotalExpression_Set(), this.getmessageExpression(), null, "set", null, 0, 1, TotalExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTotalExpression_TotalCondition(), this.getTotalCondition(), null, "totalCondition", null, 0, 1, TotalExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTotalExpression_TotalOperation(), this.getTotalOperation(), null, "totalOperation", null, 0, 1, TotalExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTotalExpression_ElseExpression(), this.getElseExpression(), null, "elseExpression", null, 0, 1, TotalExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(elseExpressionEClass, ElseExpression.class, "ElseExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getElseExpression_Set(), this.getmessageExpression(), null, "set", null, 0, 1, ElseExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getElseExpression_TotalCondition(), this.getTotalCondition(), null, "totalCondition", null, 0, 1, ElseExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getElseExpression_TotalOperation(), this.getTotalOperation(), null, "totalOperation", null, 0, 1, ElseExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ruleExpressionEClass, RuleExpression.class, "RuleExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRuleExpression_Repeat(), ecorePackage.getEString(), "repeat", null, 0, 1, RuleExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRuleExpression_Name(), ecorePackage.getEString(), "name", null, 0, 1, RuleExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRuleExpression_Set(), this.getmessageExpression(), null, "set", null, 0, 1, RuleExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRuleExpression_Setdate(), this.getsetDateExpression(), null, "setdate", null, 0, 1, RuleExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRuleExpression_TotalCondition(), this.getTotalCondition(), null, "totalCondition", null, 0, 1, RuleExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRuleExpression_TotalOperation(), this.getTotalOperation(), null, "totalOperation", null, 0, 1, RuleExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRuleExpression_SubExpression(), this.getSubExpression(), null, "subExpression", null, 0, -1, RuleExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRuleExpression_ElseExpression(), this.getElseExpression(), null, "elseExpression", null, 0, 1, RuleExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(setDateExpressionEClass, setDateExpression.class, "setDateExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getsetDateExpression_Message(), ecorePackage.getEString(), "message", null, 0, 1, setDateExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(subExpressionEClass, SubExpression.class, "SubExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSubExpression_TotalExpression(), this.getTotalExpression(), null, "totalExpression", null, 0, 1, SubExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(failResultEClass, FailResult.class, "FailResult", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFailResult_FollowingOperation(), this.gettrueOperation(), null, "followingOperation", null, 0, 1, FailResult.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFailResult_LinkOperation(), this.getOperateLink(), null, "linkOperation", null, 0, 1, FailResult.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFailResult_Andor(), this.getAndOrOperationLink(), null, "andor", null, 0, -1, FailResult.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFailResult_TimePoint(), this.getTimepoint(), null, "timePoint", null, 0, 1, FailResult.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFailResult_Thenoperation(), this.getThenOperation(), null, "thenoperation", null, 0, -1, FailResult.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(timepointEClass, Timepoint.class, "Timepoint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(withinPointEClass, WithinPoint.class, "WithinPoint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getWithinPoint_Number(), ecorePackage.getEInt(), "number", null, 0, 1, WithinPoint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWithinPoint_Time(), ecorePackage.getEString(), "time", null, 0, 1, WithinPoint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getWithinPoint_Thing(), this.getRuleExpression(), null, "thing", null, 0, 1, WithinPoint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(beforePointEClass, BeforePoint.class, "BeforePoint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBeforePoint_LineTime(), this.getThisDate(), null, "lineTime", null, 0, 1, BeforePoint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBeforePoint_Value(), this.getkeyvalue(), null, "value", null, 0, 1, BeforePoint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(singleConditionEClass, SingleCondition.class, "SingleCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSingleCondition_No(), ecorePackage.getEString(), "no", null, 0, 1, SingleCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSingleCondition_Condition(), this.getTrueCondition(), null, "condition", null, 0, 1, SingleCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(trueConditionEClass, TrueCondition.class, "TrueCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(compareStringEClass, CompareString.class, "CompareString", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCompareString_ValueA(), this.getMixExpression(), null, "valueA", null, 0, 1, CompareString.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCompareString_ValueB(), this.getMixExpression(), null, "valueB", null, 0, 1, CompareString.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(timeSubEClass, TimeSub.class, "TimeSub", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTimeSub_ValueA(), this.getMixExpression(), null, "valueA", null, 0, 1, TimeSub.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTimeSub_ValueB(), this.getMixExpression(), null, "valueB", null, 0, 1, TimeSub.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTimeSub_ValueC(), this.getRuleExpression(), null, "valueC", null, 0, 1, TimeSub.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTimeSub_Duration(), this.getDuration(), null, "duration", null, 0, 1, TimeSub.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTimeSub_Compare(), ecorePackage.getEString(), "compare", null, 0, 1, TimeSub.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(isTimeEClass, isTime.class, "isTime", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getisTime_Expression(), this.getMixExpression(), null, "expression", null, 0, 1, isTime.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getisTime_Value(), this.getRuleExpression(), null, "value", null, 0, 1, isTime.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getisTime_Symbol(), ecorePackage.getEString(), "symbol", null, 0, 1, isTime.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getisTime_Duration(), this.getDuration(), null, "duration", null, 0, 1, isTime.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logicEClass, logic.class, "logic", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getlogic_ValueA(), this.getMixExpression(), null, "valueA", null, 0, 1, logic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getlogic_ValueB(), this.getMixExpression(), null, "valueB", null, 0, 1, logic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getlogic_MathSymbol(), ecorePackage.getEString(), "mathSymbol", null, 0, 1, logic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(isTrueEClass, isTrue.class, "isTrue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getisTrue_Compare(), this.getSingleExpression(), null, "compare", null, 0, 1, isTrue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(isDoneEClass, isDone.class, "isDone", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getisDone_Name(), this.getRuleExpression(), null, "name", null, 0, 1, isDone.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(checkExpressionEClass, checkExpression.class, "checkExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getcheckExpression_Name(), this.getModel(), null, "name", null, 0, 1, checkExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mixExpressionEClass, MixExpression.class, "MixExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMixExpression_Expression(), this.getSingleExpression(), null, "expression", null, 0, 1, MixExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMixExpression_OtherMixExpression(), this.getOtherMixExpression(), null, "otherMixExpression", null, 0, -1, MixExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(otherMixExpressionEClass, OtherMixExpression.class, "OtherMixExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getOtherMixExpression_Link(), ecorePackage.getEString(), "link", null, 0, 1, OtherMixExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOtherMixExpression_Expression(), this.getSingleExpression(), null, "expression", null, 0, 1, OtherMixExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(singleExpressionEClass, SingleExpression.class, "SingleExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(periodExpressionEClass, PeriodExpression.class, "PeriodExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPeriodExpression_Value(), ecorePackage.getEInt(), "value", null, 0, 1, PeriodExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPeriodExpression_Type(), ecorePackage.getEString(), "type", null, 0, 1, PeriodExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(getPeriodExpressionEClass, GetPeriodExpression.class, "GetPeriodExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGetPeriodExpression_Value(), ecorePackage.getEString(), "value", null, 0, 1, GetPeriodExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGetPeriodExpression_Type(), ecorePackage.getEString(), "type", null, 0, 1, GetPeriodExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ruleTimeExpressionEClass, RuleTimeExpression.class, "RuleTimeExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRuleTimeExpression_Value(), this.getRuleExpression(), null, "value", null, 0, 1, RuleTimeExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(otherExpressionEClass, OtherExpression.class, "OtherExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getOtherExpression_Value(), ecorePackage.getEString(), "value", null, 0, 1, OtherExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(stringExpressionEClass, StringExpression.class, "StringExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStringExpression_Value(), ecorePackage.getEString(), "value", null, 0, 1, StringExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(floatExpressionEClass, FloatExpression.class, "FloatExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFloatExpression_Value(), ecorePackage.getEString(), "value", null, 0, 1, FloatExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(personExpressionEClass, PersonExpression.class, "PersonExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPersonExpression_Value(), this.getinitExpressions(), null, "value", null, 0, 1, PersonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(regularExpressionEClass, RegularExpression.class, "RegularExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(thingExpressionEClass, ThingExpression.class, "ThingExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getThingExpression_Attribute(), ecorePackage.getEString(), "attribute", null, 0, 1, ThingExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(subjectExpressEClass, SubjectExpress.class, "SubjectExpress", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSubjectExpress_Subject(), this.getinitExpressions(), null, "subject", null, 0, 1, SubjectExpress.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(objectExpressEClass, ObjectExpress.class, "ObjectExpress", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getObjectExpress_Object(), this.getinitExpressiono(), null, "object", null, 0, 1, ObjectExpress.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(trueOperationEClass, trueOperation.class, "trueOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(messageExpressionEClass, messageExpression.class, "messageExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getmessageExpression_Everymassage(), this.geteveryMessage(), null, "everymassage", null, 0, -1, messageExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(everyMessageEClass, everyMessage.class, "everyMessage", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(geteveryMessage_Symbol(), ecorePackage.getEString(), "symbol", null, 0, 1, everyMessage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(geteveryMessage_Type(), ecorePackage.getEString(), "type", null, 0, 1, everyMessage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(geteveryMessage_Message(), ecorePackage.getEString(), "message", null, 0, 1, everyMessage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(transferExpressionEClass, transferExpression.class, "transferExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(gettransferExpression_Person(), this.getinitExpressions(), null, "person", null, 0, 1, transferExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettransferExpression_Value(), this.getMixExpression(), null, "value", null, 0, 1, transferExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(changeExpressionEClass, changeExpression.class, "changeExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(changeStringEClass, changeString.class, "changeString", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getchangeString_ChangeThing(), this.getMixExpression(), null, "changeThing", null, 0, 1, changeString.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getchangeString_ChangeResult(), this.getMixExpression(), null, "changeResult", null, 0, 1, changeString.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(otherchangeEClass, otherchange.class, "otherchange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getotherchange_ChangeThing(), this.getMixExpression(), null, "changeThing", null, 0, 1, otherchange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getotherchange_ChangeResult(), this.getMixExpression(), null, "changeResult", null, 0, 1, otherchange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(changeContractEClass, changeContract.class, "changeContract", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getchangeContract_ChangeResult(), ecorePackage.getEString(), "changeResult", null, 0, 1, changeContract.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(changeRuleEClass, changeRule.class, "changeRule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getchangeRule_ChangeThing(), this.getRuleExpression(), null, "changeThing", null, 0, 1, changeRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getchangeRule_ChangeResult(), ecorePackage.getEString(), "changeResult", null, 0, 1, changeRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(changeOtherEClass, changeOther.class, "changeOther", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getchangeOther_ChangeThing(), this.getSingleExpression(), null, "changeThing", null, 0, 1, changeOther.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getchangeOther_ChangeResult(), ecorePackage.getEString(), "changeResult", null, 0, 1, changeOther.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(changeAddressEClass, changeAddress.class, "changeAddress", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getchangeAddress_ChangeThing(), this.getMixExpression(), null, "changeThing", null, 0, 1, changeAddress.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getchangeAddress_ChangeResult(), this.getMixExpression(), null, "changeResult", null, 0, 1, changeAddress.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //SparrowPackageImpl
