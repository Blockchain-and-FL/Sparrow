/**
 * generated by Xtext 2.29.0
 */
package org.xtext.example.mydsl.sparrow.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.sparrow.Initialize;
import org.xtext.example.mydsl.sparrow.SparrowPackage;
import org.xtext.example.mydsl.sparrow.initExpressiono;
import org.xtext.example.mydsl.sparrow.initExpressions;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Initialize</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.sparrow.impl.InitializeImpl#getInits <em>Inits</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.sparrow.impl.InitializeImpl#getInito <em>Inito</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InitializeImpl extends MinimalEObjectImpl.Container implements Initialize
{
  /**
   * The cached value of the '{@link #getInits() <em>Inits</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInits()
   * @generated
   * @ordered
   */
  protected EList<initExpressions> inits;

  /**
   * The cached value of the '{@link #getInito() <em>Inito</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInito()
   * @generated
   * @ordered
   */
  protected EList<initExpressiono> inito;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InitializeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SparrowPackage.Literals.INITIALIZE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<initExpressions> getInits()
  {
    if (inits == null)
    {
      inits = new EObjectContainmentEList<initExpressions>(initExpressions.class, this, SparrowPackage.INITIALIZE__INITS);
    }
    return inits;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<initExpressiono> getInito()
  {
    if (inito == null)
    {
      inito = new EObjectContainmentEList<initExpressiono>(initExpressiono.class, this, SparrowPackage.INITIALIZE__INITO);
    }
    return inito;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SparrowPackage.INITIALIZE__INITS:
        return ((InternalEList<?>)getInits()).basicRemove(otherEnd, msgs);
      case SparrowPackage.INITIALIZE__INITO:
        return ((InternalEList<?>)getInito()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SparrowPackage.INITIALIZE__INITS:
        return getInits();
      case SparrowPackage.INITIALIZE__INITO:
        return getInito();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SparrowPackage.INITIALIZE__INITS:
        getInits().clear();
        getInits().addAll((Collection<? extends initExpressions>)newValue);
        return;
      case SparrowPackage.INITIALIZE__INITO:
        getInito().clear();
        getInito().addAll((Collection<? extends initExpressiono>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SparrowPackage.INITIALIZE__INITS:
        getInits().clear();
        return;
      case SparrowPackage.INITIALIZE__INITO:
        getInito().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SparrowPackage.INITIALIZE__INITS:
        return inits != null && !inits.isEmpty();
      case SparrowPackage.INITIALIZE__INITO:
        return inito != null && !inito.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //InitializeImpl
