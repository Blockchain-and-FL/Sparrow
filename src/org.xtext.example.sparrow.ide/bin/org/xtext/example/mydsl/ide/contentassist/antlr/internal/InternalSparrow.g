/*
 * generated by Xtext 2.29.0
 */
grammar InternalSparrow;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.SparrowGrammarAccess;

}
@parser::members {
	private SparrowGrammarAccess grammarAccess;

	public void setGrammarAccess(SparrowGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)?
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequire
entryRuleRequire
:
{ before(grammarAccess.getRequireRule()); }
	 ruleRequire
{ after(grammarAccess.getRequireRule()); } 
	 EOF 
;

// Rule Require
ruleRequire 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequireAccess().getGroup()); }
		(rule__Require__Group__0)
		{ after(grammarAccess.getRequireAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconditiontype
entryRuleconditiontype
:
{ before(grammarAccess.getConditiontypeRule()); }
	 ruleconditiontype
{ after(grammarAccess.getConditiontypeRule()); } 
	 EOF 
;

// Rule conditiontype
ruleconditiontype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditiontypeAccess().getAlternatives()); }
		(rule__Conditiontype__Alternatives)
		{ after(grammarAccess.getConditiontypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleactiontype
entryRuleactiontype
:
{ before(grammarAccess.getActiontypeRule()); }
	 ruleactiontype
{ after(grammarAccess.getActiontypeRule()); } 
	 EOF 
;

// Rule actiontype
ruleactiontype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActiontypeAccess().getAlternatives()); }
		(rule__Actiontype__Alternatives)
		{ after(grammarAccess.getActiontypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitialize
entryRuleInitialize
:
{ before(grammarAccess.getInitializeRule()); }
	 ruleInitialize
{ after(grammarAccess.getInitializeRule()); } 
	 EOF 
;

// Rule Initialize
ruleInitialize 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitializeAccess().getGroup()); }
		(rule__Initialize__Group__0)
		{ after(grammarAccess.getInitializeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinitExpressions
entryRuleinitExpressions
:
{ before(grammarAccess.getInitExpressionsRule()); }
	 ruleinitExpressions
{ after(grammarAccess.getInitExpressionsRule()); } 
	 EOF 
;

// Rule initExpressions
ruleinitExpressions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitExpressionsAccess().getGroup()); }
		(rule__InitExpressions__Group__0)
		{ after(grammarAccess.getInitExpressionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinitExpressiono
entryRuleinitExpressiono
:
{ before(grammarAccess.getInitExpressionoRule()); }
	 ruleinitExpressiono
{ after(grammarAccess.getInitExpressionoRule()); } 
	 EOF 
;

// Rule initExpressiono
ruleinitExpressiono 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitExpressionoAccess().getGroup()); }
		(rule__InitExpressiono__Group__0)
		{ after(grammarAccess.getInitExpressionoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGroup
entryRuleGroup
:
{ before(grammarAccess.getGroupRule()); }
	 ruleGroup
{ after(grammarAccess.getGroupRule()); } 
	 EOF 
;

// Rule Group
ruleGroup 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGroupAccess().getGroup()); }
		(rule__Group__Group__0)
		{ after(grammarAccess.getGroupAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubject
entryRuleSubject
:
{ before(grammarAccess.getSubjectRule()); }
	 ruleSubject
{ after(grammarAccess.getSubjectRule()); } 
	 EOF 
;

// Rule Subject
ruleSubject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubjectAccess().getGroup()); }
		(rule__Subject__Group__0)
		{ after(grammarAccess.getSubjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubjectExpression
entryRuleSubjectExpression
:
{ before(grammarAccess.getSubjectExpressionRule()); }
	 ruleSubjectExpression
{ after(grammarAccess.getSubjectExpressionRule()); } 
	 EOF 
;

// Rule SubjectExpression
ruleSubjectExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubjectExpressionAccess().getGroup()); }
		(rule__SubjectExpression__Group__0)
		{ after(grammarAccess.getSubjectExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContractMessage
entryRuleContractMessage
:
{ before(grammarAccess.getContractMessageRule()); }
	 ruleContractMessage
{ after(grammarAccess.getContractMessageRule()); } 
	 EOF 
;

// Rule ContractMessage
ruleContractMessage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContractMessageAccess().getGroup()); }
		(rule__ContractMessage__Group__0)
		{ after(grammarAccess.getContractMessageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMessage
entryRuleMessage
:
{ before(grammarAccess.getMessageRule()); }
	 ruleMessage
{ after(grammarAccess.getMessageRule()); } 
	 EOF 
;

// Rule Message
ruleMessage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMessageAccess().getGroup()); }
		(rule__Message__Group__0)
		{ after(grammarAccess.getMessageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulekeyvalue
entryRulekeyvalue
:
{ before(grammarAccess.getKeyvalueRule()); }
	 rulekeyvalue
{ after(grammarAccess.getKeyvalueRule()); } 
	 EOF 
;

// Rule keyvalue
rulekeyvalue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyvalueAccess().getGroup()); }
		(rule__Keyvalue__Group__0)
		{ after(grammarAccess.getKeyvalueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype
entryRuletype
:
{ before(grammarAccess.getTypeRule()); }
	 ruletype
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule type
ruletype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDuration
entryRuleDuration
:
{ before(grammarAccess.getDurationRule()); }
	 ruleDuration
{ after(grammarAccess.getDurationRule()); } 
	 EOF 
;

// Rule Duration
ruleDuration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDurationAccess().getGroup()); }
		(rule__Duration__Group__0)
		{ after(grammarAccess.getDurationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNow
entryRuleNow
:
{ before(grammarAccess.getNowRule()); }
	 ruleNow
{ after(grammarAccess.getNowRule()); } 
	 EOF 
;

// Rule Now
ruleNow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNowAccess().getValueAssignment()); }
		(rule__Now__ValueAssignment)
		{ after(grammarAccess.getNowAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThisString
entryRuleThisString
:
{ before(grammarAccess.getThisStringRule()); }
	 ruleThisString
{ after(grammarAccess.getThisStringRule()); } 
	 EOF 
;

// Rule ThisString
ruleThisString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThisStringAccess().getValueAssignment()); }
		(rule__ThisString__ValueAssignment)
		{ after(grammarAccess.getThisStringAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddress
entryRuleAddress
:
{ before(grammarAccess.getAddressRule()); }
	 ruleAddress
{ after(grammarAccess.getAddressRule()); } 
	 EOF 
;

// Rule Address
ruleAddress 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddressAccess().getGroup()); }
		(rule__Address__Group__0)
		{ after(grammarAccess.getAddressAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAllNumber
entryRuleAllNumber
:
{ before(grammarAccess.getAllNumberRule()); }
	 ruleAllNumber
{ after(grammarAccess.getAllNumberRule()); } 
	 EOF 
;

// Rule AllNumber
ruleAllNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAllNumberAccess().getNumberAssignment()); }
		(rule__AllNumber__NumberAssignment)
		{ after(grammarAccess.getAllNumberAccess().getNumberAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThisDecimal
entryRuleThisDecimal
:
{ before(grammarAccess.getThisDecimalRule()); }
	 ruleThisDecimal
{ after(grammarAccess.getThisDecimalRule()); } 
	 EOF 
;

// Rule ThisDecimal
ruleThisDecimal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThisDecimalAccess().getValueAssignment()); }
		(rule__ThisDecimal__ValueAssignment)
		{ after(grammarAccess.getThisDecimalAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleurl
entryRuleurl
:
{ before(grammarAccess.getUrlRule()); }
	 ruleurl
{ after(grammarAccess.getUrlRule()); } 
	 EOF 
;

// Rule url
ruleurl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUrlAccess().getValueAssignment()); }
		(rule__Url__ValueAssignment)
		{ after(grammarAccess.getUrlAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThisBoolean
entryRuleThisBoolean
:
{ before(grammarAccess.getThisBooleanRule()); }
	 ruleThisBoolean
{ after(grammarAccess.getThisBooleanRule()); } 
	 EOF 
;

// Rule ThisBoolean
ruleThisBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThisBooleanAccess().getValueAssignment()); }
		(rule__ThisBoolean__ValueAssignment)
		{ after(grammarAccess.getThisBooleanAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThisDate
entryRuleThisDate
:
{ before(grammarAccess.getThisDateRule()); }
	 ruleThisDate
{ after(grammarAccess.getThisDateRule()); } 
	 EOF 
;

// Rule ThisDate
ruleThisDate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThisDateAccess().getValueAssignment()); }
		(rule__ThisDate__ValueAssignment)
		{ after(grammarAccess.getThisDateAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRight
entryRuleRight
:
{ before(grammarAccess.getRightRule()); }
	 ruleRight
{ after(grammarAccess.getRightRule()); } 
	 EOF 
;

// Rule Right
ruleRight 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightAccess().getRightAssignment()); }
		(rule__Right__RightAssignment)
		{ after(grammarAccess.getRightAccess().getRightAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDATE
entryRuleDATE
:
{ before(grammarAccess.getDATERule()); }
	 ruleDATE
{ after(grammarAccess.getDATERule()); } 
	 EOF 
;

// Rule DATE
ruleDATE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDATEAccess().getGroup()); }
		(rule__DATE__Group__0)
		{ after(grammarAccess.getDATEAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObject
entryRuleObject
:
{ before(grammarAccess.getObjectRule()); }
	 ruleObject
{ after(grammarAccess.getObjectRule()); } 
	 EOF 
;

// Rule Object
ruleObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectAccess().getGroup()); }
		(rule__Object__Group__0)
		{ after(grammarAccess.getObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectExpression
entryRuleObjectExpression
:
{ before(grammarAccess.getObjectExpressionRule()); }
	 ruleObjectExpression
{ after(grammarAccess.getObjectExpressionRule()); } 
	 EOF 
;

// Rule ObjectExpression
ruleObjectExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectExpressionAccess().getGroup()); }
		(rule__ObjectExpression__Group__0)
		{ after(grammarAccess.getObjectExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionLink
entryRuleConditionLink
:
{ before(grammarAccess.getConditionLinkRule()); }
	 ruleConditionLink
{ after(grammarAccess.getConditionLinkRule()); } 
	 EOF 
;

// Rule ConditionLink
ruleConditionLink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionLinkAccess().getGroup()); }
		(rule__ConditionLink__Group__0)
		{ after(grammarAccess.getConditionLinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndOrCondition
entryRuleAndOrCondition
:
{ before(grammarAccess.getAndOrConditionRule()); }
	 ruleAndOrCondition
{ after(grammarAccess.getAndOrConditionRule()); } 
	 EOF 
;

// Rule AndOrCondition
ruleAndOrCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndOrConditionAccess().getGroup()); }
		(rule__AndOrCondition__Group__0)
		{ after(grammarAccess.getAndOrConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationAccess().getGroup()); }
		(rule__Operation__Group__0)
		{ after(grammarAccess.getOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperateLink
entryRuleOperateLink
:
{ before(grammarAccess.getOperateLinkRule()); }
	 ruleOperateLink
{ after(grammarAccess.getOperateLinkRule()); } 
	 EOF 
;

// Rule OperateLink
ruleOperateLink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperateLinkAccess().getGroup()); }
		(rule__OperateLink__Group__0)
		{ after(grammarAccess.getOperateLinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleStructure
entryRuleRuleStructure
:
{ before(grammarAccess.getRuleStructureRule()); }
	 ruleRuleStructure
{ after(grammarAccess.getRuleStructureRule()); } 
	 EOF 
;

// Rule RuleStructure
ruleRuleStructure 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleStructureAccess().getGroup()); }
		(rule__RuleStructure__Group__0)
		{ after(grammarAccess.getRuleStructureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleManyRuleExpression
entryRuleManyRuleExpression
:
{ before(grammarAccess.getManyRuleExpressionRule()); }
	 ruleManyRuleExpression
{ after(grammarAccess.getManyRuleExpressionRule()); } 
	 EOF 
;

// Rule ManyRuleExpression
ruleManyRuleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getManyRuleExpressionAccess().getAlternatives()); }
		(rule__ManyRuleExpression__Alternatives)
		{ after(grammarAccess.getManyRuleExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParallelExpression
entryRuleParallelExpression
:
{ before(grammarAccess.getParallelExpressionRule()); }
	 ruleParallelExpression
{ after(grammarAccess.getParallelExpressionRule()); } 
	 EOF 
;

// Rule ParallelExpression
ruleParallelExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParallelExpressionAccess().getGroup()); }
		(rule__ParallelExpression__Group__0)
		{ after(grammarAccess.getParallelExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExclusiveExpression
entryRuleExclusiveExpression
:
{ before(grammarAccess.getExclusiveExpressionRule()); }
	 ruleExclusiveExpression
{ after(grammarAccess.getExclusiveExpressionRule()); } 
	 EOF 
;

// Rule ExclusiveExpression
ruleExclusiveExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExclusiveExpressionAccess().getGroup()); }
		(rule__ExclusiveExpression__Group__0)
		{ after(grammarAccess.getExclusiveExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegularRuleExpression
entryRuleRegularRuleExpression
:
{ before(grammarAccess.getRegularRuleExpressionRule()); }
	 ruleRegularRuleExpression
{ after(grammarAccess.getRegularRuleExpressionRule()); } 
	 EOF 
;

// Rule RegularRuleExpression
ruleRegularRuleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegularRuleExpressionAccess().getGroup()); }
		(rule__RegularRuleExpression__Group__0)
		{ after(grammarAccess.getRegularRuleExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditionExpression
entryRuleAdditionExpression
:
{ before(grammarAccess.getAdditionExpressionRule()); }
	 ruleAdditionExpression
{ after(grammarAccess.getAdditionExpressionRule()); } 
	 EOF 
;

// Rule AdditionExpression
ruleAdditionExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionExpressionAccess().getGroup()); }
		(rule__AdditionExpression__Group__0)
		{ after(grammarAccess.getAdditionExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTotalCondition
entryRuleTotalCondition
:
{ before(grammarAccess.getTotalConditionRule()); }
	 ruleTotalCondition
{ after(grammarAccess.getTotalConditionRule()); } 
	 EOF 
;

// Rule TotalCondition
ruleTotalCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTotalConditionAccess().getGroup()); }
		(rule__TotalCondition__Group__0)
		{ after(grammarAccess.getTotalConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleLinkCondition
entryRuleSingleLinkCondition
:
{ before(grammarAccess.getSingleLinkConditionRule()); }
	 ruleSingleLinkCondition
{ after(grammarAccess.getSingleLinkConditionRule()); } 
	 EOF 
;

// Rule SingleLinkCondition
ruleSingleLinkCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleLinkConditionAccess().getGroup()); }
		(rule__SingleLinkCondition__Group__0)
		{ after(grammarAccess.getSingleLinkConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTotalOperation
entryRuleTotalOperation
:
{ before(grammarAccess.getTotalOperationRule()); }
	 ruleTotalOperation
{ after(grammarAccess.getTotalOperationRule()); } 
	 EOF 
;

// Rule TotalOperation
ruleTotalOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTotalOperationAccess().getGroup()); }
		(rule__TotalOperation__Group__0)
		{ after(grammarAccess.getTotalOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndOrOperationLink
entryRuleAndOrOperationLink
:
{ before(grammarAccess.getAndOrOperationLinkRule()); }
	 ruleAndOrOperationLink
{ after(grammarAccess.getAndOrOperationLinkRule()); } 
	 EOF 
;

// Rule AndOrOperationLink
ruleAndOrOperationLink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndOrOperationLinkAccess().getGroup()); }
		(rule__AndOrOperationLink__Group__0)
		{ after(grammarAccess.getAndOrOperationLinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThenOperation
entryRuleThenOperation
:
{ before(grammarAccess.getThenOperationRule()); }
	 ruleThenOperation
{ after(grammarAccess.getThenOperationRule()); } 
	 EOF 
;

// Rule ThenOperation
ruleThenOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThenOperationAccess().getGroup()); }
		(rule__ThenOperation__Group__0)
		{ after(grammarAccess.getThenOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTotalExpression
entryRuleTotalExpression
:
{ before(grammarAccess.getTotalExpressionRule()); }
	 ruleTotalExpression
{ after(grammarAccess.getTotalExpressionRule()); } 
	 EOF 
;

// Rule TotalExpression
ruleTotalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTotalExpressionAccess().getGroup()); }
		(rule__TotalExpression__Group__0)
		{ after(grammarAccess.getTotalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElseExpression
entryRuleElseExpression
:
{ before(grammarAccess.getElseExpressionRule()); }
	 ruleElseExpression
{ after(grammarAccess.getElseExpressionRule()); } 
	 EOF 
;

// Rule ElseExpression
ruleElseExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElseExpressionAccess().getGroup()); }
		(rule__ElseExpression__Group__0)
		{ after(grammarAccess.getElseExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleExpression
entryRuleRuleExpression
:
{ before(grammarAccess.getRuleExpressionRule()); }
	 ruleRuleExpression
{ after(grammarAccess.getRuleExpressionRule()); } 
	 EOF 
;

// Rule RuleExpression
ruleRuleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleExpressionAccess().getGroup()); }
		(rule__RuleExpression__Group__0)
		{ after(grammarAccess.getRuleExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesetDateExpression
entryRulesetDateExpression
:
{ before(grammarAccess.getSetDateExpressionRule()); }
	 rulesetDateExpression
{ after(grammarAccess.getSetDateExpressionRule()); } 
	 EOF 
;

// Rule setDateExpression
rulesetDateExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetDateExpressionAccess().getGroup()); }
		(rule__SetDateExpression__Group__0)
		{ after(grammarAccess.getSetDateExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubExpression
entryRuleSubExpression
:
{ before(grammarAccess.getSubExpressionRule()); }
	 ruleSubExpression
{ after(grammarAccess.getSubExpressionRule()); } 
	 EOF 
;

// Rule SubExpression
ruleSubExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubExpressionAccess().getGroup()); }
		(rule__SubExpression__Group__0)
		{ after(grammarAccess.getSubExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFailResult
entryRuleFailResult
:
{ before(grammarAccess.getFailResultRule()); }
	 ruleFailResult
{ after(grammarAccess.getFailResultRule()); } 
	 EOF 
;

// Rule FailResult
ruleFailResult 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFailResultAccess().getGroup()); }
		(rule__FailResult__Group__0)
		{ after(grammarAccess.getFailResultAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimepoint
entryRuleTimepoint
:
{ before(grammarAccess.getTimepointRule()); }
	 ruleTimepoint
{ after(grammarAccess.getTimepointRule()); } 
	 EOF 
;

// Rule Timepoint
ruleTimepoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimepointAccess().getAlternatives()); }
		(rule__Timepoint__Alternatives)
		{ after(grammarAccess.getTimepointAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWithinPoint
entryRuleWithinPoint
:
{ before(grammarAccess.getWithinPointRule()); }
	 ruleWithinPoint
{ after(grammarAccess.getWithinPointRule()); } 
	 EOF 
;

// Rule WithinPoint
ruleWithinPoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWithinPointAccess().getGroup()); }
		(rule__WithinPoint__Group__0)
		{ after(grammarAccess.getWithinPointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBeforePoint
entryRuleBeforePoint
:
{ before(grammarAccess.getBeforePointRule()); }
	 ruleBeforePoint
{ after(grammarAccess.getBeforePointRule()); } 
	 EOF 
;

// Rule BeforePoint
ruleBeforePoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBeforePointAccess().getGroup()); }
		(rule__BeforePoint__Group__0)
		{ after(grammarAccess.getBeforePointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleCondition
entryRuleSingleCondition
:
{ before(grammarAccess.getSingleConditionRule()); }
	 ruleSingleCondition
{ after(grammarAccess.getSingleConditionRule()); } 
	 EOF 
;

// Rule SingleCondition
ruleSingleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleConditionAccess().getGroup()); }
		(rule__SingleCondition__Group__0)
		{ after(grammarAccess.getSingleConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrueCondition
entryRuleTrueCondition
:
{ before(grammarAccess.getTrueConditionRule()); }
	 ruleTrueCondition
{ after(grammarAccess.getTrueConditionRule()); } 
	 EOF 
;

// Rule TrueCondition
ruleTrueCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTrueConditionAccess().getAlternatives()); }
		(rule__TrueCondition__Alternatives)
		{ after(grammarAccess.getTrueConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompareString
entryRuleCompareString
:
{ before(grammarAccess.getCompareStringRule()); }
	 ruleCompareString
{ after(grammarAccess.getCompareStringRule()); } 
	 EOF 
;

// Rule CompareString
ruleCompareString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompareStringAccess().getGroup()); }
		(rule__CompareString__Group__0)
		{ after(grammarAccess.getCompareStringAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeSub
entryRuleTimeSub
:
{ before(grammarAccess.getTimeSubRule()); }
	 ruleTimeSub
{ after(grammarAccess.getTimeSubRule()); } 
	 EOF 
;

// Rule TimeSub
ruleTimeSub 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeSubAccess().getGroup()); }
		(rule__TimeSub__Group__0)
		{ after(grammarAccess.getTimeSubAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEachTime
entryRuleEachTime
:
{ before(grammarAccess.getEachTimeRule()); }
	 ruleEachTime
{ after(grammarAccess.getEachTimeRule()); } 
	 EOF 
;

// Rule EachTime
ruleEachTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEachTimeAccess().getAlternatives()); }
		(rule__EachTime__Alternatives)
		{ after(grammarAccess.getEachTimeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleisTime
entryRuleisTime
:
{ before(grammarAccess.getIsTimeRule()); }
	 ruleisTime
{ after(grammarAccess.getIsTimeRule()); } 
	 EOF 
;

// Rule isTime
ruleisTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIsTimeAccess().getGroup()); }
		(rule__IsTime__Group__0)
		{ after(grammarAccess.getIsTimeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelogic
entryRulelogic
:
{ before(grammarAccess.getLogicRule()); }
	 rulelogic
{ after(grammarAccess.getLogicRule()); } 
	 EOF 
;

// Rule logic
rulelogic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicAccess().getGroup()); }
		(rule__Logic__Group__0)
		{ after(grammarAccess.getLogicAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleisTrue
entryRuleisTrue
:
{ before(grammarAccess.getIsTrueRule()); }
	 ruleisTrue
{ after(grammarAccess.getIsTrueRule()); } 
	 EOF 
;

// Rule isTrue
ruleisTrue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIsTrueAccess().getGroup()); }
		(rule__IsTrue__Group__0)
		{ after(grammarAccess.getIsTrueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleisDone
entryRuleisDone
:
{ before(grammarAccess.getIsDoneRule()); }
	 ruleisDone
{ after(grammarAccess.getIsDoneRule()); } 
	 EOF 
;

// Rule isDone
ruleisDone 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIsDoneAccess().getGroup()); }
		(rule__IsDone__Group__0)
		{ after(grammarAccess.getIsDoneAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecheckExpression
entryRulecheckExpression
:
{ before(grammarAccess.getCheckExpressionRule()); }
	 rulecheckExpression
{ after(grammarAccess.getCheckExpressionRule()); } 
	 EOF 
;

// Rule checkExpression
rulecheckExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheckExpressionAccess().getGroup()); }
		(rule__CheckExpression__Group__0)
		{ after(grammarAccess.getCheckExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMixExpression
entryRuleMixExpression
:
{ before(grammarAccess.getMixExpressionRule()); }
	 ruleMixExpression
{ after(grammarAccess.getMixExpressionRule()); } 
	 EOF 
;

// Rule MixExpression
ruleMixExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMixExpressionAccess().getGroup()); }
		(rule__MixExpression__Group__0)
		{ after(grammarAccess.getMixExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOtherMixExpression
entryRuleOtherMixExpression
:
{ before(grammarAccess.getOtherMixExpressionRule()); }
	 ruleOtherMixExpression
{ after(grammarAccess.getOtherMixExpressionRule()); } 
	 EOF 
;

// Rule OtherMixExpression
ruleOtherMixExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOtherMixExpressionAccess().getGroup()); }
		(rule__OtherMixExpression__Group__0)
		{ after(grammarAccess.getOtherMixExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleExpression
entryRuleSingleExpression
:
{ before(grammarAccess.getSingleExpressionRule()); }
	 ruleSingleExpression
{ after(grammarAccess.getSingleExpressionRule()); } 
	 EOF 
;

// Rule SingleExpression
ruleSingleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleExpressionAccess().getAlternatives()); }
		(rule__SingleExpression__Alternatives)
		{ after(grammarAccess.getSingleExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePeriodExpression
entryRulePeriodExpression
:
{ before(grammarAccess.getPeriodExpressionRule()); }
	 rulePeriodExpression
{ after(grammarAccess.getPeriodExpressionRule()); } 
	 EOF 
;

// Rule PeriodExpression
rulePeriodExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPeriodExpressionAccess().getGroup()); }
		(rule__PeriodExpression__Group__0)
		{ after(grammarAccess.getPeriodExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGetPeriodExpression
entryRuleGetPeriodExpression
:
{ before(grammarAccess.getGetPeriodExpressionRule()); }
	 ruleGetPeriodExpression
{ after(grammarAccess.getGetPeriodExpressionRule()); } 
	 EOF 
;

// Rule GetPeriodExpression
ruleGetPeriodExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGetPeriodExpressionAccess().getGroup()); }
		(rule__GetPeriodExpression__Group__0)
		{ after(grammarAccess.getGetPeriodExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleTimeExpression
entryRuleRuleTimeExpression
:
{ before(grammarAccess.getRuleTimeExpressionRule()); }
	 ruleRuleTimeExpression
{ after(grammarAccess.getRuleTimeExpressionRule()); } 
	 EOF 
;

// Rule RuleTimeExpression
ruleRuleTimeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleTimeExpressionAccess().getGroup()); }
		(rule__RuleTimeExpression__Group__0)
		{ after(grammarAccess.getRuleTimeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOtherExpression
entryRuleOtherExpression
:
{ before(grammarAccess.getOtherExpressionRule()); }
	 ruleOtherExpression
{ after(grammarAccess.getOtherExpressionRule()); } 
	 EOF 
;

// Rule OtherExpression
ruleOtherExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOtherExpressionAccess().getValueAssignment()); }
		(rule__OtherExpression__ValueAssignment)
		{ after(grammarAccess.getOtherExpressionAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringExpression
entryRuleStringExpression
:
{ before(grammarAccess.getStringExpressionRule()); }
	 ruleStringExpression
{ after(grammarAccess.getStringExpressionRule()); } 
	 EOF 
;

// Rule StringExpression
ruleStringExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringExpressionAccess().getGroup()); }
		(rule__StringExpression__Group__0)
		{ after(grammarAccess.getStringExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloatExpression
entryRuleFloatExpression
:
{ before(grammarAccess.getFloatExpressionRule()); }
	 ruleFloatExpression
{ after(grammarAccess.getFloatExpressionRule()); } 
	 EOF 
;

// Rule FloatExpression
ruleFloatExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatExpressionAccess().getGroup()); }
		(rule__FloatExpression__Group__0)
		{ after(grammarAccess.getFloatExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePersonExpression
entryRulePersonExpression
:
{ before(grammarAccess.getPersonExpressionRule()); }
	 rulePersonExpression
{ after(grammarAccess.getPersonExpressionRule()); } 
	 EOF 
;

// Rule PersonExpression
rulePersonExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPersonExpressionAccess().getGroup()); }
		(rule__PersonExpression__Group__0)
		{ after(grammarAccess.getPersonExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegularExpression
entryRuleRegularExpression
:
{ before(grammarAccess.getRegularExpressionRule()); }
	 ruleRegularExpression
{ after(grammarAccess.getRegularExpressionRule()); } 
	 EOF 
;

// Rule RegularExpression
ruleRegularExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegularExpressionAccess().getAlternatives()); }
		(rule__RegularExpression__Alternatives)
		{ after(grammarAccess.getRegularExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThingExpression
entryRuleThingExpression
:
{ before(grammarAccess.getThingExpressionRule()); }
	 ruleThingExpression
{ after(grammarAccess.getThingExpressionRule()); } 
	 EOF 
;

// Rule ThingExpression
ruleThingExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThingExpressionAccess().getAlternatives()); }
		(rule__ThingExpression__Alternatives)
		{ after(grammarAccess.getThingExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubjectExpress
entryRuleSubjectExpress
:
{ before(grammarAccess.getSubjectExpressRule()); }
	 ruleSubjectExpress
{ after(grammarAccess.getSubjectExpressRule()); } 
	 EOF 
;

// Rule SubjectExpress
ruleSubjectExpress 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubjectExpressAccess().getGroup()); }
		(rule__SubjectExpress__Group__0)
		{ after(grammarAccess.getSubjectExpressAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectExpress
entryRuleObjectExpress
:
{ before(grammarAccess.getObjectExpressRule()); }
	 ruleObjectExpress
{ after(grammarAccess.getObjectExpressRule()); } 
	 EOF 
;

// Rule ObjectExpress
ruleObjectExpress 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectExpressAccess().getGroup()); }
		(rule__ObjectExpress__Group__0)
		{ after(grammarAccess.getObjectExpressAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletrueOperation
entryRuletrueOperation
:
{ before(grammarAccess.getTrueOperationRule()); }
	 ruletrueOperation
{ after(grammarAccess.getTrueOperationRule()); } 
	 EOF 
;

// Rule trueOperation
ruletrueOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTrueOperationAccess().getAlternatives()); }
		(rule__TrueOperation__Alternatives)
		{ after(grammarAccess.getTrueOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemessageExpression
entryRulemessageExpression
:
{ before(grammarAccess.getMessageExpressionRule()); }
	 rulemessageExpression
{ after(grammarAccess.getMessageExpressionRule()); } 
	 EOF 
;

// Rule messageExpression
rulemessageExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMessageExpressionAccess().getGroup()); }
		(rule__MessageExpression__Group__0)
		{ after(grammarAccess.getMessageExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleeveryMessage
entryRuleeveryMessage
:
{ before(grammarAccess.getEveryMessageRule()); }
	 ruleeveryMessage
{ after(grammarAccess.getEveryMessageRule()); } 
	 EOF 
;

// Rule everyMessage
ruleeveryMessage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEveryMessageAccess().getGroup()); }
		(rule__EveryMessage__Group__0)
		{ after(grammarAccess.getEveryMessageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletransferExpression
entryRuletransferExpression
:
{ before(grammarAccess.getTransferExpressionRule()); }
	 ruletransferExpression
{ after(grammarAccess.getTransferExpressionRule()); } 
	 EOF 
;

// Rule transferExpression
ruletransferExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransferExpressionAccess().getGroup()); }
		(rule__TransferExpression__Group__0)
		{ after(grammarAccess.getTransferExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulechangeExpression
entryRulechangeExpression
:
{ before(grammarAccess.getChangeExpressionRule()); }
	 rulechangeExpression
{ after(grammarAccess.getChangeExpressionRule()); } 
	 EOF 
;

// Rule changeExpression
rulechangeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChangeExpressionAccess().getAlternatives()); }
		(rule__ChangeExpression__Alternatives)
		{ after(grammarAccess.getChangeExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulechangeString
entryRulechangeString
:
{ before(grammarAccess.getChangeStringRule()); }
	 rulechangeString
{ after(grammarAccess.getChangeStringRule()); } 
	 EOF 
;

// Rule changeString
rulechangeString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChangeStringAccess().getGroup()); }
		(rule__ChangeString__Group__0)
		{ after(grammarAccess.getChangeStringAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleotherchange
entryRuleotherchange
:
{ before(grammarAccess.getOtherchangeRule()); }
	 ruleotherchange
{ after(grammarAccess.getOtherchangeRule()); } 
	 EOF 
;

// Rule otherchange
ruleotherchange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOtherchangeAccess().getGroup()); }
		(rule__Otherchange__Group__0)
		{ after(grammarAccess.getOtherchangeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulechangeContract
entryRulechangeContract
:
{ before(grammarAccess.getChangeContractRule()); }
	 rulechangeContract
{ after(grammarAccess.getChangeContractRule()); } 
	 EOF 
;

// Rule changeContract
rulechangeContract 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChangeContractAccess().getGroup()); }
		(rule__ChangeContract__Group__0)
		{ after(grammarAccess.getChangeContractAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContractState
entryRuleContractState
:
{ before(grammarAccess.getContractStateRule()); }
	 ruleContractState
{ after(grammarAccess.getContractStateRule()); } 
	 EOF 
;

// Rule ContractState
ruleContractState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContractStateAccess().getAlternatives()); }
		(rule__ContractState__Alternatives)
		{ after(grammarAccess.getContractStateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulechangeRule
entryRulechangeRule
:
{ before(grammarAccess.getChangeRuleRule()); }
	 rulechangeRule
{ after(grammarAccess.getChangeRuleRule()); } 
	 EOF 
;

// Rule changeRule
rulechangeRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChangeRuleAccess().getGroup()); }
		(rule__ChangeRule__Group__0)
		{ after(grammarAccess.getChangeRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulechangeOther
entryRulechangeOther
:
{ before(grammarAccess.getChangeOtherRule()); }
	 rulechangeOther
{ after(grammarAccess.getChangeOtherRule()); } 
	 EOF 
;

// Rule changeOther
rulechangeOther 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChangeOtherAccess().getGroup()); }
		(rule__ChangeOther__Group__0)
		{ after(grammarAccess.getChangeOtherAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulechangeAddress
entryRulechangeAddress
:
{ before(grammarAccess.getChangeAddressRule()); }
	 rulechangeAddress
{ after(grammarAccess.getChangeAddressRule()); } 
	 EOF 
;

// Rule changeAddress
rulechangeAddress 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChangeAddressAccess().getGroup()); }
		(rule__ChangeAddress__Group__0)
		{ after(grammarAccess.getChangeAddressAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBOOLEAN
entryRuleBOOLEAN
:
{ before(grammarAccess.getBOOLEANRule()); }
	 ruleBOOLEAN
{ after(grammarAccess.getBOOLEANRule()); } 
	 EOF 
;

// Rule BOOLEAN
ruleBOOLEAN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBOOLEANAccess().getAlternatives()); }
		(rule__BOOLEAN__Alternatives)
		{ after(grammarAccess.getBOOLEANAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__ValueAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireAccess().getValueConditiontypeParserRuleCall_2_0_0()); }
		ruleconditiontype
		{ after(grammarAccess.getRequireAccess().getValueConditiontypeParserRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRequireAccess().getValueActiontypeParserRuleCall_2_0_1()); }
		ruleactiontype
		{ after(grammarAccess.getRequireAccess().getValueActiontypeParserRuleCall_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__ValueAlternatives_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireAccess().getValueConditiontypeParserRuleCall_3_1_0_0()); }
		ruleconditiontype
		{ after(grammarAccess.getRequireAccess().getValueConditiontypeParserRuleCall_3_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRequireAccess().getValueActiontypeParserRuleCall_3_1_0_1()); }
		ruleactiontype
		{ after(grammarAccess.getRequireAccess().getValueActiontypeParserRuleCall_3_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditiontype__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditiontypeAccess().getIsTimeKeyword_0()); }
		'isTime'
		{ after(grammarAccess.getConditiontypeAccess().getIsTimeKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditiontypeAccess().getIsTrueKeyword_1()); }
		'isTrue'
		{ after(grammarAccess.getConditiontypeAccess().getIsTrueKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getConditiontypeAccess().getLogicKeyword_2()); }
		'logic'
		{ after(grammarAccess.getConditiontypeAccess().getLogicKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getConditiontypeAccess().getCheckKeyword_3()); }
		'check'
		{ after(grammarAccess.getConditiontypeAccess().getCheckKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getConditiontypeAccess().getIsCompletedKeyword_4()); }
		'isCompleted'
		{ after(grammarAccess.getConditiontypeAccess().getIsCompletedKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getConditiontypeAccess().getIsDoneKeyword_5()); }
		'isDone'
		{ after(grammarAccess.getConditiontypeAccess().getIsDoneKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getConditiontypeAccess().getIsRequestKeyword_6()); }
		'isRequest'
		{ after(grammarAccess.getConditiontypeAccess().getIsRequestKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getConditiontypeAccess().getCompareStringKeyword_7()); }
		'compareString'
		{ after(grammarAccess.getConditiontypeAccess().getCompareStringKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getConditiontypeAccess().getTimeSubKeyword_8()); }
		'timeSub'
		{ after(grammarAccess.getConditiontypeAccess().getTimeSubKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getConditiontypeAccess().getSetDateKeyword_9()); }
		'SetDate'
		{ after(grammarAccess.getConditiontypeAccess().getSetDateKeyword_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actiontype__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActiontypeAccess().getTransferKeyword_0()); }
		'transfer'
		{ after(grammarAccess.getActiontypeAccess().getTransferKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getActiontypeAccess().getChangeStateKeyword_1()); }
		'changeState'
		{ after(grammarAccess.getActiontypeAccess().getChangeStateKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__TypeAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubjectAccess().getTypeRAKeyword_0_0_0()); }
		'RA'
		{ after(grammarAccess.getSubjectAccess().getTypeRAKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubjectAccess().getTypeAAKeyword_0_0_1()); }
		'AA'
		{ after(grammarAccess.getSubjectAccess().getTypeAAKeyword_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSubjectAccess().getTypeCAKeyword_0_0_2()); }
		'CA'
		{ after(grammarAccess.getSubjectAccess().getTypeCAKeyword_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getSubjectAccess().getTypePAKeyword_0_0_3()); }
		'PA'
		{ after(grammarAccess.getSubjectAccess().getTypePAKeyword_0_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getStringKeyword_0()); }
		'string'
		{ after(grammarAccess.getTypeAccess().getStringKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getUintKeyword_1()); }
		'uint'
		{ after(grammarAccess.getTypeAccess().getUintKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getAddressKeyword_2()); }
		'address'
		{ after(grammarAccess.getTypeAccess().getAddressKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getIntKeyword_3()); }
		'int'
		{ after(grammarAccess.getTypeAccess().getIntKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getBytesKeyword_4()); }
		'bytes'
		{ after(grammarAccess.getTypeAccess().getBytesKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getBytes32Keyword_5()); }
		'bytes32'
		{ after(grammarAccess.getTypeAccess().getBytes32Keyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getBoolKeyword_6()); }
		'bool'
		{ after(grammarAccess.getTypeAccess().getBoolKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getFixedKeyword_7()); }
		'fixed'
		{ after(grammarAccess.getTypeAccess().getFixedKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getUfixedKeyword_8()); }
		'ufixed'
		{ after(grammarAccess.getTypeAccess().getUfixedKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getDateKeyword_9()); }
		'date'
		{ after(grammarAccess.getTypeAccess().getDateKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getDurationKeyword_10()); }
		'duration'
		{ after(grammarAccess.getTypeAccess().getDurationKeyword_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getAllNumberParserRuleCall_0()); }
		ruleAllNumber
		{ after(grammarAccess.getValueAccess().getAllNumberParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getRightParserRuleCall_1()); }
		ruleRight
		{ after(grammarAccess.getValueAccess().getRightParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getThisDateParserRuleCall_2()); }
		ruleThisDate
		{ after(grammarAccess.getValueAccess().getThisDateParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getThisBooleanParserRuleCall_3()); }
		ruleThisBoolean
		{ after(grammarAccess.getValueAccess().getThisBooleanParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getUrlParserRuleCall_4()); }
		ruleurl
		{ after(grammarAccess.getValueAccess().getUrlParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getThisDecimalParserRuleCall_5()); }
		ruleThisDecimal
		{ after(grammarAccess.getValueAccess().getThisDecimalParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getAddressParserRuleCall_6()); }
		ruleAddress
		{ after(grammarAccess.getValueAccess().getAddressParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getThisStringParserRuleCall_7()); }
		ruleThisString
		{ after(grammarAccess.getValueAccess().getThisStringParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getDurationParserRuleCall_8()); }
		ruleDuration
		{ after(grammarAccess.getValueAccess().getDurationParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getNowParserRuleCall_9()); }
		ruleNow
		{ after(grammarAccess.getValueAccess().getNowParserRuleCall_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__SymbolAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationAccess().getSymbolYearsKeyword_1_0_0()); }
		'years'
		{ after(grammarAccess.getDurationAccess().getSymbolYearsKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDurationAccess().getSymbolMonthsKeyword_1_0_1()); }
		'months'
		{ after(grammarAccess.getDurationAccess().getSymbolMonthsKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getDurationAccess().getSymbolDaysKeyword_1_0_2()); }
		'days'
		{ after(grammarAccess.getDurationAccess().getSymbolDaysKeyword_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getDurationAccess().getSymbolHoursKeyword_1_0_3()); }
		'hours'
		{ after(grammarAccess.getDurationAccess().getSymbolHoursKeyword_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getDurationAccess().getSymbolMinsKeyword_1_0_4()); }
		'mins'
		{ after(grammarAccess.getDurationAccess().getSymbolMinsKeyword_1_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionLink__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionLinkAccess().getConditionExpressionAssignment_2_0()); }
		(rule__ConditionLink__ConditionExpressionAssignment_2_0)
		{ after(grammarAccess.getConditionLinkAccess().getConditionExpressionAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionLinkAccess().getLinkConditionAssignment_2_1()); }
		(rule__ConditionLink__LinkConditionAssignment_2_1)
		{ after(grammarAccess.getConditionLinkAccess().getLinkConditionAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrCondition__LinkAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndOrConditionAccess().getLinkAndKeyword_0_0_0()); }
		'and'
		{ after(grammarAccess.getAndOrConditionAccess().getLinkAndKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAndOrConditionAccess().getLinkOrKeyword_0_0_1()); }
		'or'
		{ after(grammarAccess.getAndOrConditionAccess().getLinkOrKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrCondition__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndOrConditionAccess().getConditionAssignment_1_0()); }
		(rule__AndOrCondition__ConditionAssignment_1_0)
		{ after(grammarAccess.getAndOrConditionAccess().getConditionAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAndOrConditionAccess().getLinkConditionAssignment_1_1()); }
		(rule__AndOrCondition__LinkConditionAssignment_1_1)
		{ after(grammarAccess.getAndOrConditionAccess().getLinkConditionAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateLink__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperateLinkAccess().getFirstOperationAssignment_2_0()); }
		(rule__OperateLink__FirstOperationAssignment_2_0)
		{ after(grammarAccess.getOperateLinkAccess().getFirstOperationAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperateLinkAccess().getLinkOperationAssignment_2_1()); }
		(rule__OperateLink__LinkOperationAssignment_2_1)
		{ after(grammarAccess.getOperateLinkAccess().getLinkOperationAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ManyRuleExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getManyRuleExpressionAccess().getExclusiveExpressionParserRuleCall_0()); }
		ruleExclusiveExpression
		{ after(grammarAccess.getManyRuleExpressionAccess().getExclusiveExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getManyRuleExpressionAccess().getParallelExpressionParserRuleCall_1()); }
		ruleParallelExpression
		{ after(grammarAccess.getManyRuleExpressionAccess().getParallelExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getManyRuleExpressionAccess().getRegularRuleExpressionParserRuleCall_2()); }
		ruleRegularRuleExpression
		{ after(grammarAccess.getManyRuleExpressionAccess().getRegularRuleExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getManyRuleExpressionAccess().getAdditionExpressionParserRuleCall_3()); }
		ruleAdditionExpression
		{ after(grammarAccess.getManyRuleExpressionAccess().getAdditionExpressionParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalCondition__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTotalConditionAccess().getConditionAssignment_1_0()); }
		(rule__TotalCondition__ConditionAssignment_1_0)
		{ after(grammarAccess.getTotalConditionAccess().getConditionAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTotalConditionAccess().getLinkConditionAssignment_1_1()); }
		(rule__TotalCondition__LinkConditionAssignment_1_1)
		{ after(grammarAccess.getTotalConditionAccess().getLinkConditionAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTotalOperationAccess().getFirstOperationAssignment_3_0()); }
		(rule__TotalOperation__FirstOperationAssignment_3_0)
		{ after(grammarAccess.getTotalOperationAccess().getFirstOperationAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getTotalOperationAccess().getLinkOperationAssignment_3_1()); }
		(rule__TotalOperation__LinkOperationAssignment_3_1)
		{ after(grammarAccess.getTotalOperationAccess().getLinkOperationAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrOperationLink__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndOrOperationLinkAccess().getFirstOperationAssignment_1_0()); }
		(rule__AndOrOperationLink__FirstOperationAssignment_1_0)
		{ after(grammarAccess.getAndOrOperationLinkAccess().getFirstOperationAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAndOrOperationLinkAccess().getLinkOperationAssignment_1_1()); }
		(rule__AndOrOperationLink__LinkOperationAssignment_1_1)
		{ after(grammarAccess.getAndOrOperationLinkAccess().getLinkOperationAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenOperation__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenOperationAccess().getFollowingOperationAssignment_1_0()); }
		(rule__ThenOperation__FollowingOperationAssignment_1_0)
		{ after(grammarAccess.getThenOperationAccess().getFollowingOperationAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getThenOperationAccess().getLinkOperationAssignment_1_1()); }
		(rule__ThenOperation__LinkOperationAssignment_1_1)
		{ after(grammarAccess.getThenOperationAccess().getLinkOperationAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailResult__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFailResultAccess().getFollowingOperationAssignment_1_0()); }
		(rule__FailResult__FollowingOperationAssignment_1_0)
		{ after(grammarAccess.getFailResultAccess().getFollowingOperationAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFailResultAccess().getLinkOperationAssignment_1_1()); }
		(rule__FailResult__LinkOperationAssignment_1_1)
		{ after(grammarAccess.getFailResultAccess().getLinkOperationAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timepoint__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimepointAccess().getWithinPointParserRuleCall_0()); }
		ruleWithinPoint
		{ after(grammarAccess.getTimepointAccess().getWithinPointParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimepointAccess().getBeforePointParserRuleCall_1()); }
		ruleBeforePoint
		{ after(grammarAccess.getTimepointAccess().getBeforePointParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforePoint__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeforePointAccess().getLineTimeAssignment_1_0()); }
		(rule__BeforePoint__LineTimeAssignment_1_0)
		{ after(grammarAccess.getBeforePointAccess().getLineTimeAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getBeforePointAccess().getValueAssignment_1_1()); }
		(rule__BeforePoint__ValueAssignment_1_1)
		{ after(grammarAccess.getBeforePointAccess().getValueAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TrueCondition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrueConditionAccess().getIsTimeParserRuleCall_0()); }
		ruleisTime
		{ after(grammarAccess.getTrueConditionAccess().getIsTimeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTrueConditionAccess().getLogicParserRuleCall_1()); }
		rulelogic
		{ after(grammarAccess.getTrueConditionAccess().getLogicParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTrueConditionAccess().getIsTrueParserRuleCall_2()); }
		ruleisTrue
		{ after(grammarAccess.getTrueConditionAccess().getIsTrueParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTrueConditionAccess().getIsDoneParserRuleCall_3()); }
		ruleisDone
		{ after(grammarAccess.getTrueConditionAccess().getIsDoneParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getTrueConditionAccess().getCheckExpressionParserRuleCall_4()); }
		rulecheckExpression
		{ after(grammarAccess.getTrueConditionAccess().getCheckExpressionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getTrueConditionAccess().getTimepointParserRuleCall_5()); }
		ruleTimepoint
		{ after(grammarAccess.getTrueConditionAccess().getTimepointParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getTrueConditionAccess().getCompareStringParserRuleCall_6()); }
		ruleCompareString
		{ after(grammarAccess.getTrueConditionAccess().getCompareStringParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getTrueConditionAccess().getTimeSubParserRuleCall_7()); }
		ruleTimeSub
		{ after(grammarAccess.getTrueConditionAccess().getTimeSubParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EachTime__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEachTimeAccess().getYearsKeyword_0()); }
		'years'
		{ after(grammarAccess.getEachTimeAccess().getYearsKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEachTimeAccess().getMonthsKeyword_1()); }
		'months'
		{ after(grammarAccess.getEachTimeAccess().getMonthsKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getEachTimeAccess().getDaysKeyword_2()); }
		'days'
		{ after(grammarAccess.getEachTimeAccess().getDaysKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getEachTimeAccess().getHoursKeyword_3()); }
		'hours'
		{ after(grammarAccess.getEachTimeAccess().getHoursKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getEachTimeAccess().getMinsKeyword_4()); }
		'mins'
		{ after(grammarAccess.getEachTimeAccess().getMinsKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleExpressionAccess().getRegularExpressionParserRuleCall_0()); }
		ruleRegularExpression
		{ after(grammarAccess.getSingleExpressionAccess().getRegularExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSingleExpressionAccess().getThingExpressionParserRuleCall_1()); }
		ruleThingExpression
		{ after(grammarAccess.getSingleExpressionAccess().getThingExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSingleExpressionAccess().getOtherExpressionParserRuleCall_2()); }
		ruleOtherExpression
		{ after(grammarAccess.getSingleExpressionAccess().getOtherExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getSingleExpressionAccess().getPersonExpressionParserRuleCall_3()); }
		rulePersonExpression
		{ after(grammarAccess.getSingleExpressionAccess().getPersonExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getSingleExpressionAccess().getRuleTimeExpressionParserRuleCall_4()); }
		ruleRuleTimeExpression
		{ after(grammarAccess.getSingleExpressionAccess().getRuleTimeExpressionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getSingleExpressionAccess().getFloatExpressionParserRuleCall_5()); }
		ruleFloatExpression
		{ after(grammarAccess.getSingleExpressionAccess().getFloatExpressionParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getSingleExpressionAccess().getStringExpressionParserRuleCall_6()); }
		ruleStringExpression
		{ after(grammarAccess.getSingleExpressionAccess().getStringExpressionParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getSingleExpressionAccess().getPeriodExpressionParserRuleCall_7()); }
		rulePeriodExpression
		{ after(grammarAccess.getSingleExpressionAccess().getPeriodExpressionParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getSingleExpressionAccess().getGetPeriodExpressionParserRuleCall_8()); }
		ruleGetPeriodExpression
		{ after(grammarAccess.getSingleExpressionAccess().getGetPeriodExpressionParserRuleCall_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularExpressionAccess().getAllNumberParserRuleCall_0()); }
		ruleAllNumber
		{ after(grammarAccess.getRegularExpressionAccess().getAllNumberParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRegularExpressionAccess().getThisDecimalParserRuleCall_1()); }
		ruleThisDecimal
		{ after(grammarAccess.getRegularExpressionAccess().getThisDecimalParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRegularExpressionAccess().getThisBooleanParserRuleCall_2()); }
		ruleThisBoolean
		{ after(grammarAccess.getRegularExpressionAccess().getThisBooleanParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getRegularExpressionAccess().getNowParserRuleCall_3()); }
		ruleNow
		{ after(grammarAccess.getRegularExpressionAccess().getNowParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getRegularExpressionAccess().getThisDateParserRuleCall_4()); }
		ruleThisDate
		{ after(grammarAccess.getRegularExpressionAccess().getThisDateParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThingExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThingExpressionAccess().getObjectExpressParserRuleCall_0()); }
		ruleObjectExpress
		{ after(grammarAccess.getThingExpressionAccess().getObjectExpressParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getThingExpressionAccess().getSubjectExpressParserRuleCall_1()); }
		ruleSubjectExpress
		{ after(grammarAccess.getThingExpressionAccess().getSubjectExpressParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TrueOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrueOperationAccess().getTransferExpressionParserRuleCall_0()); }
		ruletransferExpression
		{ after(grammarAccess.getTrueOperationAccess().getTransferExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTrueOperationAccess().getChangeExpressionParserRuleCall_1()); }
		rulechangeExpression
		{ after(grammarAccess.getTrueOperationAccess().getChangeExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeExpressionAccess().getChangeContractParserRuleCall_0()); }
		rulechangeContract
		{ after(grammarAccess.getChangeExpressionAccess().getChangeContractParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getChangeExpressionAccess().getChangeRuleParserRuleCall_1()); }
		rulechangeRule
		{ after(grammarAccess.getChangeExpressionAccess().getChangeRuleParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getChangeExpressionAccess().getOtherchangeParserRuleCall_2()); }
		ruleotherchange
		{ after(grammarAccess.getChangeExpressionAccess().getOtherchangeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getChangeExpressionAccess().getChangeStringParserRuleCall_3()); }
		rulechangeString
		{ after(grammarAccess.getChangeExpressionAccess().getChangeStringParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getChangeExpressionAccess().getChangeOtherParserRuleCall_4()); }
		rulechangeOther
		{ after(grammarAccess.getChangeExpressionAccess().getChangeOtherParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getChangeExpressionAccess().getChangeAddressParserRuleCall_5()); }
		rulechangeAddress
		{ after(grammarAccess.getChangeExpressionAccess().getChangeAddressParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractState__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractStateAccess().getStartKeyword_0()); }
		'start'
		{ after(grammarAccess.getContractStateAccess().getStartKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getContractStateAccess().getPauseKeyword_1()); }
		'pause'
		{ after(grammarAccess.getContractStateAccess().getPauseKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getContractStateAccess().getRestartKeyword_2()); }
		'restart'
		{ after(grammarAccess.getContractStateAccess().getRestartKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getContractStateAccess().getTerminateKeyword_3()); }
		'terminate'
		{ after(grammarAccess.getContractStateAccess().getTerminateKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getContractStateAccess().getFinishKeyword_4()); }
		'finish'
		{ after(grammarAccess.getContractStateAccess().getFinishKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOLEANAccess().getTrueKeyword_0()); }
		'true'
		{ after(grammarAccess.getBOOLEANAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBOOLEANAccess().getFalseKeyword_1()); }
		'false'
		{ after(grammarAccess.getBOOLEANAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_0()); }
	(rule__Model__Group_0__0)*
	{ after(grammarAccess.getModelAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getContractKeyword_1()); }
	'Contract'
	{ after(grammarAccess.getModelAccess().getContractKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_2()); }
	(rule__Model__NameAssignment_2)
	{ after(grammarAccess.getModelAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_3()); }
	(rule__Model__Group_3__0)?
	{ after(grammarAccess.getModelAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__5__Impl
	rule__Model__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSubjectsAssignment_5()); }
	(rule__Model__SubjectsAssignment_5)*
	{ after(grammarAccess.getModelAccess().getSubjectsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__6__Impl
	rule__Model__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getObjectsAssignment_6()); }
	(rule__Model__ObjectsAssignment_6)*
	{ after(grammarAccess.getModelAccess().getObjectsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__7__Impl
	rule__Model__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroupAssignment_7()); }
	(rule__Model__GroupAssignment_7)*
	{ after(grammarAccess.getModelAccess().getGroupAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__8__Impl
	rule__Model__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getInitializeAssignment_8()); }
	(rule__Model__InitializeAssignment_8)?
	{ after(grammarAccess.getModelAccess().getInitializeAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__9__Impl
	rule__Model__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getContractMessageAssignment_9()); }
	(rule__Model__ContractMessageAssignment_9)?
	{ after(grammarAccess.getModelAccess().getContractMessageAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__10__Impl
	rule__Model__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getConditionsAssignment_10()); }
	(rule__Model__ConditionsAssignment_10)?
	{ after(grammarAccess.getModelAccess().getConditionsAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__11__Impl
	rule__Model__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getOperationsAssignment_11()); }
	(rule__Model__OperationsAssignment_11)?
	{ after(grammarAccess.getModelAccess().getOperationsAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__12__Impl
	rule__Model__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRuleStructuresAssignment_12()); }
	(rule__Model__RuleStructuresAssignment_12)?
	{ after(grammarAccess.getModelAccess().getRuleStructuresAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__13__Impl
	rule__Model__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRequireAssignment_13()); }
	(rule__Model__RequireAssignment_13)?
	{ after(grammarAccess.getModelAccess().getRequireAssignment_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_14()); }
	'}'
	{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_0__0__Impl
	rule__Model__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getImportKeyword_0_0()); }
	'import'
	{ after(grammarAccess.getModelAccess().getImportKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPackageNameAssignment_0_1()); }
	(rule__Model__PackageNameAssignment_0_1)
	{ after(grammarAccess.getModelAccess().getPackageNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_3__0__Impl
	rule__Model__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getExtendsKeyword_3_0()); }
	'extends'
	{ after(grammarAccess.getModelAccess().getExtendsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getExtendNameAssignment_3_1()); }
	(rule__Model__ExtendNameAssignment_3_1)
	{ after(grammarAccess.getModelAccess().getExtendNameAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Require__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Require__Group__0__Impl
	rule__Require__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAccess().getRequireKeyword_0()); }
	'Require'
	{ after(grammarAccess.getRequireAccess().getRequireKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Require__Group__1__Impl
	rule__Require__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getRequireAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Require__Group__2__Impl
	rule__Require__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAccess().getValueAssignment_2()); }
	(rule__Require__ValueAssignment_2)
	{ after(grammarAccess.getRequireAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Require__Group__3__Impl
	rule__Require__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAccess().getGroup_3()); }
	(rule__Require__Group_3__0)*
	{ after(grammarAccess.getRequireAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Require__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getRequireAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Require__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Require__Group_3__0__Impl
	rule__Require__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getRequireAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Require__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAccess().getValueAssignment_3_1()); }
	(rule__Require__ValueAssignment_3_1)
	{ after(grammarAccess.getRequireAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initialize__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialize__Group__0__Impl
	rule__Initialize__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializeAccess().getInitializeAction_0()); }
	()
	{ after(grammarAccess.getInitializeAccess().getInitializeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialize__Group__1__Impl
	rule__Initialize__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializeAccess().getInitKeyword_1()); }
	'Init'
	{ after(grammarAccess.getInitializeAccess().getInitKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialize__Group__2__Impl
	rule__Initialize__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getInitializeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialize__Group__3__Impl
	rule__Initialize__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializeAccess().getInitsAssignment_3()); }
	(rule__Initialize__InitsAssignment_3)*
	{ after(grammarAccess.getInitializeAccess().getInitsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialize__Group__4__Impl
	rule__Initialize__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializeAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getInitializeAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialize__Group__5__Impl
	rule__Initialize__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializeAccess().getInitoAssignment_5()); }
	(rule__Initialize__InitoAssignment_5)*
	{ after(grammarAccess.getInitializeAccess().getInitoAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialize__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializeAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getInitializeAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitExpressions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitExpressions__Group__0__Impl
	rule__InitExpressions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitExpressionsAccess().getSubtypeAssignment_0()); }
	(rule__InitExpressions__SubtypeAssignment_0)
	{ after(grammarAccess.getInitExpressionsAccess().getSubtypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitExpressions__Group__1__Impl
	rule__InitExpressions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitExpressionsAccess().getNameAssignment_1()); }
	(rule__InitExpressions__NameAssignment_1)
	{ after(grammarAccess.getInitExpressionsAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressions__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitExpressions__Group__2__Impl
	rule__InitExpressions__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressions__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitExpressionsAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getInitExpressionsAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressions__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitExpressions__Group__3__Impl
	rule__InitExpressions__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressions__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitExpressionsAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getInitExpressionsAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressions__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitExpressions__Group__4__Impl
	rule__InitExpressions__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressions__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitExpressionsAccess().getValueAssignment_4()); }
	(rule__InitExpressions__ValueAssignment_4)
	{ after(grammarAccess.getInitExpressionsAccess().getValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressions__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitExpressions__Group__5__Impl
	rule__InitExpressions__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressions__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitExpressionsAccess().getGroup_5()); }
	(rule__InitExpressions__Group_5__0)*
	{ after(grammarAccess.getInitExpressionsAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressions__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitExpressions__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressions__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitExpressionsAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getInitExpressionsAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitExpressions__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitExpressions__Group_5__0__Impl
	rule__InitExpressions__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressions__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitExpressionsAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getInitExpressionsAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressions__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitExpressions__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressions__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitExpressionsAccess().getValueAssignment_5_1()); }
	(rule__InitExpressions__ValueAssignment_5_1)
	{ after(grammarAccess.getInitExpressionsAccess().getValueAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitExpressiono__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitExpressiono__Group__0__Impl
	rule__InitExpressiono__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressiono__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitExpressionoAccess().getObtypeAssignment_0()); }
	(rule__InitExpressiono__ObtypeAssignment_0)
	{ after(grammarAccess.getInitExpressionoAccess().getObtypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressiono__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitExpressiono__Group__1__Impl
	rule__InitExpressiono__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressiono__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitExpressionoAccess().getNameAssignment_1()); }
	(rule__InitExpressiono__NameAssignment_1)
	{ after(grammarAccess.getInitExpressionoAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressiono__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitExpressiono__Group__2__Impl
	rule__InitExpressiono__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressiono__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitExpressionoAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getInitExpressionoAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressiono__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitExpressiono__Group__3__Impl
	rule__InitExpressiono__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressiono__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitExpressionoAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getInitExpressionoAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressiono__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitExpressiono__Group__4__Impl
	rule__InitExpressiono__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressiono__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitExpressionoAccess().getValueAssignment_4()); }
	(rule__InitExpressiono__ValueAssignment_4)
	{ after(grammarAccess.getInitExpressionoAccess().getValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressiono__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitExpressiono__Group__5__Impl
	rule__InitExpressiono__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressiono__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitExpressionoAccess().getGroup_5()); }
	(rule__InitExpressiono__Group_5__0)*
	{ after(grammarAccess.getInitExpressionoAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressiono__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitExpressiono__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressiono__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitExpressionoAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getInitExpressionoAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitExpressiono__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitExpressiono__Group_5__0__Impl
	rule__InitExpressiono__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressiono__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitExpressionoAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getInitExpressionoAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressiono__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitExpressiono__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressiono__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitExpressionoAccess().getValueAssignment_5_1()); }
	(rule__InitExpressiono__ValueAssignment_5_1)
	{ after(grammarAccess.getInitExpressionoAccess().getValueAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__0__Impl
	rule__Group__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getGroupKeyword_0()); }
	'Group'
	{ after(grammarAccess.getGroupAccess().getGroupKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__1__Impl
	rule__Group__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getSubtypeAssignment_1()); }
	(rule__Group__SubtypeAssignment_1)
	{ after(grammarAccess.getGroupAccess().getSubtypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__2__Impl
	rule__Group__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getNameAssignment_2()); }
	(rule__Group__NameAssignment_2)
	{ after(grammarAccess.getGroupAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__3__Impl
	rule__Group__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__4__Impl
	rule__Group__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getValueAssignment_4()); }
	(rule__Group__ValueAssignment_4)
	{ after(grammarAccess.getGroupAccess().getValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__5__Impl
	rule__Group__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getGroup_5()); }
	(rule__Group__Group_5__0)*
	{ after(grammarAccess.getGroupAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group_5__0__Impl
	rule__Group__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getGroupAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getValueAssignment_5_1()); }
	(rule__Group__ValueAssignment_5_1)
	{ after(grammarAccess.getGroupAccess().getValueAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Subject__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subject__Group__0__Impl
	rule__Subject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubjectAccess().getTypeAssignment_0()); }
	(rule__Subject__TypeAssignment_0)
	{ after(grammarAccess.getSubjectAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subject__Group__1__Impl
	rule__Subject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubjectAccess().getNameAssignment_1()); }
	(rule__Subject__NameAssignment_1)
	{ after(grammarAccess.getSubjectAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subject__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubjectAccess().getSubjectExpressionAssignment_2()); }
	(rule__Subject__SubjectExpressionAssignment_2)?
	{ after(grammarAccess.getSubjectAccess().getSubjectExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubjectExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubjectExpression__Group__0__Impl
	rule__SubjectExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubjectExpressionAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getSubjectExpressionAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubjectExpression__Group__1__Impl
	rule__SubjectExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubjectExpressionAccess().getKeyValueAssignment_1()); }
	(rule__SubjectExpression__KeyValueAssignment_1)
	{ after(grammarAccess.getSubjectExpressionAccess().getKeyValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubjectExpression__Group__2__Impl
	rule__SubjectExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubjectExpressionAccess().getGroup_2()); }
	(rule__SubjectExpression__Group_2__0)*
	{ after(grammarAccess.getSubjectExpressionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubjectExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubjectExpressionAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getSubjectExpressionAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubjectExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubjectExpression__Group_2__0__Impl
	rule__SubjectExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubjectExpressionAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getSubjectExpressionAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubjectExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubjectExpressionAccess().getKeyValueAssignment_2_1()); }
	(rule__SubjectExpression__KeyValueAssignment_2_1)
	{ after(grammarAccess.getSubjectExpressionAccess().getKeyValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContractMessage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractMessage__Group__0__Impl
	rule__ContractMessage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractMessage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractMessageAccess().getContractMessageKeyword_0()); }
	'ContractMessage'
	{ after(grammarAccess.getContractMessageAccess().getContractMessageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractMessage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractMessage__Group__1__Impl
	rule__ContractMessage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractMessage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractMessageAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getContractMessageAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractMessage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractMessage__Group__2__Impl
	rule__ContractMessage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractMessage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractMessageAccess().getMessageAssignment_2()); }
	(rule__ContractMessage__MessageAssignment_2)
	{ after(grammarAccess.getContractMessageAccess().getMessageAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractMessage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractMessage__Group__3__Impl
	rule__ContractMessage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractMessage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractMessageAccess().getGroup_3()); }
	(rule__ContractMessage__Group_3__0)*
	{ after(grammarAccess.getContractMessageAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractMessage__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractMessage__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractMessage__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractMessageAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getContractMessageAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContractMessage__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractMessage__Group_3__0__Impl
	rule__ContractMessage__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractMessage__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractMessageAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getContractMessageAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractMessage__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContractMessage__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractMessage__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractMessageAccess().getMessageAssignment_3_1()); }
	(rule__ContractMessage__MessageAssignment_3_1)
	{ after(grammarAccess.getContractMessageAccess().getMessageAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group__0__Impl
	rule__Message__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getTypeAssignment_0()); }
	(rule__Message__TypeAssignment_0)
	{ after(grammarAccess.getMessageAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group__1__Impl
	rule__Message__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getMessageAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Message__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageAccess().getValueAssignment_2()); }
	(rule__Message__ValueAssignment_2)
	{ after(grammarAccess.getMessageAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Keyvalue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Keyvalue__Group__0__Impl
	rule__Keyvalue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyvalue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyvalueAccess().getTypeAssignment_0()); }
	(rule__Keyvalue__TypeAssignment_0)
	{ after(grammarAccess.getKeyvalueAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyvalue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Keyvalue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyvalue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyvalueAccess().getNameAssignment_1()); }
	(rule__Keyvalue__NameAssignment_1)
	{ after(grammarAccess.getKeyvalueAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Duration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Duration__Group__0__Impl
	rule__Duration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDurationAccess().getValueAssignment_0()); }
	(rule__Duration__ValueAssignment_0)
	{ after(grammarAccess.getDurationAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Duration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDurationAccess().getSymbolAssignment_1()); }
	(rule__Duration__SymbolAssignment_1)
	{ after(grammarAccess.getDurationAccess().getSymbolAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Address__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Address__Group__0__Impl
	rule__Address__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Address__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddressAccess().getAKeyword_0()); }
	'a'
	{ after(grammarAccess.getAddressAccess().getAKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Address__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Address__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Address__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddressAccess().getValueAssignment_1()); }
	(rule__Address__ValueAssignment_1)
	{ after(grammarAccess.getAddressAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DATE__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DATE__Group__0__Impl
	rule__DATE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDATEAccess().getYearAssignment_0()); }
	(rule__DATE__YearAssignment_0)
	{ after(grammarAccess.getDATEAccess().getYearAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DATE__Group__1__Impl
	rule__DATE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDATEAccess().getSolidusKeyword_1()); }
	'/'
	{ after(grammarAccess.getDATEAccess().getSolidusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DATE__Group__2__Impl
	rule__DATE__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDATEAccess().getMonthAssignment_2()); }
	(rule__DATE__MonthAssignment_2)
	{ after(grammarAccess.getDATEAccess().getMonthAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DATE__Group__3__Impl
	rule__DATE__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDATEAccess().getSolidusKeyword_3()); }
	'/'
	{ after(grammarAccess.getDATEAccess().getSolidusKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DATE__Group__4__Impl
	rule__DATE__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDATEAccess().getDayAssignment_4()); }
	(rule__DATE__DayAssignment_4)
	{ after(grammarAccess.getDATEAccess().getDayAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DATE__Group__5__Impl
	rule__DATE__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDATEAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getDATEAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DATE__Group__6__Impl
	rule__DATE__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDATEAccess().getHourAssignment_6()); }
	(rule__DATE__HourAssignment_6)
	{ after(grammarAccess.getDATEAccess().getHourAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DATE__Group__7__Impl
	rule__DATE__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDATEAccess().getColonKeyword_7()); }
	':'
	{ after(grammarAccess.getDATEAccess().getColonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DATE__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDATEAccess().getMinAssignment_8()); }
	(rule__DATE__MinAssignment_8)
	{ after(grammarAccess.getDATEAccess().getMinAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__0__Impl
	rule__Object__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getTokenKeyword_0()); }
	'Token'
	{ after(grammarAccess.getObjectAccess().getTokenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__1__Impl
	rule__Object__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getNameAssignment_1()); }
	(rule__Object__NameAssignment_1)
	{ after(grammarAccess.getObjectAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getObjectExpressionAssignment_2()); }
	(rule__Object__ObjectExpressionAssignment_2)
	{ after(grammarAccess.getObjectAccess().getObjectExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectExpression__Group__0__Impl
	rule__ObjectExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectExpressionAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getObjectExpressionAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectExpression__Group__1__Impl
	rule__ObjectExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectExpressionAccess().getKeyValueAssignment_1()); }
	(rule__ObjectExpression__KeyValueAssignment_1)
	{ after(grammarAccess.getObjectExpressionAccess().getKeyValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectExpression__Group__2__Impl
	rule__ObjectExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectExpressionAccess().getGroup_2()); }
	(rule__ObjectExpression__Group_2__0)*
	{ after(grammarAccess.getObjectExpressionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectExpressionAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getObjectExpressionAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectExpression__Group_2__0__Impl
	rule__ObjectExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectExpressionAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getObjectExpressionAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectExpressionAccess().getKeyValueAssignment_2_1()); }
	(rule__ObjectExpression__KeyValueAssignment_2_1)
	{ after(grammarAccess.getObjectExpressionAccess().getKeyValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getConditionsKeyword_0()); }
	'Conditions'
	{ after(grammarAccess.getConditionAccess().getConditionsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
	rule__Condition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getConditionAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__2__Impl
	rule__Condition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getConditionsAssignment_2()); }
	(rule__Condition__ConditionsAssignment_2)
	{ after(grammarAccess.getConditionAccess().getConditionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__3__Impl
	rule__Condition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getGroup_3()); }
	(rule__Condition__Group_3__0)*
	{ after(grammarAccess.getConditionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getConditionAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_3__0__Impl
	rule__Condition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getConditionAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getConditionsAssignment_3_1()); }
	(rule__Condition__ConditionsAssignment_3_1)
	{ after(grammarAccess.getConditionAccess().getConditionsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionLink__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionLink__Group__0__Impl
	rule__ConditionLink__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionLink__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionLinkAccess().getNameAssignment_0()); }
	(rule__ConditionLink__NameAssignment_0)
	{ after(grammarAccess.getConditionLinkAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionLink__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionLink__Group__1__Impl
	rule__ConditionLink__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionLink__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionLinkAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getConditionLinkAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionLink__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionLink__Group__2__Impl
	rule__ConditionLink__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionLink__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionLinkAccess().getAlternatives_2()); }
	(rule__ConditionLink__Alternatives_2)?
	{ after(grammarAccess.getConditionLinkAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionLink__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionLink__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionLink__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionLinkAccess().getAndOrLinkAssignment_3()); }
	(rule__ConditionLink__AndOrLinkAssignment_3)*
	{ after(grammarAccess.getConditionLinkAccess().getAndOrLinkAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndOrCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndOrCondition__Group__0__Impl
	rule__AndOrCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndOrConditionAccess().getLinkAssignment_0()); }
	(rule__AndOrCondition__LinkAssignment_0)
	{ after(grammarAccess.getAndOrConditionAccess().getLinkAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndOrCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndOrConditionAccess().getAlternatives_1()); }
	(rule__AndOrCondition__Alternatives_1)
	{ after(grammarAccess.getAndOrConditionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getOperationsKeyword_0()); }
	'Operations'
	{ after(grammarAccess.getOperationAccess().getOperationsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__1__Impl
	rule__Operation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getOperationAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__2__Impl
	rule__Operation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getOperatesAssignment_2()); }
	(rule__Operation__OperatesAssignment_2)
	{ after(grammarAccess.getOperationAccess().getOperatesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__3__Impl
	rule__Operation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getGroup_3()); }
	(rule__Operation__Group_3__0)*
	{ after(grammarAccess.getOperationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getOperationAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_3__0__Impl
	rule__Operation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getOperationAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getOperatesAssignment_3_1()); }
	(rule__Operation__OperatesAssignment_3_1)
	{ after(grammarAccess.getOperationAccess().getOperatesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperateLink__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperateLink__Group__0__Impl
	rule__OperateLink__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateLink__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperateLinkAccess().getNameAssignment_0()); }
	(rule__OperateLink__NameAssignment_0)
	{ after(grammarAccess.getOperateLinkAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateLink__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperateLink__Group__1__Impl
	rule__OperateLink__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateLink__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperateLinkAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getOperateLinkAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateLink__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperateLink__Group__2__Impl
	rule__OperateLink__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateLink__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperateLinkAccess().getAlternatives_2()); }
	(rule__OperateLink__Alternatives_2)
	{ after(grammarAccess.getOperateLinkAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateLink__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperateLink__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateLink__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperateLinkAccess().getAndOrLinkAssignment_3()); }
	(rule__OperateLink__AndOrLinkAssignment_3)*
	{ after(grammarAccess.getOperateLinkAccess().getAndOrLinkAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleStructure__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStructure__Group__0__Impl
	rule__RuleStructure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStructure__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStructureAccess().getRulesKeyword_0()); }
	'Rules'
	{ after(grammarAccess.getRuleStructureAccess().getRulesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStructure__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStructure__Group__1__Impl
	rule__RuleStructure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStructure__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStructureAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getRuleStructureAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStructure__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStructure__Group__2__Impl
	rule__RuleStructure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStructure__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRuleStructureAccess().getManyRuleExpressionAssignment_2()); }
		(rule__RuleStructure__ManyRuleExpressionAssignment_2)
		{ after(grammarAccess.getRuleStructureAccess().getManyRuleExpressionAssignment_2()); }
	)
	(
		{ before(grammarAccess.getRuleStructureAccess().getManyRuleExpressionAssignment_2()); }
		(rule__RuleStructure__ManyRuleExpressionAssignment_2)*
		{ after(grammarAccess.getRuleStructureAccess().getManyRuleExpressionAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStructure__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStructure__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStructure__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStructureAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getRuleStructureAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParallelExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParallelExpression__Group__0__Impl
	rule__ParallelExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelExpressionAccess().getExclusiveKeyword_0()); }
	'Exclusive'
	{ after(grammarAccess.getParallelExpressionAccess().getExclusiveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParallelExpression__Group__1__Impl
	rule__ParallelExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelExpressionAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getParallelExpressionAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParallelExpression__Group__2__Impl
	rule__ParallelExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelExpressionAccess().getRuleExpressionAssignment_2()); }
	(rule__ParallelExpression__RuleExpressionAssignment_2)
	{ after(grammarAccess.getParallelExpressionAccess().getRuleExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParallelExpression__Group__3__Impl
	rule__ParallelExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelExpressionAccess().getGroup_3()); }
	(rule__ParallelExpression__Group_3__0)*
	{ after(grammarAccess.getParallelExpressionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParallelExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelExpressionAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getParallelExpressionAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParallelExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParallelExpression__Group_3__0__Impl
	rule__ParallelExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelExpressionAccess().getSemicolonKeyword_3_0()); }
	';'
	{ after(grammarAccess.getParallelExpressionAccess().getSemicolonKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParallelExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelExpressionAccess().getRuleExpressionAssignment_3_1()); }
	(rule__ParallelExpression__RuleExpressionAssignment_3_1)
	{ after(grammarAccess.getParallelExpressionAccess().getRuleExpressionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveExpression__Group__0__Impl
	rule__ExclusiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveExpressionAccess().getParallelKeyword_0()); }
	'Parallel'
	{ after(grammarAccess.getExclusiveExpressionAccess().getParallelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveExpression__Group__1__Impl
	rule__ExclusiveExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveExpressionAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getExclusiveExpressionAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveExpression__Group__2__Impl
	rule__ExclusiveExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveExpressionAccess().getRuleExpressionAssignment_2()); }
	(rule__ExclusiveExpression__RuleExpressionAssignment_2)
	{ after(grammarAccess.getExclusiveExpressionAccess().getRuleExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveExpression__Group__3__Impl
	rule__ExclusiveExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveExpressionAccess().getGroup_3()); }
	(rule__ExclusiveExpression__Group_3__0)*
	{ after(grammarAccess.getExclusiveExpressionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveExpressionAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getExclusiveExpressionAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveExpression__Group_3__0__Impl
	rule__ExclusiveExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveExpressionAccess().getSemicolonKeyword_3_0()); }
	';'
	{ after(grammarAccess.getExclusiveExpressionAccess().getSemicolonKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveExpressionAccess().getRuleExpressionAssignment_3_1()); }
	(rule__ExclusiveExpression__RuleExpressionAssignment_3_1)
	{ after(grammarAccess.getExclusiveExpressionAccess().getRuleExpressionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegularRuleExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularRuleExpression__Group__0__Impl
	rule__RegularRuleExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularRuleExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularRuleExpressionAccess().getRuleExpressionAssignment_0()); }
	(rule__RegularRuleExpression__RuleExpressionAssignment_0)
	{ after(grammarAccess.getRegularRuleExpressionAccess().getRuleExpressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularRuleExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularRuleExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularRuleExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularRuleExpressionAccess().getGroup_1()); }
	(rule__RegularRuleExpression__Group_1__0)*
	{ after(grammarAccess.getRegularRuleExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegularRuleExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularRuleExpression__Group_1__0__Impl
	rule__RegularRuleExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularRuleExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularRuleExpressionAccess().getSemicolonKeyword_1_0()); }
	';'
	{ after(grammarAccess.getRegularRuleExpressionAccess().getSemicolonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularRuleExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegularRuleExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularRuleExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularRuleExpressionAccess().getRuleExpressionAssignment_1_1()); }
	(rule__RegularRuleExpression__RuleExpressionAssignment_1_1)
	{ after(grammarAccess.getRegularRuleExpressionAccess().getRuleExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpression__Group__0__Impl
	rule__AdditionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExpressionAccess().getAdditionalKeyword_0()); }
	'Additional'
	{ after(grammarAccess.getAdditionExpressionAccess().getAdditionalKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpression__Group__1__Impl
	rule__AdditionExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExpressionAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getAdditionExpressionAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpression__Group__2__Impl
	rule__AdditionExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExpressionAccess().getRuleExpressionAssignment_2()); }
	(rule__AdditionExpression__RuleExpressionAssignment_2)
	{ after(grammarAccess.getAdditionExpressionAccess().getRuleExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpression__Group__3__Impl
	rule__AdditionExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExpressionAccess().getGroup_3()); }
	(rule__AdditionExpression__Group_3__0)*
	{ after(grammarAccess.getAdditionExpressionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExpressionAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getAdditionExpressionAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpression__Group_3__0__Impl
	rule__AdditionExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExpressionAccess().getSemicolonKeyword_3_0()); }
	';'
	{ after(grammarAccess.getAdditionExpressionAccess().getSemicolonKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExpressionAccess().getRuleExpressionAssignment_3_1()); }
	(rule__AdditionExpression__RuleExpressionAssignment_3_1)
	{ after(grammarAccess.getAdditionExpressionAccess().getRuleExpressionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TotalCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TotalCondition__Group__0__Impl
	rule__TotalCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTotalConditionAccess().getIfKeyword_0()); }
	'If:'
	{ after(grammarAccess.getTotalConditionAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TotalCondition__Group__1__Impl
	rule__TotalCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTotalConditionAccess().getAlternatives_1()); }
	(rule__TotalCondition__Alternatives_1)
	{ after(grammarAccess.getTotalConditionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TotalCondition__Group__2__Impl
	rule__TotalCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTotalConditionAccess().getAndorconditionAssignment_2()); }
	(rule__TotalCondition__AndorconditionAssignment_2)*
	{ after(grammarAccess.getTotalConditionAccess().getAndorconditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalCondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TotalCondition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalCondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTotalConditionAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getTotalConditionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleLinkCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleLinkCondition__Group__0__Impl
	rule__SingleLinkCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleLinkCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleLinkConditionAccess().getNoAssignment_0()); }
	(rule__SingleLinkCondition__NoAssignment_0)?
	{ after(grammarAccess.getSingleLinkConditionAccess().getNoAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleLinkCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleLinkCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleLinkCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleLinkConditionAccess().getLinkConditionAssignment_1()); }
	(rule__SingleLinkCondition__LinkConditionAssignment_1)
	{ after(grammarAccess.getSingleLinkConditionAccess().getLinkConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TotalOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TotalOperation__Group__0__Impl
	rule__TotalOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTotalOperationAccess().getTotalOperationAction_0()); }
	()
	{ after(grammarAccess.getTotalOperationAccess().getTotalOperationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TotalOperation__Group__1__Impl
	rule__TotalOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTotalOperationAccess().getPersonAssignment_1()); }
	(rule__TotalOperation__PersonAssignment_1)?
	{ after(grammarAccess.getTotalOperationAccess().getPersonAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TotalOperation__Group__2__Impl
	rule__TotalOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTotalOperationAccess().getGroup_2()); }
	(rule__TotalOperation__Group_2__0)?
	{ after(grammarAccess.getTotalOperationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TotalOperation__Group__3__Impl
	rule__TotalOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTotalOperationAccess().getAlternatives_3()); }
	(rule__TotalOperation__Alternatives_3)?
	{ after(grammarAccess.getTotalOperationAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TotalOperation__Group__4__Impl
	rule__TotalOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTotalOperationAccess().getAndorAssignment_4()); }
	(rule__TotalOperation__AndorAssignment_4)*
	{ after(grammarAccess.getTotalOperationAccess().getAndorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TotalOperation__Group__5__Impl
	rule__TotalOperation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTotalOperationAccess().getTimePointAssignment_5()); }
	(rule__TotalOperation__TimePointAssignment_5)?
	{ after(grammarAccess.getTotalOperationAccess().getTimePointAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TotalOperation__Group__6__Impl
	rule__TotalOperation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTotalOperationAccess().getFailresultAssignment_6()); }
	(rule__TotalOperation__FailresultAssignment_6)?
	{ after(grammarAccess.getTotalOperationAccess().getFailresultAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TotalOperation__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTotalOperationAccess().getThenoperationAssignment_7()); }
	(rule__TotalOperation__ThenoperationAssignment_7)*
	{ after(grammarAccess.getTotalOperationAccess().getThenoperationAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TotalOperation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TotalOperation__Group_2__0__Impl
	rule__TotalOperation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTotalOperationAccess().getGKeyword_2_0()); }
	'G'
	{ after(grammarAccess.getTotalOperationAccess().getGKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TotalOperation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTotalOperationAccess().getPerson2Assignment_2_1()); }
	(rule__TotalOperation__Person2Assignment_2_1)
	{ after(grammarAccess.getTotalOperationAccess().getPerson2Assignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndOrOperationLink__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndOrOperationLink__Group__0__Impl
	rule__AndOrOperationLink__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrOperationLink__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndOrOperationLinkAccess().getLinkAssignment_0()); }
	(rule__AndOrOperationLink__LinkAssignment_0)
	{ after(grammarAccess.getAndOrOperationLinkAccess().getLinkAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrOperationLink__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndOrOperationLink__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrOperationLink__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndOrOperationLinkAccess().getAlternatives_1()); }
	(rule__AndOrOperationLink__Alternatives_1)
	{ after(grammarAccess.getAndOrOperationLinkAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ThenOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThenOperation__Group__0__Impl
	rule__ThenOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenOperationAccess().getThenKeyword_0()); }
	'Then'
	{ after(grammarAccess.getThenOperationAccess().getThenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThenOperation__Group__1__Impl
	rule__ThenOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenOperationAccess().getAlternatives_1()); }
	(rule__ThenOperation__Alternatives_1)
	{ after(grammarAccess.getThenOperationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThenOperation__Group__2__Impl
	rule__ThenOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenOperationAccess().getAndorAssignment_2()); }
	(rule__ThenOperation__AndorAssignment_2)*
	{ after(grammarAccess.getThenOperationAccess().getAndorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThenOperation__Group__3__Impl
	rule__ThenOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenOperationAccess().getTimePointAssignment_3()); }
	(rule__ThenOperation__TimePointAssignment_3)?
	{ after(grammarAccess.getThenOperationAccess().getTimePointAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThenOperation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenOperationAccess().getFailresultAssignment_4()); }
	(rule__ThenOperation__FailresultAssignment_4)?
	{ after(grammarAccess.getThenOperationAccess().getFailresultAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TotalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TotalExpression__Group__0__Impl
	rule__TotalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTotalExpressionAccess().getSetAssignment_0()); }
	(rule__TotalExpression__SetAssignment_0)?
	{ after(grammarAccess.getTotalExpressionAccess().getSetAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TotalExpression__Group__1__Impl
	rule__TotalExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTotalExpressionAccess().getTotalConditionAssignment_1()); }
	(rule__TotalExpression__TotalConditionAssignment_1)?
	{ after(grammarAccess.getTotalExpressionAccess().getTotalConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TotalExpression__Group__2__Impl
	rule__TotalExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTotalExpressionAccess().getTotalOperationAssignment_2()); }
	(rule__TotalExpression__TotalOperationAssignment_2)
	{ after(grammarAccess.getTotalExpressionAccess().getTotalOperationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TotalExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTotalExpressionAccess().getElseExpressionAssignment_3()); }
	(rule__TotalExpression__ElseExpressionAssignment_3)?
	{ after(grammarAccess.getTotalExpressionAccess().getElseExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseExpression__Group__0__Impl
	rule__ElseExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseExpressionAccess().getElseKeyword_0()); }
	'Else'
	{ after(grammarAccess.getElseExpressionAccess().getElseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseExpression__Group__1__Impl
	rule__ElseExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseExpressionAccess().getSetAssignment_1()); }
	(rule__ElseExpression__SetAssignment_1)?
	{ after(grammarAccess.getElseExpressionAccess().getSetAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseExpression__Group__2__Impl
	rule__ElseExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseExpressionAccess().getTotalConditionAssignment_2()); }
	(rule__ElseExpression__TotalConditionAssignment_2)?
	{ after(grammarAccess.getElseExpressionAccess().getTotalConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseExpressionAccess().getTotalOperationAssignment_3()); }
	(rule__ElseExpression__TotalOperationAssignment_3)
	{ after(grammarAccess.getElseExpressionAccess().getTotalOperationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleExpression__Group__0__Impl
	rule__RuleExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleExpressionAccess().getRepeatAssignment_0()); }
	(rule__RuleExpression__RepeatAssignment_0)?
	{ after(grammarAccess.getRuleExpressionAccess().getRepeatAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleExpression__Group__1__Impl
	rule__RuleExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleExpressionAccess().getNameAssignment_1()); }
	(rule__RuleExpression__NameAssignment_1)
	{ after(grammarAccess.getRuleExpressionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleExpression__Group__2__Impl
	rule__RuleExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleExpressionAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getRuleExpressionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleExpression__Group__3__Impl
	rule__RuleExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleExpressionAccess().getSetAssignment_3()); }
	(rule__RuleExpression__SetAssignment_3)?
	{ after(grammarAccess.getRuleExpressionAccess().getSetAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleExpression__Group__4__Impl
	rule__RuleExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleExpressionAccess().getSetdateAssignment_4()); }
	(rule__RuleExpression__SetdateAssignment_4)?
	{ after(grammarAccess.getRuleExpressionAccess().getSetdateAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleExpression__Group__5__Impl
	rule__RuleExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleExpressionAccess().getTotalConditionAssignment_5()); }
	(rule__RuleExpression__TotalConditionAssignment_5)?
	{ after(grammarAccess.getRuleExpressionAccess().getTotalConditionAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleExpression__Group__6__Impl
	rule__RuleExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleExpressionAccess().getTotalOperationAssignment_6()); }
	(rule__RuleExpression__TotalOperationAssignment_6)
	{ after(grammarAccess.getRuleExpressionAccess().getTotalOperationAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleExpression__Group__7__Impl
	rule__RuleExpression__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleExpressionAccess().getSubExpressionAssignment_7()); }
	(rule__RuleExpression__SubExpressionAssignment_7)*
	{ after(grammarAccess.getRuleExpressionAccess().getSubExpressionAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleExpression__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleExpressionAccess().getElseExpressionAssignment_8()); }
	(rule__RuleExpression__ElseExpressionAssignment_8)?
	{ after(grammarAccess.getRuleExpressionAccess().getElseExpressionAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetDateExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetDateExpression__Group__0__Impl
	rule__SetDateExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDateExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetDateExpressionAccess().getSetDateKeyword_0()); }
	'SetDate('
	{ after(grammarAccess.getSetDateExpressionAccess().getSetDateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDateExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetDateExpression__Group__1__Impl
	rule__SetDateExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDateExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetDateExpressionAccess().getMessageAssignment_1()); }
	(rule__SetDateExpression__MessageAssignment_1)
	{ after(grammarAccess.getSetDateExpressionAccess().getMessageAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDateExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetDateExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDateExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetDateExpressionAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getSetDateExpressionAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubExpression__Group__0__Impl
	rule__SubExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubExpressionAccess().getSubRuleKeyword_0()); }
	'SubRule'
	{ after(grammarAccess.getSubExpressionAccess().getSubRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubExpression__Group__1__Impl
	rule__SubExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubExpressionAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSubExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubExpression__Group__2__Impl
	rule__SubExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubExpressionAccess().getTotalExpressionAssignment_2()); }
	(rule__SubExpression__TotalExpressionAssignment_2)
	{ after(grammarAccess.getSubExpressionAccess().getTotalExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubExpressionAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getSubExpressionAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FailResult__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailResult__Group__0__Impl
	rule__FailResult__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FailResult__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailResultAccess().getFailResultKeyword_0()); }
	'FailResult:'
	{ after(grammarAccess.getFailResultAccess().getFailResultKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailResult__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailResult__Group__1__Impl
	rule__FailResult__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FailResult__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailResultAccess().getAlternatives_1()); }
	(rule__FailResult__Alternatives_1)
	{ after(grammarAccess.getFailResultAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailResult__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailResult__Group__2__Impl
	rule__FailResult__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FailResult__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailResultAccess().getAndorAssignment_2()); }
	(rule__FailResult__AndorAssignment_2)*
	{ after(grammarAccess.getFailResultAccess().getAndorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailResult__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailResult__Group__3__Impl
	rule__FailResult__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FailResult__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailResultAccess().getTimePointAssignment_3()); }
	(rule__FailResult__TimePointAssignment_3)?
	{ after(grammarAccess.getFailResultAccess().getTimePointAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailResult__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailResult__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FailResult__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailResultAccess().getThenoperationAssignment_4()); }
	(rule__FailResult__ThenoperationAssignment_4)*
	{ after(grammarAccess.getFailResultAccess().getThenoperationAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WithinPoint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithinPoint__Group__0__Impl
	rule__WithinPoint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithinPoint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithinPointAccess().getWithinKeyword_0()); }
	'within'
	{ after(grammarAccess.getWithinPointAccess().getWithinKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithinPoint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithinPoint__Group__1__Impl
	rule__WithinPoint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WithinPoint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithinPointAccess().getNumberAssignment_1()); }
	(rule__WithinPoint__NumberAssignment_1)
	{ after(grammarAccess.getWithinPointAccess().getNumberAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithinPoint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithinPoint__Group__2__Impl
	rule__WithinPoint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WithinPoint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithinPointAccess().getTimeAssignment_2()); }
	(rule__WithinPoint__TimeAssignment_2)
	{ after(grammarAccess.getWithinPointAccess().getTimeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithinPoint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithinPoint__Group__3__Impl
	rule__WithinPoint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WithinPoint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithinPointAccess().getAfterKeyword_3()); }
	'after'
	{ after(grammarAccess.getWithinPointAccess().getAfterKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithinPoint__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WithinPoint__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithinPoint__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithinPointAccess().getThingAssignment_4()); }
	(rule__WithinPoint__ThingAssignment_4)
	{ after(grammarAccess.getWithinPointAccess().getThingAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BeforePoint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforePoint__Group__0__Impl
	rule__BeforePoint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforePoint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeforePointAccess().getBeforeKeyword_0()); }
	'before'
	{ after(grammarAccess.getBeforePointAccess().getBeforeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforePoint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BeforePoint__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforePoint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeforePointAccess().getAlternatives_1()); }
	(rule__BeforePoint__Alternatives_1)
	{ after(grammarAccess.getBeforePointAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleCondition__Group__0__Impl
	rule__SingleCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleConditionAccess().getNoAssignment_0()); }
	(rule__SingleCondition__NoAssignment_0)?
	{ after(grammarAccess.getSingleConditionAccess().getNoAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleConditionAccess().getConditionAssignment_1()); }
	(rule__SingleCondition__ConditionAssignment_1)
	{ after(grammarAccess.getSingleConditionAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareString__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareString__Group__0__Impl
	rule__CompareString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareString__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareStringAccess().getCompareStringKeyword_0()); }
	'compareString('
	{ after(grammarAccess.getCompareStringAccess().getCompareStringKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareString__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareString__Group__1__Impl
	rule__CompareString__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareString__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareStringAccess().getValueAAssignment_1()); }
	(rule__CompareString__ValueAAssignment_1)
	{ after(grammarAccess.getCompareStringAccess().getValueAAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareString__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareString__Group__2__Impl
	rule__CompareString__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareString__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareStringAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getCompareStringAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareString__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareString__Group__3__Impl
	rule__CompareString__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareString__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareStringAccess().getValueBAssignment_3()); }
	(rule__CompareString__ValueBAssignment_3)
	{ after(grammarAccess.getCompareStringAccess().getValueBAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareString__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareString__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareString__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareStringAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getCompareStringAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSub__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSub__Group__0__Impl
	rule__TimeSub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSubAccess().getTimeSubKeyword_0()); }
	'timeSub('
	{ after(grammarAccess.getTimeSubAccess().getTimeSubKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSub__Group__1__Impl
	rule__TimeSub__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSubAccess().getValueAAssignment_1()); }
	(rule__TimeSub__ValueAAssignment_1)
	{ after(grammarAccess.getTimeSubAccess().getValueAAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSub__Group__2__Impl
	rule__TimeSub__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSubAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getTimeSubAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSub__Group__3__Impl
	rule__TimeSub__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSubAccess().getValueBAssignment_3()); }
	(rule__TimeSub__ValueBAssignment_3)?
	{ after(grammarAccess.getTimeSubAccess().getValueBAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSub__Group__4__Impl
	rule__TimeSub__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSubAccess().getGroup_4()); }
	(rule__TimeSub__Group_4__0)?
	{ after(grammarAccess.getTimeSubAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSub__Group__5__Impl
	rule__TimeSub__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSubAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getTimeSubAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSub__Group__6__Impl
	rule__TimeSub__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSubAccess().getDurationAssignment_6()); }
	(rule__TimeSub__DurationAssignment_6)
	{ after(grammarAccess.getTimeSubAccess().getDurationAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSub__Group__7__Impl
	rule__TimeSub__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSubAccess().getCommaKeyword_7()); }
	','
	{ after(grammarAccess.getTimeSubAccess().getCommaKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSub__Group__8__Impl
	rule__TimeSub__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSubAccess().getCompareAssignment_8()); }
	(rule__TimeSub__CompareAssignment_8)
	{ after(grammarAccess.getTimeSubAccess().getCompareAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSub__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSubAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getTimeSubAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSub__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSub__Group_4__0__Impl
	rule__TimeSub__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSubAccess().getRKeyword_4_0()); }
	'r'
	{ after(grammarAccess.getTimeSubAccess().getRKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeSub__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeSubAccess().getValueCAssignment_4_1()); }
	(rule__TimeSub__ValueCAssignment_4_1)
	{ after(grammarAccess.getTimeSubAccess().getValueCAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IsTime__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsTime__Group__0__Impl
	rule__IsTime__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsTimeAccess().getIsTimeAction_0()); }
	()
	{ after(grammarAccess.getIsTimeAccess().getIsTimeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsTime__Group__1__Impl
	rule__IsTime__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsTimeAccess().getIsTimeKeyword_1()); }
	'isTime('
	{ after(grammarAccess.getIsTimeAccess().getIsTimeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsTime__Group__2__Impl
	rule__IsTime__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsTimeAccess().getExpressionAssignment_2()); }
	(rule__IsTime__ExpressionAssignment_2)?
	{ after(grammarAccess.getIsTimeAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsTime__Group__3__Impl
	rule__IsTime__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsTimeAccess().getGroup_3()); }
	(rule__IsTime__Group_3__0)?
	{ after(grammarAccess.getIsTimeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsTime__Group__4__Impl
	rule__IsTime__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsTimeAccess().getGroup_4()); }
	(rule__IsTime__Group_4__0)?
	{ after(grammarAccess.getIsTimeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsTime__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsTimeAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getIsTimeAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IsTime__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsTime__Group_3__0__Impl
	rule__IsTime__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsTimeAccess().getRKeyword_3_0()); }
	'r'
	{ after(grammarAccess.getIsTimeAccess().getRKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsTime__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsTimeAccess().getValueAssignment_3_1()); }
	(rule__IsTime__ValueAssignment_3_1)
	{ after(grammarAccess.getIsTimeAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IsTime__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsTime__Group_4__0__Impl
	rule__IsTime__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsTimeAccess().getSymbolAssignment_4_0()); }
	(rule__IsTime__SymbolAssignment_4_0)
	{ after(grammarAccess.getIsTimeAccess().getSymbolAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsTime__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsTimeAccess().getDurationAssignment_4_1()); }
	(rule__IsTime__DurationAssignment_4_1)
	{ after(grammarAccess.getIsTimeAccess().getDurationAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Logic__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__0__Impl
	rule__Logic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getLogicKeyword_0()); }
	'logic('
	{ after(grammarAccess.getLogicAccess().getLogicKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__1__Impl
	rule__Logic__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getValueAAssignment_1()); }
	(rule__Logic__ValueAAssignment_1)
	{ after(grammarAccess.getLogicAccess().getValueAAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__2__Impl
	rule__Logic__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getLogicAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__3__Impl
	rule__Logic__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getValueBAssignment_3()); }
	(rule__Logic__ValueBAssignment_3)
	{ after(grammarAccess.getLogicAccess().getValueBAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__4__Impl
	rule__Logic__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getLogicAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__5__Impl
	rule__Logic__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getMathSymbolAssignment_5()); }
	(rule__Logic__MathSymbolAssignment_5)
	{ after(grammarAccess.getLogicAccess().getMathSymbolAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getLogicAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IsTrue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsTrue__Group__0__Impl
	rule__IsTrue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTrue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsTrueAccess().getIsTrueKeyword_0()); }
	'isTrue('
	{ after(grammarAccess.getIsTrueAccess().getIsTrueKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTrue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsTrue__Group__1__Impl
	rule__IsTrue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTrue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsTrueAccess().getCompareAssignment_1()); }
	(rule__IsTrue__CompareAssignment_1)
	{ after(grammarAccess.getIsTrueAccess().getCompareAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTrue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsTrue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTrue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsTrueAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getIsTrueAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IsDone__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsDone__Group__0__Impl
	rule__IsDone__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsDone__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsDoneAccess().getIsDoneKeyword_0()); }
	'isDone('
	{ after(grammarAccess.getIsDoneAccess().getIsDoneKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsDone__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsDone__Group__1__Impl
	rule__IsDone__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IsDone__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsDoneAccess().getNameAssignment_1()); }
	(rule__IsDone__NameAssignment_1)
	{ after(grammarAccess.getIsDoneAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsDone__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsDone__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsDone__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsDoneAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getIsDoneAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CheckExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckExpression__Group__0__Impl
	rule__CheckExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckExpressionAccess().getCheckKeyword_0()); }
	'check('
	{ after(grammarAccess.getCheckExpressionAccess().getCheckKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckExpression__Group__1__Impl
	rule__CheckExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckExpressionAccess().getNameAssignment_1()); }
	(rule__CheckExpression__NameAssignment_1)
	{ after(grammarAccess.getCheckExpressionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckExpressionAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getCheckExpressionAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MixExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MixExpression__Group__0__Impl
	rule__MixExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MixExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMixExpressionAccess().getExpressionAssignment_0()); }
	(rule__MixExpression__ExpressionAssignment_0)
	{ after(grammarAccess.getMixExpressionAccess().getExpressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MixExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MixExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MixExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMixExpressionAccess().getOtherMixExpressionAssignment_1()); }
	(rule__MixExpression__OtherMixExpressionAssignment_1)*
	{ after(grammarAccess.getMixExpressionAccess().getOtherMixExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OtherMixExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OtherMixExpression__Group__0__Impl
	rule__OtherMixExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherMixExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOtherMixExpressionAccess().getLinkAssignment_0()); }
	(rule__OtherMixExpression__LinkAssignment_0)
	{ after(grammarAccess.getOtherMixExpressionAccess().getLinkAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherMixExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OtherMixExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherMixExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOtherMixExpressionAccess().getExpressionAssignment_1()); }
	(rule__OtherMixExpression__ExpressionAssignment_1)
	{ after(grammarAccess.getOtherMixExpressionAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PeriodExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeriodExpression__Group__0__Impl
	rule__PeriodExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodExpressionAccess().getValueAssignment_0()); }
	(rule__PeriodExpression__ValueAssignment_0)
	{ after(grammarAccess.getPeriodExpressionAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeriodExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodExpressionAccess().getTypeAssignment_1()); }
	(rule__PeriodExpression__TypeAssignment_1)
	{ after(grammarAccess.getPeriodExpressionAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GetPeriodExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GetPeriodExpression__Group__0__Impl
	rule__GetPeriodExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GetPeriodExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetPeriodExpressionAccess().getValueAssignment_0()); }
	(rule__GetPeriodExpression__ValueAssignment_0)
	{ after(grammarAccess.getGetPeriodExpressionAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetPeriodExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GetPeriodExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GetPeriodExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetPeriodExpressionAccess().getTypeAssignment_1()); }
	(rule__GetPeriodExpression__TypeAssignment_1)
	{ after(grammarAccess.getGetPeriodExpressionAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleTimeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleTimeExpression__Group__0__Impl
	rule__RuleTimeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleTimeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleTimeExpressionAccess().getGetRuleTimeKeyword_0()); }
	'getRuleTime('
	{ after(grammarAccess.getRuleTimeExpressionAccess().getGetRuleTimeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleTimeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleTimeExpression__Group__1__Impl
	rule__RuleTimeExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleTimeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleTimeExpressionAccess().getValueAssignment_1()); }
	(rule__RuleTimeExpression__ValueAssignment_1)
	{ after(grammarAccess.getRuleTimeExpressionAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleTimeExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleTimeExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleTimeExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleTimeExpressionAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getRuleTimeExpressionAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringExpression__Group__0__Impl
	rule__StringExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringExpressionAccess().getQuotationMarkKeyword_0()); }
	'"'
	{ after(grammarAccess.getStringExpressionAccess().getQuotationMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringExpression__Group__1__Impl
	rule__StringExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringExpressionAccess().getValueAssignment_1()); }
	(rule__StringExpression__ValueAssignment_1)
	{ after(grammarAccess.getStringExpressionAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringExpressionAccess().getQuotationMarkKeyword_2()); }
	'"'
	{ after(grammarAccess.getStringExpressionAccess().getQuotationMarkKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FloatExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatExpression__Group__0__Impl
	rule__FloatExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatExpressionAccess().getFKeyword_0()); }
	'f'
	{ after(grammarAccess.getFloatExpressionAccess().getFKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatExpressionAccess().getValueAssignment_1()); }
	(rule__FloatExpression__ValueAssignment_1)
	{ after(grammarAccess.getFloatExpressionAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PersonExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PersonExpression__Group__0__Impl
	rule__PersonExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PersonExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPersonExpressionAccess().getPKeyword_0()); }
	'p'
	{ after(grammarAccess.getPersonExpressionAccess().getPKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PersonExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PersonExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PersonExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPersonExpressionAccess().getValueAssignment_1()); }
	(rule__PersonExpression__ValueAssignment_1)
	{ after(grammarAccess.getPersonExpressionAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubjectExpress__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubjectExpress__Group__0__Impl
	rule__SubjectExpress__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpress__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubjectExpressAccess().getSKeyword_0()); }
	's'
	{ after(grammarAccess.getSubjectExpressAccess().getSKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpress__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubjectExpress__Group__1__Impl
	rule__SubjectExpress__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpress__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubjectExpressAccess().getSubjectAssignment_1()); }
	(rule__SubjectExpress__SubjectAssignment_1)
	{ after(grammarAccess.getSubjectExpressAccess().getSubjectAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpress__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubjectExpress__Group__2__Impl
	rule__SubjectExpress__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpress__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubjectExpressAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getSubjectExpressAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpress__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubjectExpress__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpress__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubjectExpressAccess().getAttributeAssignment_3()); }
	(rule__SubjectExpress__AttributeAssignment_3)
	{ after(grammarAccess.getSubjectExpressAccess().getAttributeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectExpress__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectExpress__Group__0__Impl
	rule__ObjectExpress__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpress__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectExpressAccess().getOKeyword_0()); }
	'o'
	{ after(grammarAccess.getObjectExpressAccess().getOKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpress__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectExpress__Group__1__Impl
	rule__ObjectExpress__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpress__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectExpressAccess().getObjectAssignment_1()); }
	(rule__ObjectExpress__ObjectAssignment_1)
	{ after(grammarAccess.getObjectExpressAccess().getObjectAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpress__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectExpress__Group__2__Impl
	rule__ObjectExpress__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpress__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectExpressAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getObjectExpressAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpress__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectExpress__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpress__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectExpressAccess().getAttributeAssignment_3()); }
	(rule__ObjectExpress__AttributeAssignment_3)
	{ after(grammarAccess.getObjectExpressAccess().getAttributeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MessageExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageExpression__Group__0__Impl
	rule__MessageExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageExpressionAccess().getSetMessageKeyword_0()); }
	'SetMessage('
	{ after(grammarAccess.getMessageExpressionAccess().getSetMessageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageExpression__Group__1__Impl
	rule__MessageExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageExpressionAccess().getEverymassageAssignment_1()); }
	(rule__MessageExpression__EverymassageAssignment_1)
	{ after(grammarAccess.getMessageExpressionAccess().getEverymassageAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageExpression__Group__2__Impl
	rule__MessageExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageExpressionAccess().getGroup_2()); }
	(rule__MessageExpression__Group_2__0)*
	{ after(grammarAccess.getMessageExpressionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageExpressionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getMessageExpressionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MessageExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageExpression__Group_2__0__Impl
	rule__MessageExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageExpressionAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getMessageExpressionAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageExpressionAccess().getEverymassageAssignment_2_1()); }
	(rule__MessageExpression__EverymassageAssignment_2_1)
	{ after(grammarAccess.getMessageExpressionAccess().getEverymassageAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EveryMessage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryMessage__Group__0__Impl
	rule__EveryMessage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryMessage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryMessageAccess().getSymbolAssignment_0()); }
	(rule__EveryMessage__SymbolAssignment_0)?
	{ after(grammarAccess.getEveryMessageAccess().getSymbolAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryMessage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryMessage__Group__1__Impl
	rule__EveryMessage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryMessage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryMessageAccess().getTypeAssignment_1()); }
	(rule__EveryMessage__TypeAssignment_1)
	{ after(grammarAccess.getEveryMessageAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryMessage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryMessage__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryMessage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryMessageAccess().getMessageAssignment_2()); }
	(rule__EveryMessage__MessageAssignment_2)
	{ after(grammarAccess.getEveryMessageAccess().getMessageAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransferExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransferExpression__Group__0__Impl
	rule__TransferExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransferExpressionAccess().getTransferKeyword_0()); }
	'transfer('
	{ after(grammarAccess.getTransferExpressionAccess().getTransferKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransferExpression__Group__1__Impl
	rule__TransferExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransferExpressionAccess().getPersonAssignment_1()); }
	(rule__TransferExpression__PersonAssignment_1)
	{ after(grammarAccess.getTransferExpressionAccess().getPersonAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransferExpression__Group__2__Impl
	rule__TransferExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransferExpressionAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getTransferExpressionAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransferExpression__Group__3__Impl
	rule__TransferExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransferExpressionAccess().getValueAssignment_3()); }
	(rule__TransferExpression__ValueAssignment_3)
	{ after(grammarAccess.getTransferExpressionAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransferExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransferExpressionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getTransferExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeString__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeString__Group__0__Impl
	rule__ChangeString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeString__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeStringAccess().getAssignStringKeyword_0()); }
	'assignString('
	{ after(grammarAccess.getChangeStringAccess().getAssignStringKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeString__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeString__Group__1__Impl
	rule__ChangeString__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeString__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeStringAccess().getChangeThingAssignment_1()); }
	(rule__ChangeString__ChangeThingAssignment_1)
	{ after(grammarAccess.getChangeStringAccess().getChangeThingAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeString__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeString__Group__2__Impl
	rule__ChangeString__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeString__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeStringAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getChangeStringAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeString__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeString__Group__3__Impl
	rule__ChangeString__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeString__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeStringAccess().getChangeResultAssignment_3()); }
	(rule__ChangeString__ChangeResultAssignment_3)
	{ after(grammarAccess.getChangeStringAccess().getChangeResultAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeString__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeString__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeString__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeStringAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getChangeStringAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Otherchange__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Otherchange__Group__0__Impl
	rule__Otherchange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Otherchange__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOtherchangeAccess().getAssignKeyword_0()); }
	'assign('
	{ after(grammarAccess.getOtherchangeAccess().getAssignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Otherchange__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Otherchange__Group__1__Impl
	rule__Otherchange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Otherchange__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOtherchangeAccess().getChangeThingAssignment_1()); }
	(rule__Otherchange__ChangeThingAssignment_1)
	{ after(grammarAccess.getOtherchangeAccess().getChangeThingAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Otherchange__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Otherchange__Group__2__Impl
	rule__Otherchange__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Otherchange__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOtherchangeAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getOtherchangeAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Otherchange__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Otherchange__Group__3__Impl
	rule__Otherchange__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Otherchange__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOtherchangeAccess().getChangeResultAssignment_3()); }
	(rule__Otherchange__ChangeResultAssignment_3)
	{ after(grammarAccess.getOtherchangeAccess().getChangeResultAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Otherchange__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Otherchange__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Otherchange__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOtherchangeAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getOtherchangeAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeContract__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeContract__Group__0__Impl
	rule__ChangeContract__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeContract__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeContractAccess().getAssignKeyword_0()); }
	'assign('
	{ after(grammarAccess.getChangeContractAccess().getAssignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeContract__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeContract__Group__1__Impl
	rule__ChangeContract__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeContract__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeContractAccess().getContractStateKeyword_1()); }
	'ContractState'
	{ after(grammarAccess.getChangeContractAccess().getContractStateKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeContract__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeContract__Group__2__Impl
	rule__ChangeContract__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeContract__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeContractAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getChangeContractAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeContract__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeContract__Group__3__Impl
	rule__ChangeContract__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeContract__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeContractAccess().getChangeResultAssignment_3()); }
	(rule__ChangeContract__ChangeResultAssignment_3)
	{ after(grammarAccess.getChangeContractAccess().getChangeResultAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeContract__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeContract__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeContract__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeContractAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getChangeContractAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeRule__Group__0__Impl
	rule__ChangeRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeRuleAccess().getAssignKeyword_0()); }
	'assign('
	{ after(grammarAccess.getChangeRuleAccess().getAssignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeRule__Group__1__Impl
	rule__ChangeRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeRuleAccess().getChangeThingAssignment_1()); }
	(rule__ChangeRule__ChangeThingAssignment_1)
	{ after(grammarAccess.getChangeRuleAccess().getChangeThingAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeRule__Group__2__Impl
	rule__ChangeRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeRuleAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getChangeRuleAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeRule__Group__3__Impl
	rule__ChangeRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeRuleAccess().getChangeResultAssignment_3()); }
	(rule__ChangeRule__ChangeResultAssignment_3)
	{ after(grammarAccess.getChangeRuleAccess().getChangeResultAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeRule__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeRuleAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getChangeRuleAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeOther__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeOther__Group__0__Impl
	rule__ChangeOther__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeOther__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeOtherAccess().getChangeKeyword_0()); }
	'change('
	{ after(grammarAccess.getChangeOtherAccess().getChangeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeOther__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeOther__Group__1__Impl
	rule__ChangeOther__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeOther__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeOtherAccess().getCMKeyword_1()); }
	'CM'
	{ after(grammarAccess.getChangeOtherAccess().getCMKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeOther__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeOther__Group__2__Impl
	rule__ChangeOther__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeOther__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeOtherAccess().getChangeThingAssignment_2()); }
	(rule__ChangeOther__ChangeThingAssignment_2)
	{ after(grammarAccess.getChangeOtherAccess().getChangeThingAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeOther__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeOther__Group__3__Impl
	rule__ChangeOther__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeOther__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeOtherAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getChangeOtherAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeOther__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeOther__Group__4__Impl
	rule__ChangeOther__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeOther__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeOtherAccess().getChangeResultAssignment_4()); }
	(rule__ChangeOther__ChangeResultAssignment_4)
	{ after(grammarAccess.getChangeOtherAccess().getChangeResultAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeOther__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeOther__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeOther__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeOtherAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getChangeOtherAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeAddress__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeAddress__Group__0__Impl
	rule__ChangeAddress__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeAddress__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeAddressAccess().getAssignKeyword_0()); }
	'assign('
	{ after(grammarAccess.getChangeAddressAccess().getAssignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeAddress__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeAddress__Group__1__Impl
	rule__ChangeAddress__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeAddress__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeAddressAccess().getChangeThingAssignment_1()); }
	(rule__ChangeAddress__ChangeThingAssignment_1)
	{ after(grammarAccess.getChangeAddressAccess().getChangeThingAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeAddress__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeAddress__Group__2__Impl
	rule__ChangeAddress__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeAddress__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeAddressAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getChangeAddressAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeAddress__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeAddress__Group__3__Impl
	rule__ChangeAddress__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeAddress__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeAddressAccess().getAKeyword_3()); }
	'a'
	{ after(grammarAccess.getChangeAddressAccess().getAKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeAddress__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeAddress__Group__4__Impl
	rule__ChangeAddress__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeAddress__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeAddressAccess().getChangeResultAssignment_4()); }
	(rule__ChangeAddress__ChangeResultAssignment_4)
	{ after(grammarAccess.getChangeAddressAccess().getChangeResultAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeAddress__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeAddress__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeAddress__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeAddressAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getChangeAddressAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__PackageNameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getPackageNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getPackageNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ExtendNameAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getExtendNameIDTerminalRuleCall_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getExtendNameIDTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__SubjectsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getSubjectsSubjectParserRuleCall_5_0()); }
		ruleSubject
		{ after(grammarAccess.getModelAccess().getSubjectsSubjectParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ObjectsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getObjectsObjectParserRuleCall_6_0()); }
		ruleObject
		{ after(grammarAccess.getModelAccess().getObjectsObjectParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__GroupAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getGroupGroupParserRuleCall_7_0()); }
		ruleGroup
		{ after(grammarAccess.getModelAccess().getGroupGroupParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__InitializeAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getInitializeInitializeParserRuleCall_8_0()); }
		ruleInitialize
		{ after(grammarAccess.getModelAccess().getInitializeInitializeParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ContractMessageAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getContractMessageContractMessageParserRuleCall_9_0()); }
		ruleContractMessage
		{ after(grammarAccess.getModelAccess().getContractMessageContractMessageParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ConditionsAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getConditionsConditionParserRuleCall_10_0()); }
		ruleCondition
		{ after(grammarAccess.getModelAccess().getConditionsConditionParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__OperationsAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getOperationsOperationParserRuleCall_11_0()); }
		ruleOperation
		{ after(grammarAccess.getModelAccess().getOperationsOperationParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__RuleStructuresAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getRuleStructuresRuleStructureParserRuleCall_12_0()); }
		ruleRuleStructure
		{ after(grammarAccess.getModelAccess().getRuleStructuresRuleStructureParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__RequireAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getRequireRequireParserRuleCall_13_0()); }
		ruleRequire
		{ after(grammarAccess.getModelAccess().getRequireRequireParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireAccess().getValueAlternatives_2_0()); }
		(rule__Require__ValueAlternatives_2_0)
		{ after(grammarAccess.getRequireAccess().getValueAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireAccess().getValueAlternatives_3_1_0()); }
		(rule__Require__ValueAlternatives_3_1_0)
		{ after(grammarAccess.getRequireAccess().getValueAlternatives_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__InitsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializeAccess().getInitsInitExpressionsParserRuleCall_3_0()); }
		ruleinitExpressions
		{ after(grammarAccess.getInitializeAccess().getInitsInitExpressionsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__InitoAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializeAccess().getInitoInitExpressionoParserRuleCall_5_0()); }
		ruleinitExpressiono
		{ after(grammarAccess.getInitializeAccess().getInitoInitExpressionoParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressions__SubtypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitExpressionsAccess().getSubtypeSubjectCrossReference_0_0()); }
		(
			{ before(grammarAccess.getInitExpressionsAccess().getSubtypeSubjectIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInitExpressionsAccess().getSubtypeSubjectIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getInitExpressionsAccess().getSubtypeSubjectCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressions__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitExpressionsAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInitExpressionsAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressions__ValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitExpressionsAccess().getValueValueParserRuleCall_4_0()); }
		ruleValue
		{ after(grammarAccess.getInitExpressionsAccess().getValueValueParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressions__ValueAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitExpressionsAccess().getValueValueParserRuleCall_5_1_0()); }
		ruleValue
		{ after(grammarAccess.getInitExpressionsAccess().getValueValueParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressiono__ObtypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitExpressionoAccess().getObtypeObjectCrossReference_0_0()); }
		(
			{ before(grammarAccess.getInitExpressionoAccess().getObtypeObjectIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInitExpressionoAccess().getObtypeObjectIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getInitExpressionoAccess().getObtypeObjectCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressiono__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitExpressionoAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInitExpressionoAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressiono__ValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitExpressionoAccess().getValueValueParserRuleCall_4_0()); }
		ruleValue
		{ after(grammarAccess.getInitExpressionoAccess().getValueValueParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitExpressiono__ValueAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitExpressionoAccess().getValueValueParserRuleCall_5_1_0()); }
		ruleValue
		{ after(grammarAccess.getInitExpressionoAccess().getValueValueParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__SubtypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupAccess().getSubtypeSubjectCrossReference_1_0()); }
		(
			{ before(grammarAccess.getGroupAccess().getSubtypeSubjectIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getGroupAccess().getSubtypeSubjectIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getGroupAccess().getSubtypeSubjectCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getGroupAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__ValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupAccess().getValueInitExpressionsCrossReference_4_0()); }
		(
			{ before(grammarAccess.getGroupAccess().getValueInitExpressionsIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getGroupAccess().getValueInitExpressionsIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getGroupAccess().getValueInitExpressionsCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__ValueAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupAccess().getValueInitExpressionsCrossReference_5_1_0()); }
		(
			{ before(grammarAccess.getGroupAccess().getValueInitExpressionsIDTerminalRuleCall_5_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getGroupAccess().getValueInitExpressionsIDTerminalRuleCall_5_1_0_1()); }
		)
		{ after(grammarAccess.getGroupAccess().getValueInitExpressionsCrossReference_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubjectAccess().getTypeAlternatives_0_0()); }
		(rule__Subject__TypeAlternatives_0_0)
		{ after(grammarAccess.getSubjectAccess().getTypeAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubjectAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSubjectAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__SubjectExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubjectAccess().getSubjectExpressionSubjectExpressionParserRuleCall_2_0()); }
		ruleSubjectExpression
		{ after(grammarAccess.getSubjectAccess().getSubjectExpressionSubjectExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpression__KeyValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubjectExpressionAccess().getKeyValueKeyvalueParserRuleCall_1_0()); }
		rulekeyvalue
		{ after(grammarAccess.getSubjectExpressionAccess().getKeyValueKeyvalueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpression__KeyValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubjectExpressionAccess().getKeyValueKeyvalueParserRuleCall_2_1_0()); }
		rulekeyvalue
		{ after(grammarAccess.getSubjectExpressionAccess().getKeyValueKeyvalueParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractMessage__MessageAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractMessageAccess().getMessageMessageParserRuleCall_2_0()); }
		ruleMessage
		{ after(grammarAccess.getContractMessageAccess().getMessageMessageParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContractMessage__MessageAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractMessageAccess().getMessageMessageParserRuleCall_3_1_0()); }
		ruleMessage
		{ after(grammarAccess.getContractMessageAccess().getMessageMessageParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageAccess().getTypeKeyvalueParserRuleCall_0_0()); }
		rulekeyvalue
		{ after(grammarAccess.getMessageAccess().getTypeKeyvalueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getMessageAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyvalue__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyvalueAccess().getTypeTypeParserRuleCall_0_0()); }
		ruletype
		{ after(grammarAccess.getKeyvalueAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyvalue__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyvalueAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getKeyvalueAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationAccess().getValueINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getDurationAccess().getValueINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__SymbolAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationAccess().getSymbolAlternatives_1_0()); }
		(rule__Duration__SymbolAlternatives_1_0)
		{ after(grammarAccess.getDurationAccess().getSymbolAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Now__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNowAccess().getValueNowKeyword_0()); }
		(
			{ before(grammarAccess.getNowAccess().getValueNowKeyword_0()); }
			'now'
			{ after(grammarAccess.getNowAccess().getValueNowKeyword_0()); }
		)
		{ after(grammarAccess.getNowAccess().getValueNowKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisString__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThisStringAccess().getValueSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getThisStringAccess().getValueSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Address__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddressAccess().getValueSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAddressAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllNumber__NumberAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAllNumberAccess().getNumberINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getAllNumberAccess().getNumberINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisDecimal__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThisDecimalAccess().getValueDECIMALTerminalRuleCall_0()); }
		RULE_DECIMAL
		{ after(grammarAccess.getThisDecimalAccess().getValueDECIMALTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Url__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUrlAccess().getValueURL_STRINGTerminalRuleCall_0()); }
		RULE_URL_STRING
		{ after(grammarAccess.getUrlAccess().getValueURL_STRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisBoolean__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThisBooleanAccess().getValueBOOLEANParserRuleCall_0()); }
		ruleBOOLEAN
		{ after(grammarAccess.getThisBooleanAccess().getValueBOOLEANParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisDate__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThisDateAccess().getValueDATEParserRuleCall_0()); }
		ruleDATE
		{ after(grammarAccess.getThisDateAccess().getValueDATEParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__RightAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAccess().getRightInitExpressionsCrossReference_0()); }
		(
			{ before(grammarAccess.getRightAccess().getRightInitExpressionsIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRightAccess().getRightInitExpressionsIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getRightAccess().getRightInitExpressionsCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__YearAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDATEAccess().getYearINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getDATEAccess().getYearINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__MonthAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDATEAccess().getMonthINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getDATEAccess().getMonthINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__DayAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDATEAccess().getDayINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getDATEAccess().getDayINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__HourAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDATEAccess().getHourINTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getDATEAccess().getHourINTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DATE__MinAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDATEAccess().getMinINTTerminalRuleCall_8_0()); }
		RULE_INT
		{ after(grammarAccess.getDATEAccess().getMinINTTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getObjectAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__ObjectExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getObjectExpressionObjectExpressionParserRuleCall_2_0()); }
		ruleObjectExpression
		{ after(grammarAccess.getObjectAccess().getObjectExpressionObjectExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpression__KeyValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectExpressionAccess().getKeyValueKeyvalueParserRuleCall_1_0()); }
		rulekeyvalue
		{ after(grammarAccess.getObjectExpressionAccess().getKeyValueKeyvalueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpression__KeyValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectExpressionAccess().getKeyValueKeyvalueParserRuleCall_2_1_0()); }
		rulekeyvalue
		{ after(grammarAccess.getObjectExpressionAccess().getKeyValueKeyvalueParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ConditionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getConditionsConditionLinkParserRuleCall_2_0()); }
		ruleConditionLink
		{ after(grammarAccess.getConditionAccess().getConditionsConditionLinkParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ConditionsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getConditionsConditionLinkParserRuleCall_3_1_0()); }
		ruleConditionLink
		{ after(grammarAccess.getConditionAccess().getConditionsConditionLinkParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionLink__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionLinkAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getConditionLinkAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionLink__ConditionExpressionAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionLinkAccess().getConditionExpressionSingleConditionParserRuleCall_2_0_0()); }
		ruleSingleCondition
		{ after(grammarAccess.getConditionLinkAccess().getConditionExpressionSingleConditionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionLink__LinkConditionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionLinkAccess().getLinkConditionSingleLinkConditionParserRuleCall_2_1_0()); }
		ruleSingleLinkCondition
		{ after(grammarAccess.getConditionLinkAccess().getLinkConditionSingleLinkConditionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionLink__AndOrLinkAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionLinkAccess().getAndOrLinkAndOrConditionParserRuleCall_3_0()); }
		ruleAndOrCondition
		{ after(grammarAccess.getConditionLinkAccess().getAndOrLinkAndOrConditionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrCondition__LinkAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndOrConditionAccess().getLinkAlternatives_0_0()); }
		(rule__AndOrCondition__LinkAlternatives_0_0)
		{ after(grammarAccess.getAndOrConditionAccess().getLinkAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrCondition__ConditionAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndOrConditionAccess().getConditionSingleConditionParserRuleCall_1_0_0()); }
		ruleSingleCondition
		{ after(grammarAccess.getAndOrConditionAccess().getConditionSingleConditionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrCondition__LinkConditionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndOrConditionAccess().getLinkConditionSingleLinkConditionParserRuleCall_1_1_0()); }
		ruleSingleLinkCondition
		{ after(grammarAccess.getAndOrConditionAccess().getLinkConditionSingleLinkConditionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__OperatesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getOperatesOperateLinkParserRuleCall_2_0()); }
		ruleOperateLink
		{ after(grammarAccess.getOperationAccess().getOperatesOperateLinkParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__OperatesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getOperatesOperateLinkParserRuleCall_3_1_0()); }
		ruleOperateLink
		{ after(grammarAccess.getOperationAccess().getOperatesOperateLinkParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateLink__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperateLinkAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getOperateLinkAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateLink__FirstOperationAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperateLinkAccess().getFirstOperationTrueOperationParserRuleCall_2_0_0()); }
		ruletrueOperation
		{ after(grammarAccess.getOperateLinkAccess().getFirstOperationTrueOperationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateLink__LinkOperationAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperateLinkAccess().getLinkOperationOperateLinkCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getOperateLinkAccess().getLinkOperationOperateLinkIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOperateLinkAccess().getLinkOperationOperateLinkIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getOperateLinkAccess().getLinkOperationOperateLinkCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperateLink__AndOrLinkAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperateLinkAccess().getAndOrLinkAndOrOperationLinkParserRuleCall_3_0()); }
		ruleAndOrOperationLink
		{ after(grammarAccess.getOperateLinkAccess().getAndOrLinkAndOrOperationLinkParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStructure__ManyRuleExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleStructureAccess().getManyRuleExpressionManyRuleExpressionParserRuleCall_2_0()); }
		ruleManyRuleExpression
		{ after(grammarAccess.getRuleStructureAccess().getManyRuleExpressionManyRuleExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelExpression__RuleExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParallelExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_2_0()); }
		ruleRuleExpression
		{ after(grammarAccess.getParallelExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParallelExpression__RuleExpressionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParallelExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_3_1_0()); }
		ruleRuleExpression
		{ after(grammarAccess.getParallelExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveExpression__RuleExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExclusiveExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_2_0()); }
		ruleRuleExpression
		{ after(grammarAccess.getExclusiveExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveExpression__RuleExpressionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExclusiveExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_3_1_0()); }
		ruleRuleExpression
		{ after(grammarAccess.getExclusiveExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularRuleExpression__RuleExpressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularRuleExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_0_0()); }
		ruleRuleExpression
		{ after(grammarAccess.getRegularRuleExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegularRuleExpression__RuleExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularRuleExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_1_1_0()); }
		ruleRuleExpression
		{ after(grammarAccess.getRegularRuleExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__RuleExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_2_0()); }
		ruleRuleExpression
		{ after(grammarAccess.getAdditionExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__RuleExpressionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_3_1_0()); }
		ruleRuleExpression
		{ after(grammarAccess.getAdditionExpressionAccess().getRuleExpressionRuleExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalCondition__ConditionAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTotalConditionAccess().getConditionSingleConditionParserRuleCall_1_0_0()); }
		ruleSingleCondition
		{ after(grammarAccess.getTotalConditionAccess().getConditionSingleConditionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalCondition__LinkConditionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTotalConditionAccess().getLinkConditionSingleLinkConditionParserRuleCall_1_1_0()); }
		ruleSingleLinkCondition
		{ after(grammarAccess.getTotalConditionAccess().getLinkConditionSingleLinkConditionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalCondition__AndorconditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTotalConditionAccess().getAndorconditionAndOrConditionParserRuleCall_2_0()); }
		ruleAndOrCondition
		{ after(grammarAccess.getTotalConditionAccess().getAndorconditionAndOrConditionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleLinkCondition__NoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleLinkConditionAccess().getNoExclamationMarkKeyword_0_0()); }
		(
			{ before(grammarAccess.getSingleLinkConditionAccess().getNoExclamationMarkKeyword_0_0()); }
			'!'
			{ after(grammarAccess.getSingleLinkConditionAccess().getNoExclamationMarkKeyword_0_0()); }
		)
		{ after(grammarAccess.getSingleLinkConditionAccess().getNoExclamationMarkKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleLinkCondition__LinkConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleLinkConditionAccess().getLinkConditionConditionLinkCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSingleLinkConditionAccess().getLinkConditionConditionLinkIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSingleLinkConditionAccess().getLinkConditionConditionLinkIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSingleLinkConditionAccess().getLinkConditionConditionLinkCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__PersonAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTotalOperationAccess().getPersonInitExpressionsCrossReference_1_0()); }
		(
			{ before(grammarAccess.getTotalOperationAccess().getPersonInitExpressionsIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTotalOperationAccess().getPersonInitExpressionsIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getTotalOperationAccess().getPersonInitExpressionsCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__Person2Assignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTotalOperationAccess().getPerson2GroupCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getTotalOperationAccess().getPerson2GroupIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTotalOperationAccess().getPerson2GroupIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getTotalOperationAccess().getPerson2GroupCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__FirstOperationAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTotalOperationAccess().getFirstOperationTrueOperationParserRuleCall_3_0_0()); }
		ruletrueOperation
		{ after(grammarAccess.getTotalOperationAccess().getFirstOperationTrueOperationParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__LinkOperationAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTotalOperationAccess().getLinkOperationOperateLinkCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getTotalOperationAccess().getLinkOperationOperateLinkIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTotalOperationAccess().getLinkOperationOperateLinkIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getTotalOperationAccess().getLinkOperationOperateLinkCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__AndorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTotalOperationAccess().getAndorAndOrOperationLinkParserRuleCall_4_0()); }
		ruleAndOrOperationLink
		{ after(grammarAccess.getTotalOperationAccess().getAndorAndOrOperationLinkParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__TimePointAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTotalOperationAccess().getTimePointTimepointParserRuleCall_5_0()); }
		ruleTimepoint
		{ after(grammarAccess.getTotalOperationAccess().getTimePointTimepointParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__FailresultAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTotalOperationAccess().getFailresultFailResultParserRuleCall_6_0()); }
		ruleFailResult
		{ after(grammarAccess.getTotalOperationAccess().getFailresultFailResultParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalOperation__ThenoperationAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTotalOperationAccess().getThenoperationThenOperationParserRuleCall_7_0()); }
		ruleThenOperation
		{ after(grammarAccess.getTotalOperationAccess().getThenoperationThenOperationParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrOperationLink__LinkAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndOrOperationLinkAccess().getLinkAndKeyword_0_0()); }
		(
			{ before(grammarAccess.getAndOrOperationLinkAccess().getLinkAndKeyword_0_0()); }
			'and'
			{ after(grammarAccess.getAndOrOperationLinkAccess().getLinkAndKeyword_0_0()); }
		)
		{ after(grammarAccess.getAndOrOperationLinkAccess().getLinkAndKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrOperationLink__FirstOperationAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndOrOperationLinkAccess().getFirstOperationTrueOperationParserRuleCall_1_0_0()); }
		ruletrueOperation
		{ after(grammarAccess.getAndOrOperationLinkAccess().getFirstOperationTrueOperationParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOrOperationLink__LinkOperationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndOrOperationLinkAccess().getLinkOperationOperateLinkCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getAndOrOperationLinkAccess().getLinkOperationOperateLinkIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAndOrOperationLinkAccess().getLinkOperationOperateLinkIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getAndOrOperationLinkAccess().getLinkOperationOperateLinkCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenOperation__FollowingOperationAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenOperationAccess().getFollowingOperationTrueOperationParserRuleCall_1_0_0()); }
		ruletrueOperation
		{ after(grammarAccess.getThenOperationAccess().getFollowingOperationTrueOperationParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenOperation__LinkOperationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenOperationAccess().getLinkOperationOperateLinkCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getThenOperationAccess().getLinkOperationOperateLinkIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getThenOperationAccess().getLinkOperationOperateLinkIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getThenOperationAccess().getLinkOperationOperateLinkCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenOperation__AndorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenOperationAccess().getAndorAndOrOperationLinkParserRuleCall_2_0()); }
		ruleAndOrOperationLink
		{ after(grammarAccess.getThenOperationAccess().getAndorAndOrOperationLinkParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenOperation__TimePointAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenOperationAccess().getTimePointTimepointParserRuleCall_3_0()); }
		ruleTimepoint
		{ after(grammarAccess.getThenOperationAccess().getTimePointTimepointParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenOperation__FailresultAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenOperationAccess().getFailresultFailResultParserRuleCall_4_0()); }
		ruleFailResult
		{ after(grammarAccess.getThenOperationAccess().getFailresultFailResultParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalExpression__SetAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTotalExpressionAccess().getSetMessageExpressionParserRuleCall_0_0()); }
		rulemessageExpression
		{ after(grammarAccess.getTotalExpressionAccess().getSetMessageExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalExpression__TotalConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTotalExpressionAccess().getTotalConditionTotalConditionParserRuleCall_1_0()); }
		ruleTotalCondition
		{ after(grammarAccess.getTotalExpressionAccess().getTotalConditionTotalConditionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalExpression__TotalOperationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTotalExpressionAccess().getTotalOperationTotalOperationParserRuleCall_2_0()); }
		ruleTotalOperation
		{ after(grammarAccess.getTotalExpressionAccess().getTotalOperationTotalOperationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TotalExpression__ElseExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTotalExpressionAccess().getElseExpressionElseExpressionParserRuleCall_3_0()); }
		ruleElseExpression
		{ after(grammarAccess.getTotalExpressionAccess().getElseExpressionElseExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseExpression__SetAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseExpressionAccess().getSetMessageExpressionParserRuleCall_1_0()); }
		rulemessageExpression
		{ after(grammarAccess.getElseExpressionAccess().getSetMessageExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseExpression__TotalConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseExpressionAccess().getTotalConditionTotalConditionParserRuleCall_2_0()); }
		ruleTotalCondition
		{ after(grammarAccess.getElseExpressionAccess().getTotalConditionTotalConditionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseExpression__TotalOperationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseExpressionAccess().getTotalOperationTotalOperationParserRuleCall_3_0()); }
		ruleTotalOperation
		{ after(grammarAccess.getElseExpressionAccess().getTotalOperationTotalOperationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__RepeatAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleExpressionAccess().getRepeatRepeatKeyword_0_0()); }
		(
			{ before(grammarAccess.getRuleExpressionAccess().getRepeatRepeatKeyword_0_0()); }
			'Repeat'
			{ after(grammarAccess.getRuleExpressionAccess().getRepeatRepeatKeyword_0_0()); }
		)
		{ after(grammarAccess.getRuleExpressionAccess().getRepeatRepeatKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleExpressionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRuleExpressionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__SetAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleExpressionAccess().getSetMessageExpressionParserRuleCall_3_0()); }
		rulemessageExpression
		{ after(grammarAccess.getRuleExpressionAccess().getSetMessageExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__SetdateAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleExpressionAccess().getSetdateSetDateExpressionParserRuleCall_4_0()); }
		rulesetDateExpression
		{ after(grammarAccess.getRuleExpressionAccess().getSetdateSetDateExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__TotalConditionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleExpressionAccess().getTotalConditionTotalConditionParserRuleCall_5_0()); }
		ruleTotalCondition
		{ after(grammarAccess.getRuleExpressionAccess().getTotalConditionTotalConditionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__TotalOperationAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleExpressionAccess().getTotalOperationTotalOperationParserRuleCall_6_0()); }
		ruleTotalOperation
		{ after(grammarAccess.getRuleExpressionAccess().getTotalOperationTotalOperationParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__SubExpressionAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleExpressionAccess().getSubExpressionSubExpressionParserRuleCall_7_0()); }
		ruleSubExpression
		{ after(grammarAccess.getRuleExpressionAccess().getSubExpressionSubExpressionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleExpression__ElseExpressionAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleExpressionAccess().getElseExpressionElseExpressionParserRuleCall_8_0()); }
		ruleElseExpression
		{ after(grammarAccess.getRuleExpressionAccess().getElseExpressionElseExpressionParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDateExpression__MessageAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetDateExpressionAccess().getMessageIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSetDateExpressionAccess().getMessageIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__TotalExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubExpressionAccess().getTotalExpressionTotalExpressionParserRuleCall_2_0()); }
		ruleTotalExpression
		{ after(grammarAccess.getSubExpressionAccess().getTotalExpressionTotalExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailResult__FollowingOperationAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFailResultAccess().getFollowingOperationTrueOperationParserRuleCall_1_0_0()); }
		ruletrueOperation
		{ after(grammarAccess.getFailResultAccess().getFollowingOperationTrueOperationParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailResult__LinkOperationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFailResultAccess().getLinkOperationOperateLinkCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getFailResultAccess().getLinkOperationOperateLinkIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFailResultAccess().getLinkOperationOperateLinkIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getFailResultAccess().getLinkOperationOperateLinkCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailResult__AndorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFailResultAccess().getAndorAndOrOperationLinkParserRuleCall_2_0()); }
		ruleAndOrOperationLink
		{ after(grammarAccess.getFailResultAccess().getAndorAndOrOperationLinkParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailResult__TimePointAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFailResultAccess().getTimePointTimepointParserRuleCall_3_0()); }
		ruleTimepoint
		{ after(grammarAccess.getFailResultAccess().getTimePointTimepointParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailResult__ThenoperationAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFailResultAccess().getThenoperationThenOperationParserRuleCall_4_0()); }
		ruleThenOperation
		{ after(grammarAccess.getFailResultAccess().getThenoperationThenOperationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithinPoint__NumberAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWithinPointAccess().getNumberINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getWithinPointAccess().getNumberINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithinPoint__TimeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWithinPointAccess().getTimeEachTimeParserRuleCall_2_0()); }
		ruleEachTime
		{ after(grammarAccess.getWithinPointAccess().getTimeEachTimeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WithinPoint__ThingAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWithinPointAccess().getThingRuleExpressionCrossReference_4_0()); }
		(
			{ before(grammarAccess.getWithinPointAccess().getThingRuleExpressionIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getWithinPointAccess().getThingRuleExpressionIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getWithinPointAccess().getThingRuleExpressionCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforePoint__LineTimeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeforePointAccess().getLineTimeThisDateParserRuleCall_1_0_0()); }
		ruleThisDate
		{ after(grammarAccess.getBeforePointAccess().getLineTimeThisDateParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeforePoint__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeforePointAccess().getValueKeyvalueCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getBeforePointAccess().getValueKeyvalueIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getBeforePointAccess().getValueKeyvalueIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getBeforePointAccess().getValueKeyvalueCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleCondition__NoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleConditionAccess().getNoExclamationMarkKeyword_0_0()); }
		(
			{ before(grammarAccess.getSingleConditionAccess().getNoExclamationMarkKeyword_0_0()); }
			'!'
			{ after(grammarAccess.getSingleConditionAccess().getNoExclamationMarkKeyword_0_0()); }
		)
		{ after(grammarAccess.getSingleConditionAccess().getNoExclamationMarkKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleCondition__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleConditionAccess().getConditionTrueConditionParserRuleCall_1_0()); }
		ruleTrueCondition
		{ after(grammarAccess.getSingleConditionAccess().getConditionTrueConditionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareString__ValueAAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareStringAccess().getValueAMixExpressionParserRuleCall_1_0()); }
		ruleMixExpression
		{ after(grammarAccess.getCompareStringAccess().getValueAMixExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareString__ValueBAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareStringAccess().getValueBMixExpressionParserRuleCall_3_0()); }
		ruleMixExpression
		{ after(grammarAccess.getCompareStringAccess().getValueBMixExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__ValueAAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeSubAccess().getValueAMixExpressionParserRuleCall_1_0()); }
		ruleMixExpression
		{ after(grammarAccess.getTimeSubAccess().getValueAMixExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__ValueBAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeSubAccess().getValueBMixExpressionParserRuleCall_3_0()); }
		ruleMixExpression
		{ after(grammarAccess.getTimeSubAccess().getValueBMixExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__ValueCAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeSubAccess().getValueCRuleExpressionCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getTimeSubAccess().getValueCRuleExpressionIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTimeSubAccess().getValueCRuleExpressionIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getTimeSubAccess().getValueCRuleExpressionCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__DurationAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeSubAccess().getDurationDurationParserRuleCall_6_0()); }
		ruleDuration
		{ after(grammarAccess.getTimeSubAccess().getDurationDurationParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSub__CompareAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeSubAccess().getCompareMATH_SYMBOLTerminalRuleCall_8_0()); }
		RULE_MATH_SYMBOL
		{ after(grammarAccess.getTimeSubAccess().getCompareMATH_SYMBOLTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsTimeAccess().getExpressionMixExpressionParserRuleCall_2_0()); }
		ruleMixExpression
		{ after(grammarAccess.getIsTimeAccess().getExpressionMixExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsTimeAccess().getValueRuleExpressionCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getIsTimeAccess().getValueRuleExpressionIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getIsTimeAccess().getValueRuleExpressionIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getIsTimeAccess().getValueRuleExpressionCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__SymbolAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsTimeAccess().getSymbolARITHMETIC_OPERATORTerminalRuleCall_4_0_0()); }
		RULE_ARITHMETIC_OPERATOR
		{ after(grammarAccess.getIsTimeAccess().getSymbolARITHMETIC_OPERATORTerminalRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTime__DurationAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsTimeAccess().getDurationDurationParserRuleCall_4_1_0()); }
		ruleDuration
		{ after(grammarAccess.getIsTimeAccess().getDurationDurationParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__ValueAAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicAccess().getValueAMixExpressionParserRuleCall_1_0()); }
		ruleMixExpression
		{ after(grammarAccess.getLogicAccess().getValueAMixExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__ValueBAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicAccess().getValueBMixExpressionParserRuleCall_3_0()); }
		ruleMixExpression
		{ after(grammarAccess.getLogicAccess().getValueBMixExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__MathSymbolAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicAccess().getMathSymbolMATH_SYMBOLTerminalRuleCall_5_0()); }
		RULE_MATH_SYMBOL
		{ after(grammarAccess.getLogicAccess().getMathSymbolMATH_SYMBOLTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTrue__CompareAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsTrueAccess().getCompareSingleExpressionParserRuleCall_1_0()); }
		ruleSingleExpression
		{ after(grammarAccess.getIsTrueAccess().getCompareSingleExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsDone__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsDoneAccess().getNameRuleExpressionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getIsDoneAccess().getNameRuleExpressionIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getIsDoneAccess().getNameRuleExpressionIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getIsDoneAccess().getNameRuleExpressionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckExpression__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckExpressionAccess().getNameModelCrossReference_1_0()); }
		(
			{ before(grammarAccess.getCheckExpressionAccess().getNameModelIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCheckExpressionAccess().getNameModelIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getCheckExpressionAccess().getNameModelCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MixExpression__ExpressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMixExpressionAccess().getExpressionSingleExpressionParserRuleCall_0_0()); }
		ruleSingleExpression
		{ after(grammarAccess.getMixExpressionAccess().getExpressionSingleExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MixExpression__OtherMixExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMixExpressionAccess().getOtherMixExpressionOtherMixExpressionParserRuleCall_1_0()); }
		ruleOtherMixExpression
		{ after(grammarAccess.getMixExpressionAccess().getOtherMixExpressionOtherMixExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherMixExpression__LinkAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOtherMixExpressionAccess().getLinkARITHMETIC_OPERATORTerminalRuleCall_0_0()); }
		RULE_ARITHMETIC_OPERATOR
		{ after(grammarAccess.getOtherMixExpressionAccess().getLinkARITHMETIC_OPERATORTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherMixExpression__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOtherMixExpressionAccess().getExpressionSingleExpressionParserRuleCall_1_0()); }
		ruleSingleExpression
		{ after(grammarAccess.getOtherMixExpressionAccess().getExpressionSingleExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodExpression__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodExpressionAccess().getValueINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getPeriodExpressionAccess().getValueINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodExpression__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodExpressionAccess().getTypeEachTimeParserRuleCall_1_0()); }
		ruleEachTime
		{ after(grammarAccess.getPeriodExpressionAccess().getTypeEachTimeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetPeriodExpression__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetPeriodExpressionAccess().getValueIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getGetPeriodExpressionAccess().getValueIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetPeriodExpression__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetPeriodExpressionAccess().getTypeEachTimeParserRuleCall_1_0()); }
		ruleEachTime
		{ after(grammarAccess.getGetPeriodExpressionAccess().getTypeEachTimeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleTimeExpression__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleTimeExpressionAccess().getValueRuleExpressionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getRuleTimeExpressionAccess().getValueRuleExpressionIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRuleTimeExpressionAccess().getValueRuleExpressionIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getRuleTimeExpressionAccess().getValueRuleExpressionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherExpression__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOtherExpressionAccess().getValueIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getOtherExpressionAccess().getValueIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringExpression__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringExpressionAccess().getValueIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStringExpressionAccess().getValueIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatExpression__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatExpressionAccess().getValueIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFloatExpressionAccess().getValueIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PersonExpression__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPersonExpressionAccess().getValueInitExpressionsCrossReference_1_0()); }
		(
			{ before(grammarAccess.getPersonExpressionAccess().getValueInitExpressionsIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPersonExpressionAccess().getValueInitExpressionsIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getPersonExpressionAccess().getValueInitExpressionsCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpress__SubjectAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubjectExpressAccess().getSubjectInitExpressionsCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSubjectExpressAccess().getSubjectInitExpressionsIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSubjectExpressAccess().getSubjectInitExpressionsIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSubjectExpressAccess().getSubjectInitExpressionsCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubjectExpress__AttributeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubjectExpressAccess().getAttributeIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getSubjectExpressAccess().getAttributeIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpress__ObjectAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectExpressAccess().getObjectInitExpressionoCrossReference_1_0()); }
		(
			{ before(grammarAccess.getObjectExpressAccess().getObjectInitExpressionoIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getObjectExpressAccess().getObjectInitExpressionoIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getObjectExpressAccess().getObjectInitExpressionoCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectExpress__AttributeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectExpressAccess().getAttributeIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getObjectExpressAccess().getAttributeIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageExpression__EverymassageAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageExpressionAccess().getEverymassageEveryMessageParserRuleCall_1_0()); }
		ruleeveryMessage
		{ after(grammarAccess.getMessageExpressionAccess().getEverymassageEveryMessageParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageExpression__EverymassageAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageExpressionAccess().getEverymassageEveryMessageParserRuleCall_2_1_0()); }
		ruleeveryMessage
		{ after(grammarAccess.getMessageExpressionAccess().getEverymassageEveryMessageParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryMessage__SymbolAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEveryMessageAccess().getSymbolNewKeyword_0_0()); }
		(
			{ before(grammarAccess.getEveryMessageAccess().getSymbolNewKeyword_0_0()); }
			'new'
			{ after(grammarAccess.getEveryMessageAccess().getSymbolNewKeyword_0_0()); }
		)
		{ after(grammarAccess.getEveryMessageAccess().getSymbolNewKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryMessage__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEveryMessageAccess().getTypeTypeParserRuleCall_1_0()); }
		ruletype
		{ after(grammarAccess.getEveryMessageAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryMessage__MessageAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEveryMessageAccess().getMessageIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEveryMessageAccess().getMessageIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferExpression__PersonAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransferExpressionAccess().getPersonInitExpressionsCrossReference_1_0()); }
		(
			{ before(grammarAccess.getTransferExpressionAccess().getPersonInitExpressionsIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTransferExpressionAccess().getPersonInitExpressionsIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getTransferExpressionAccess().getPersonInitExpressionsCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransferExpression__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransferExpressionAccess().getValueMixExpressionParserRuleCall_3_0()); }
		ruleMixExpression
		{ after(grammarAccess.getTransferExpressionAccess().getValueMixExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeString__ChangeThingAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeStringAccess().getChangeThingMixExpressionParserRuleCall_1_0()); }
		ruleMixExpression
		{ after(grammarAccess.getChangeStringAccess().getChangeThingMixExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeString__ChangeResultAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeStringAccess().getChangeResultMixExpressionParserRuleCall_3_0()); }
		ruleMixExpression
		{ after(grammarAccess.getChangeStringAccess().getChangeResultMixExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Otherchange__ChangeThingAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOtherchangeAccess().getChangeThingMixExpressionParserRuleCall_1_0()); }
		ruleMixExpression
		{ after(grammarAccess.getOtherchangeAccess().getChangeThingMixExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Otherchange__ChangeResultAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOtherchangeAccess().getChangeResultMixExpressionParserRuleCall_3_0()); }
		ruleMixExpression
		{ after(grammarAccess.getOtherchangeAccess().getChangeResultMixExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeContract__ChangeResultAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeContractAccess().getChangeResultContractStateParserRuleCall_3_0()); }
		ruleContractState
		{ after(grammarAccess.getChangeContractAccess().getChangeResultContractStateParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeRule__ChangeThingAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeRuleAccess().getChangeThingRuleExpressionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getChangeRuleAccess().getChangeThingRuleExpressionIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getChangeRuleAccess().getChangeThingRuleExpressionIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getChangeRuleAccess().getChangeThingRuleExpressionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeRule__ChangeResultAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeRuleAccess().getChangeResultBOOLEANParserRuleCall_3_0()); }
		ruleBOOLEAN
		{ after(grammarAccess.getChangeRuleAccess().getChangeResultBOOLEANParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeOther__ChangeThingAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeOtherAccess().getChangeThingSingleExpressionParserRuleCall_2_0()); }
		ruleSingleExpression
		{ after(grammarAccess.getChangeOtherAccess().getChangeThingSingleExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeOther__ChangeResultAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeOtherAccess().getChangeResultBOOLEANParserRuleCall_4_0()); }
		ruleBOOLEAN
		{ after(grammarAccess.getChangeOtherAccess().getChangeResultBOOLEANParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeAddress__ChangeThingAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeAddressAccess().getChangeThingMixExpressionParserRuleCall_1_0()); }
		ruleMixExpression
		{ after(grammarAccess.getChangeAddressAccess().getChangeThingMixExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeAddress__ChangeResultAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeAddressAccess().getChangeResultMixExpressionParserRuleCall_4_0()); }
		ruleMixExpression
		{ after(grammarAccess.getChangeAddressAccess().getChangeResultMixExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_MATH_SYMBOL : ('>'|'<'|'>='|'<='|'=='|'!=');

RULE_ARITHMETIC_OPERATOR : ('+'|'-'|'*'|'/');

RULE_URL_STRING : 'https://' ('a'..'z'|'A'..'Z'|'0'..'9'|'.'|'-'|'/')+;

RULE_DECIMAL : (RULE_INT '.' RULE_INT|'.' RULE_INT);

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
