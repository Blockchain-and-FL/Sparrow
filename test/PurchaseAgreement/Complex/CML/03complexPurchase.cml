namespace cml.examples

import cml.generator.annotation.solidity.*

@PullPayment
contract ComplexPurchase
	Party seller
	Party buyer
	Party platform
	Party ca
	Party aa
	Party ra
	Party court
	Integer value
	DateTime giveTime
	Boolean finalResult
	Duration lateDelivery
	Duration confirmDay
	Integer lateIR
	Integer finishIR
	String ownership
	String solutionS
	String solutionB
	String faultName
	Integer compensation
	Boolean confirm
	Boolean endContract
		
	clause rule1
		party ca
		may checkResult
	
	clause rule2
		given finalResult=true
		party buyer
		may confirmPurchase
		
	//不是同一个意思了	
	clause rule3
		due before giveTime
		//due within 1 days after buyer did confirmPurchase
		party seller
		may delivery
		
	//表达不完全
	clause rule4
		due after seller did delivery 
		//or after seller did late_delivery
		party platform
		may confirmArrive
		
	clause rule5
		//due within confirmDay after platform did confirmArrive
		party buyer
		may confirmGet
		
	clause rule6
		due after buyer did confirmGet
		party platform
		may transfer2s and changeContract
	
	clause rule7
		//due after clause rule5 failed
		party platform
		may transfer2s and confirmGet and changeContract
		
	clause rule8
		//due within lateDelivery after clause rule3 failed
		party seller
		may late_delivery
		
	clause rule9
		//due after clause rule8 failed
		party seller
		may payfinishB
		
	clause rule10
		due after seller did payfinishB
		party platform
		may returnMoney and changeContract
		
	clause rule11
		given endContract=false
		party buyer
		may payfinishS
		
	clause rule12
		given endContract=false
		party seller
		may payfinishB
		
	//在11或者12后表达不了
	clause rule13
		due after buyer did payfinishS
		party platform
		may returnMoney and changeContract
		
	clause rule14
		party ra 
		may pauseContract
		
	clause rule15
		party ra
		may restartContract
		
	clause rule16
		party buyer
		may chooseSolutionB
		
	clause rule17
		party seller
		may chooseSolutionS
		
	clause rule18
		given solutionB=='negotiation'
		and solutionS=='negotiation'
		party buyer
		may setSolution
		
	clause rule19
		party seller
		may confirmSolution
		
	clause rule20_1
		due after seller did confirmSolution
		given confirm and faultName=='buyer'
		party buyer
		may payFaultB
		
	clause rule20_2
		due after seller did confirmSolution
		given confirm and faultName=='seller'
		party seller
		may payFaultS

	clause rule21
		party court
		may setSolution
		
	clause rule22_1
		due after court did setSolution
		given faultName=='buyer'
		party buyer
		may payFaultB
		
	clause rule22_2
		due after court did setSolution
		given faultName=='seller'
		party seller
		may payFaultS
		
	clause rule23
		party aa
		may setSolution	
	
	clause rule24_1
		due after aa did setSolution
		given faultName=='buyer'
		party buyer
		may payFaultB
		
	clause rule24_2
		due after aa did setSolution
		given faultName=='seller'
		party seller
		may payFaultS
			
	action init(Party _seller,Party _buyer,Party _platform,Party _ca,Party _aa,
	Party _ra,Party _court,Integer _value,DateTime _giveTime,Boolean _finalResult,
	Duration _lateDelivery,Duration _confirmDay,Integer _lateIR,Integer _finishIR,
	String _ownership)
		seller=_seller
		buyer=_buyer
		platform=_platform
		ca=_ca
		aa=_aa
		ra=_ra
		court=_court
		value=_value
		giveTime=_giveTime
		finalResult=_finalResult
		lateDelivery=_lateDelivery
		confirmDay=_confirmDay
		lateIR=_lateIR
		finishIR=_finishIR
		ownership=_ownership

	action checkResult(Boolean result)
		finalResult=result	

	action confirmPurchase()
		transfer(platform,value)
		
	action delivery()
		
	action confirmArrive()
	
	action confirmGet()
		ownership='buyer'
		
	action transfer2s()
		transfer(seller,value)
		
	action late_delivery(Integer lateDays)
		transfer(buyer,value*lateIR*lateDays)
		
	action payfinishB()
		transfer(buyer,value*finishIR)
		
	action payfinishS()
		transfer(seller,value*finishIR)
		
	action returnMoney()
		transfer(buyer,value)
		
	action changeContract()
		endContract=true
		
	action pauseContract()
		endContract=true
	
	action restartContract()
		endContract=false
		
	action chooseSolutionB(String solution)
		solutionB=solution
		
	action chooseSolutionS(String solution)
		solutionS=solution
		
	action setSolution(	String _faultName,Integer _compensation)
		faultName=_faultName
		compensation=_compensation
		
	action confirmSolution(Boolean _confirm)
		confirm=_confirm
		
	action payFaultB()
		transfer(seller,compensation)
		
	action payFaultS()
		transfer(buyer,compensation)