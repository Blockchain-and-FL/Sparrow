Contract ordinaryPurchase{
	PA Person
	Token token{
	  string name,	
	  uint number,
	  ufixed unit_price,
	  string ownership
	}
	init {
		s Person Buyer = ('A',
			a'0x5B38Da6a701c568545dCfcB03FcB875f56beddC4')
		s Person Seller = ('B',
			a'0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2')
		s Person Platform = ('P',
			a'0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db')
		o token Thing =('thing',1,100,'A') 
	}
	ContractMessage{
	  string place='place',
	  date giveTime=2000/10/05,00:00,
	  date signTime=2000/10/01,00:00,
	  uint price=100,
	  ufixed late_deliveryIR=0.05,
	  ufixed terminatedIR=0.2,
	  uint late_days=0,
	  duration late=5 days,
	  duration period=15 days
	}
	
	Operations[
		end:change(ContractState,finish),
		end2:change(ContractState,terminate),
		terminate_pay:transfer(Buyer,price*f terminatedIR),
		transfer_own:changeString(o Thing.ownership,s Buyer.name)
	]
	
	Rule{		
		
		rule1:
		Con: !isTime(giveTime),
		Buyer transfer(Platform,price);
		
		rule2:
		Con: isDone(rule1) and timeSub(now,giveTime,1 days,<),
		Seller;
		
		rule3:
		Con: isDone(rule2) or isDone(rule7),
		Platform;
		
		rule4:
		Con: within 15 days after rule3,
		Buyer transfer_own;
		
		rule5:
		Con: isDone(rule4),
		Platform transfer(Seller,price) and end;
		
		rule6:
		Con: isDone(rule3) and isTime(getRuleTime(rule3)+15days),
		Platform transfer(Seller,price) and transfer_own and end;
		
		rule7:
		setMessage(uint late_days)
		Con: timeSub(now,giveTime,5 days,<),
		Seller transfer(Buyer,late_days*price*f late_deliveryIR);
		
		rule8:
		Con:timeSub(now,giveTime,5 days,>) and !isDone(rule7),
		Seller terminate_pay and end2;
		
		rule9:
		Con: isDone(rule8),
		Platform transfer(Buyer,price);
		
		rule10:
		Buyer terminate_pay;
		
		rule11:
		Seller terminate_pay;
		
		rule12:
		Con: isDone(rule10) or isDone(rule11),
		Platform transfer(Buyer,price) and end2
		
	}
	
	require:isDone,isTime,isTrue,transfer,timeSub;
}