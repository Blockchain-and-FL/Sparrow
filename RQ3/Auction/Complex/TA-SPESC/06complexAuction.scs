contract complexAuction {
    party group bidders {
        name: String
        amount: Money
        Bid(price: Money)
        payBid()
        payDefault()
        payCompensationB()
    }
    
    party platform {
        name: String
        amount: Money
        StartBidding()
        transferRight()
        returnThing()
        getAA()
        payCompensationP()
    }
    
    party auctioneer {
        amount: Money
        payCommission()
    }
    
    party ca {
        check(checkResult: Boolean)
    }
 
    party aa {
        aaSetResult(name: String, Compensation: Money)
    }
 
    party ra {
        pauseContract()
        restartContract()
    }
    
    thing: Thing
    BiddingStartTime: Date
    bidPrice: Money
    highestPrice: Money
    highestBidder: bidders
    BiddingStopTime: Date
    result: Boolean
    commission: Money
    defaultIR: Float
    faultName: String
    compensation: Money
    
    term no1: ca can check
    where result = checkResult.
    
    term no2: auctioneer can payCommission
    when result = true
    while transfer $commission to platform::amount
    where thing::ownership = platform.
    
    term no3: platform can StartBidding
    when after BiddingStartTime.
    
    term no4: bidders can Bid
    when after platform did StartBidding and before BiddingStopTime
    and bidPrice > highestPrice
    where highestPrice = bidPrice and highestBidder = this bidder.
    
    term no5: bidders can payBid
    when this bidder is highestBidder and within 12 hours after BiddingStopTime
    while transfer $highestPrice to platform::amount.
    
    // Terms 6 and 7 together
    term no6: platform can transferRight
    when after bidders did payBid
    while transfer $highestPrice to auctioneer::amount
    where thing::ownership = highestBidder.
    
    // Cannot be expressed
    term no8: bidders can payDefault
    // when bidders did not payBid and
    when after 12 hours after BiddingStopTime and this bidder is highestBidder
    while transfer $highestPrice * defaultIR to platform::amount.
    
    term no9: platform can returnThing
    when after bidders did payDefault
    while transfer $highestPrice * defaultIR to platform::amount
    where thing::ownership = auctioneer.
    
    // Invalid
    term no10: ra can pauseContract.
    term no11: ra can restartContract.
    
    // (12) After 3 days from the end time, if neither (4) nor (8) has been executed, the platform applies for arbitration
    // Cannot be expressed
    term no12: platform can getAA
    when after 3 days after BiddingStopTime.
    
    term no13: aa can aaSetResult
    when platform did getAA
    where faultName = name and compensation = Compensation.
    
    term no14_1: platform can payCompensationP
    when after aa did aaSetResult and faultName = platform::name
    while transfer $compensation to highestBidder.
    
    term no14_2: bidders can payCompensationB
    when after aa did aaSetResult and faultName = bidders::name
    and this bidder is highestBidder
    while transfer $compensation to platform::amount.
    
    asset Thing {
        info {
            name: String
            unit_price: Integer
            number: Integer
        }
        right {
            ownership: Right
        }
    }
}
