namespace cml.examples

import cml.generator.annotation.solidity.*

@PullPayment
contract RegularRent	
	Party lessor
	Party lessee
	Integer rent
	Integer continueRent
	Integer continueDays
	Integer despoit
	Duration payPeriod
	Duration payLate
	Duration totalPeriod
	Integer faultIR
	DateTime startTime
	DateTime payTime
	DateTime finishTime
	Boolean end
	Boolean continueResult
	String ownership
	String useRight
	
	clause rule1
		due before startTime
		party lessee
		may payOne
		
	//不完全
	//due after lessee did payOne
	clause rule2
		due before startTime
		given !end
		party lessor
		must changeUse
		
	clause rule3 
		due within payLate after clause rule2 failed
		given !end
		party lessor
		may deliveryLate
	
	//不完全
	clause rule4
		due after startTime.addDuration(payLate)
		given !end
		party lessor
		may lateFinish
	
	clause rule5
		due every payPeriod from startTime before finishTime
		party lessee
		may payRegular
		
	clause rule6
		due within payLate after payTime
		given !end
		party lessee
		may payLate
		
	clause rule7
		due after payTime.addDuration(payLate)
		given !end
		party lessor
		may backThing
		
	clause rule8
		due before startTime.addDuration(totalPeriod)
		party lessee
		may confirmContinue
		
	clause rule9
		due after lessee did confirmContinue
		given !end
		party lessor
		may setContinue
		
	//表达不了行为
	clause rule9_1
		due after lessor did setContinue
		given !end and continueResult
		party lessor
		may changeFinish
		
	clause rule9_2
		due after lessor did setContinue
		given !end and !continueResult
		party lessor
		may rejectChange
	
	clause rule10
		due after startTime.addDuration(totalPeriod)
		given !end
		party lessor
		may finishBack
		
	action init(Party _lessor,Party _lessee,Integer _rent,Integer _despoit,Duration _payPeriod,Duration _payLate,
	Duration _totalPeriod,Integer _faultIR,DateTime _startTime,DateTime _payTime,
	DateTime _finishTime,String _ownership,String _useRight,Integer _continueRent,
	Integer _continueDays)
		lessor=_lessor
		lessee=_lessee
		rent=_rent
		despoit=_despoit
		payPeriod=_payPeriod
		payLate=_payLate
		totalPeriod=_totalPeriod
		faultIR=_faultIR
		startTime=_startTime
		payTime=_payTime
		finishTime=_finishTime
		ownership=_ownership
		useRight=_useRight
		continueRent=_continueRent
		continueDays=_continueDays
		
	action payOne()
		transfer(lessor,despoit+rent)
		
	action changeUse()
		useRight='lessee'
		
	action deliveryLate(Integer latedays)
		useRight='lessee'
		transfer(lessee,faultIR*rent*latedays)
		
	action lateFinish(Integer latedays)
		transfer(lessee,faultIR*rent*latedays+rent+despoit)
		end=true
		
	action payRegular()
		transfer(lessor,rent)
		payTime=payTime.addDuration(payPeriod)
		
	action payLate(Integer latedays)
		transfer(lessor,faultIR*rent*latedays)
		
	action backThing()
		useRight='lessor'
		end = true
		
	action confirmContinue(Integer Days)
		continueDays=Days
		transfer(lessor,continueRent*continueDays)
		
	action setContinue(Boolean result)
		continueResult=result
		
	action changeFinish()
		//finishTime.addDuration(continueDays)
		
	action rejectChange()
		transfer(lessee,continueRent*continueDays)
		
	action finishBack()
		useRight='lessee'
		transfer(lessee,despoit)
		end=true
		